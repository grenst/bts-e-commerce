{"version":3,"file":"index-DRd4AmG5.js","sources":["../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../src/utils/elementUtils.ts","../../src/sources/svg-sprite.ts","../../src/components/layout/footer/footer.ts","../../node_modules/@commercetools/sdk-client-v2/dist/commercetools-sdk-client-v2.browser.esm.js","../../node_modules/@commercetools/sdk-middleware-http/dist/commercetools-sdk-middleware-http.esm.js","../../node_modules/@commercetools/sdk-middleware-auth/dist/commercetools-sdk-middleware-auth.esm.js","../../node_modules/@commercetools/platform-sdk/dist/commercetools-platform-sdk.browser.esm.js","../../src/utils/apiCommerse.ts","../../src/components/ui/button/button.ts","../../src/components/test/CommerceTest.ts","../../src/index.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export const { body } = document;\n\ninterface CreateElOptions {\n  tag?: string;\n  text?: string;\n  classes?: string[];\n  attributes?: Record<string, string>;\n  styles?: Record<string, string>;\n  parent?: HTMLElement | null;\n  children?: HTMLElement[];\n}\n\nfunction createEl(options: CreateElOptions): HTMLElement {\n  const {\n    tag = 'div',\n    text = '',\n    classes = [],\n    attributes = {},\n    // styles = {},\n    parent = null,\n    // parent = body,\n    children = [],\n  } = options;\n\n  const element = document.createElement(tag);\n  element.textContent = text;\n  element.classList.add(...classes);\n\n  if (attributes) {\n    Object.keys(attributes).forEach((key) => {\n      element.setAttribute(key, attributes[key]);\n    });\n  }\n\n  if (parent) parent.append(element);\n\n  element.append(...children);\n\n  return element;\n}\n\n/* *************************************** */\n\nfunction createSvgUse(idSvgSymbol: string, elClass: string): SVGElement {\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttribute('class', elClass);\n  const use = document.createElementNS('http://www.w3.org/2000/svg', 'use');\n  use.setAttribute('href', `${idSvgSymbol}`);\n  svg.appendChild(use);\n  return svg;\n}\n\n/* *************************************** */\n\nfunction removeAllChild(element: HTMLElement): void {\n  while (element.firstElementChild) {\n    element.removeChild(element.firstElementChild);\n  }\n}\n\n/* *************************************** */\n\nfunction shuffleArray<T>(baseArray: T[]): T[] {\n  const array = [...baseArray];\n  for (let i = array.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\n/* *************************************** */\n\nfunction createCounterID(initialValue?: number) {\n  let count = initialValue ?? 0;\n\n  return {\n    getCount: (): number => {\n      count += 1;\n      return count;\n    },\n    resetCount: (): void => {\n      count = 0;\n    },\n    loadCount: (loadValue: number): void => {\n      count = loadValue;\n    },\n  };\n}\n\n/* *************************************** */\n\nfunction getMaxID<T extends { id: string | number }>(initialData: T[]): number {\n  const maxId = initialData.reduce(\n    (max, item) => Math.max(max, Number(item.id)),\n    0\n  );\n  return maxId;\n}\n\n/* *************************************** */\n\nconst getUUID = (): string => self.crypto.randomUUID();\n\n/* *************************************** */\n\n// function hexaDecimal() {\n//   return Math.floor(Math.random() * 256)\n//     .toString(16)\n//     .padStart(2, '0');\n// }\n// function getRandomColor() {\n//   return `#${hexaDecimal()}${hexaDecimal()}${hexaDecimal()}`;\n// }\n\n// function rgbToHex(rgbStr: string) {\n//   const decimalArr = rgbStr.slice(4, -1).split(',');\n\n//   const hexArr = decimalArr.map((item) => {\n//     const num = Number(item.trim());\n//     return num.toString(16).padStart(2, '0');\n//   });\n\n//   return `#${hexArr.join('')}`;\n// }\n\n/* *************************************** */\n\nexport {\n  createEl,\n  createSvgUse,\n  removeAllChild,\n  shuffleArray,\n  // getRandomIntegerArr,\n  createCounterID,\n  getMaxID,\n  getUUID,\n  // getRandomColor,\n  // rgbToHex,\n};\n","import { body } from '../utils/elementUtils';\n\nconst svgSprite = `\n    <svg style=\"display: none;\">\n\n      <symbol id=\"github\" fill=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"m12 .5c-6.63 0-12 5.28-12 11.792 0 5.211 3.438 9.63 8.205 11.188.6.111.82-.254.82-.567 0-.28-.01-1.022-.015-2.005-3.338.711-4.042-1.582-4.042-1.582-.546-1.361-1.335-1.725-1.335-1.725-1.087-.731.084-.716.084-.716 1.205.082 1.838 1.215 1.838 1.215 1.07 1.803 2.809 1.282 3.495.981.108-.763.417-1.282.76-1.577-2.665-.295-5.466-1.309-5.466-5.827 0-1.287.465-2.339 1.235-3.164-.135-.298-.54-1.497.105-3.121 0 0 1.005-.316 3.3 1.209.96-.262 1.98-.392 3-.398 1.02.006 2.04.136 3 .398 2.28-1.525 3.285-1.209 3.285-1.209.645 1.624.24 2.823.12 3.121.765.825 1.23 1.877 1.23 3.164 0 4.53-2.805 5.527-5.475 5.817.42.354.81 1.077.81 2.182 0 1.578-.015 2.846-.015 3.229 0 .309.21.678.825.56 4.801-1.548 8.236-5.97 8.236-11.173 0-6.512-5.373-11.792-12-11.792z\"/>\n      </symbol>\n\n      <symbol id=\"rss\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 552.8 205.3\">\n        <style>\n          .st0{fill:none}.st5{fill:#ffffff;stroke:currentColor;stroke-width:4;stroke-miterlimit:10}.st6,.st7{fill:none;stroke:none;stroke-width:4;stroke-miterlimit:10}.st8,.st9{clip-path:url(#SVGID_10_)}.st9{fill:none;stroke:none;stroke-width:4;stroke-miterlimit:10}\n        </style>\n        <path d=\"M285.4 68l26.3-1.7c.6 4.3 1.7 7.5 3.5 9.8 2.9 3.6 6.9 5.4 12.2 5.4 3.9 0 7-.9 9.1-2.8 2-1.5 3.2-3.9 3.2-6.4 0-2.4-1.1-4.7-3-6.2-2-1.8-6.7-3.6-14.1-5.2-12.1-2.7-20.8-6.3-25.9-10.9-5.1-4.3-8-10.6-7.8-17.3 0-4.6 1.4-9.2 4-13 3-4.3 7.1-7.7 12-9.6 5.3-2.3 12.7-3.5 22-3.5 11.4 0 20.1 2.1 26.1 6.4 6 4.2 9.6 11 10.7 20.3l-26 1.5c-.7-4-2.1-6.9-4.4-8.8s-5.3-2.8-9.2-2.8c-3.2 0-5.6.7-7.2 2-1.5 1.2-2.5 3-2.4 5 0 1.5.8 2.9 2 3.8 1.3 1.2 4.4 2.3 9.3 3.3 12.1 2.6 20.7 5.2 26 7.9 5.3 2.7 9.1 6 11.4 9.9 2.4 4 3.6 8.6 3.5 13.3 0 5.6-1.6 11.2-4.8 15.9-3.3 4.9-7.9 8.7-13.3 11-5.7 2.5-12.9 3.8-21.5 3.8-15.2 0-25.7-2.9-31.6-8.8S286.1 77 285.4 68zM6.3 97.6V8.2h46.1c8.5 0 15.1.7 19.6 2.2 4.4 1.4 8.3 4.3 10.9 8.2 2.9 4.3 4.3 9.3 4.2 14.5.3 8.8-4.2 17.2-11.9 21.6-3 1.7-6.3 2.9-9.7 3.5 2.5.7 5 1.9 7.2 3.3 1.7 1.4 3.1 3 4.4 4.7 1.5 1.7 2.8 3.6 3.9 5.6l13.4 25.9H63L48.2 70.2c-1.9-3.5-3.5-5.8-5-6.9-2-1.4-4.4-2.1-6.8-2.1H34v36.3H6.3zM34 44.4h11.7c2.5-.2 4.9-.6 7.3-1.2 1.8-.3 3.4-1.3 4.5-2.8 2.7-3.6 2.3-8.7-1-11.8-1.8-1.5-5.3-2.3-10.3-2.3H34v18.1zM0 174.2l26.3-1.7c.6 4.3 1.7 7.5 3.5 9.8 2.8 3.6 6.9 5.5 12.2 5.5 3.9 0 7-.9 9.1-2.8 2-1.6 3.2-3.9 3.2-6.4 0-2.4-1.1-4.7-3-6.2-2-1.8-6.7-3.6-14.2-5.2-12.1-2.7-20.8-6.3-25.9-10.9-5.1-4.3-8-10.6-7.8-17.3 0-4.6 1.4-9.2 4-13 3-4.3 7.1-7.7 12-9.6 5.3-2.3 12.7-3.5 22-3.5 11.4 0 20.1 2.1 26.1 6.4s9.5 11 10.6 20.3l-26 1.5c-.7-4-2.1-6.9-4.4-8.8-2.2-1.9-5.3-2.8-9.2-2.7-3.2 0-5.6.7-7.2 2.1-1.6 1.2-2.5 3-2.4 5 0 1.5.8 2.9 2 3.8 1.3 1.2 4.4 2.3 9.3 3.3 12.1 2.6 20.7 5.2 26 7.9 5.3 2.7 9.1 6 11.4 9.9 2.4 4 3.6 8.6 3.6 13.2 0 5.6-1.7 11.1-4.8 15.8-3.3 4.9-7.9 8.7-13.3 11-5.7 2.5-12.9 3.8-21.5 3.8-15.2 0-25.7-2.9-31.6-8.8-5.9-6-9.2-13.4-10-22.4z\"/><path d=\"M133 167.2l24.2 7.3c-1.3 6.1-4 11.9-7.7 17-3.4 4.5-7.9 8-13 10.3-5.2 2.3-11.8 3.5-19.8 3.5-9.7 0-17.7-1.4-23.8-4.2-6.2-2.8-11.5-7.8-16-14.9-4.5-7.1-6.7-16.2-6.7-27.3 0-14.8 3.9-26.2 11.8-34.1s19-11.9 33.4-11.9c11.3 0 20.1 2.3 26.6 6.8 6.4 4.6 11.2 11.6 14.4 21l-24.4 5.4c-.6-2.1-1.5-4.2-2.7-6-1.5-2.1-3.4-3.7-5.7-4.9-2.3-1.2-4.9-1.7-7.5-1.7-6.3 0-11.1 2.5-14.4 7.6-2.5 3.7-3.8 9.6-3.8 17.6 0 9.9 1.5 16.7 4.5 20.4 3 3.7 7.2 5.5 12.7 5.5 5.3 0 9.3-1.5 12-4.4 2.7-3.1 4.7-7.4 5.9-13zm56.5-52.8h27.6v31.3h30.2v-31.3h27.8v89.4h-27.8v-36.2h-30.2v36.2h-27.6v-89.4z\"/>\n        <path d=\"M271.3 159.1c0-14.6 4.1-26 12.2-34.1 8.1-8.1 19.5-12.2 34-12.2 14.9 0 26.3 4 34.4 12S364 144 364 158.4c0 10.5-1.8 19-5.3 25.7-3.4 6.6-8.7 12-15.2 15.6-6.7 3.7-15 5.6-24.9 5.6-10.1 0-18.4-1.6-25-4.8-6.8-3.4-12.4-8.7-16.1-15.2-4.1-7-6.2-15.7-6.2-26.2zm27.6.1c0 9 1.7 15.5 5 19.5 3.3 3.9 7.9 5.9 13.7 5.9 5.9 0 10.5-1.9 13.8-5.8s4.9-10.8 4.9-20.8c0-8.4-1.7-14.6-5.1-18.4-3.4-3.9-8-5.8-13.8-5.8-5.1-.2-10 2-13.4 5.9-3.4 3.9-5.1 10.4-5.1 19.5zm93.4-.1c0-14.6 4.1-26 12.2-34.1 8.1-8.1 19.5-12.2 34-12.2 14.9 0 26.4 4 34.4 12S485 144 485 158.4c0 10.5-1.8 19-5.3 25.7-3.4 6.6-8.7 12-15.2 15.6-6.7 3.7-15 5.6-24.9 5.6-10.1 0-18.4-1.6-25-4.8-6.8-3.4-12.4-8.7-16.1-15.2-4.1-7-6.2-15.7-6.2-26.2zm27.6.1c0 9 1.7 15.5 5 19.5 3.3 3.9 7.9 5.9 13.7 5.9 5.9 0 10.5-1.9 13.8-5.8 3.3-3.9 4.9-10.8 4.9-20.8 0-8.4-1.7-14.6-5.1-18.4-3.4-3.9-8-5.8-13.8-5.8-5.1-.2-10.1 2-13.4 5.9-3.4 3.9-5.1 10.4-5.1 19.5z\"/><path d=\"M482.1 114.4h27.6v67.4h43.1v22H482v-89.4z\"/>\n        <ellipse transform=\"rotate(-37.001 420.46 67.88)\" class=\"st0\" cx=\"420.5\" cy=\"67.9\" rx=\"63\" ry=\"51.8\"/>\n        <defs>\n          <ellipse id=\"SVGID_1_\" transform=\"rotate(-37.001 420.46 67.88)\" cx=\"420.5\" cy=\"67.9\" rx=\"63\" ry=\"51.8\"/>\n        </defs>\n        <g class=\"st1\"><path transform=\"rotate(-37.001 420.82 68.353)\" class=\"st0\" d=\"M330.9-14.2h179.8v165.1H330.9z\"/>\n        <g id=\"Layer_2_1_\"><defs><path id=\"SVGID_3_\" transform=\"rotate(-37.001 420.82 68.353)\" d=\"M330.9-14.2h179.8v165.1H330.9z\"/>\n        </defs>\n        <g id=\"Layer_1-2\" class=\"st2\">\n        <ellipse transform=\"rotate(-37.001 420.46 67.88)\" class=\"st0\" cx=\"420.5\" cy=\"67.9\" rx=\"63\" ry=\"51.8\"/>\n        <defs>\n        <ellipse id=\"SVGID_5_\" transform=\"rotate(-37.001 420.46 67.88)\" cx=\"420.5\" cy=\"67.9\" rx=\"63\" ry=\"51.8\"/>\n        </defs>\n        <path transform=\"rotate(-37 420.799 68.802)\" class=\"st0\" d=\"M357.8 17h125.9v103.7H357.8z\"/>\n        <defs>\n        <path id=\"SVGID_7_\" transform=\"rotate(-37 420.799 68.802)\" d=\"M357.8 17h125.9v103.7H357.8z\"/>\n        </defs>\n        <g class=\"st4\"><ellipse transform=\"rotate(-37.001 420.46 67.88)\" class=\"st5\" cx=\"420.5\" cy=\"67.9\" rx=\"63\" ry=\"51.8\"/>\n        </g>\n        <path transform=\"rotate(-37 420.799 68.802)\" class=\"st6\" d=\"M357.8 17h125.9v103.7H357.8z\"/>\n        <ellipse transform=\"rotate(-37.001 420.46 67.88)\" class=\"st7\" cx=\"420.5\" cy=\"67.9\" rx=\"63\" ry=\"51.8\"/>\n        <path transform=\"rotate(-37 420.799 68.802)\" class=\"st0\" d=\"M357.8 17h125.9v103.7H357.8z\"/>\n        <defs>\n        <path id=\"SVGID_9_\" transform=\"rotate(-37 420.799 68.802)\" d=\"M357.8 17h125.9v103.7H357.8z\"/>\n        </defs>\n        <g class=\"st8\">\n        <ellipse transform=\"rotate(-37.001 420.46 67.88)\" class=\"st5\" cx=\"420.5\" cy=\"67.9\" rx=\"63\" ry=\"51.8\"/>\n        </g>\n        <path transform=\"rotate(-37 420.799 68.802)\" class=\"st9\" d=\"M357.8 17h125.9v103.7H357.8z\"/>\n        <path transform=\"rotate(-37.001 420.82 68.353)\" class=\"st7\" d=\"M330.9-14.2h179.8v165.1H330.9z\"/>\n        </g>\n        <ellipse transform=\"rotate(-37.001 420.46 67.88)\" class=\"st7\" cx=\"420.5\" cy=\"67.9\" rx=\"63\" ry=\"51.8\"/>\n        <path d=\"M392.4 61.3l10-7 12.3 17.5c2.1 2.8 3.7 5.8 4.9 9.1.7 2.5.5 5.2-.5 7.6-1.3 3-3.4 5.5-6.2 7.3-3.3 2.3-6.1 3.6-8.5 4-2.3.4-4.7 0-6.9-1-2.4-1.2-4.5-2.9-6.1-5.1l8.6-8c.7 1.1 1.6 2.1 2.6 2.9.7.5 1.5.8 2.4.8.7 0 1.4-.3 1.9-.7 1-.6 1.7-1.8 1.6-3-.3-1.7-1-3.4-2.1-4.7l-14-19.7zm30 11.1l9.1-7.2c1 1.2 2.3 2.1 3.7 2.6 2 .6 4.1.2 5.8-1.1 1.2-.8 2.2-1.9 2.6-3.3.6-1.8-.4-3.8-2.2-4.4-.3-.1-.6-.2-.9-.2-1.2-.1-3.3.4-6.4 1.7-5.1 2.1-9.1 2.9-12.1 2.6-2.9-.3-5.6-1.8-7.2-4.3-1.2-1.7-1.8-3.7-1.9-5.7 0-2.3.6-4.6 1.9-6.5 1.9-2.7 4.2-5 7-6.8 4.2-2.9 7.9-4.3 11.1-4.3 3.2 0 6.2 1.5 9 4.6l-9 7.1c-1.8-2.3-5.2-2.8-7.5-1l-.3.3c-1 .6-1.7 1.5-2.1 2.6-.3.8-.1 1.7.4 2.4.4.5 1 .9 1.7.9.8.1 2.2-.3 4.2-1.2 5-2.1 8.8-3.3 11.4-3.7 2.2-.4 4.5-.2 6.6.7 1.9.8 3.5 2.2 4.6 3.9 1.4 2 2.2 4.4 2.3 6.9.1 2.6-.6 5.1-2 7.3-1.8 2.7-4.1 5-6.8 6.8-5.5 3.8-10 5.4-13.6 4.8-3.9-.6-7.1-2.6-9.4-5.5z\"/>\n        </g></g>\n      </symbol>\n\n    </svg>`;\n\nconst svgSpriteElement = () => {\n  const parser = new DOMParser();\n  const svgDoc = parser.parseFromString(svgSprite, 'image/svg+xml');\n  const svgElement = svgDoc.documentElement;\n  body.append(svgElement);\n};\n\nexport default svgSpriteElement;\n","import './footer.scss';\n\nimport { createEl, createSvgUse } from '../../../utils/elementUtils';\n\nconst createFooter = (parent: HTMLElement) => {\n  const footer = createEl({ tag: 'footer', classes: ['footer'], parent });\n  const footerContainer = createEl({\n    classes: ['footer-container'],\n    parent: footer,\n  });\n  const footerLinkGithub = createEl({\n    tag: 'a',\n    classes: ['footer-link', 'footer-container__github'],\n    attributes: {\n      target: '_blank',\n      href: 'https://github.com/grenst/bts-e-commerce/',\n    },\n    parent: footerContainer,\n  });\n  const svgGithub = createSvgUse('#github', 'footer-svg_github');\n  footerLinkGithub.append(svgGithub);\n\n  createEl({\n    tag: 'p',\n    text: \"2025 Kat's Cats\",\n    classes: ['copyright'],\n    parent: footerContainer,\n  });\n\n  const footerLinkRSS = createEl({\n    tag: 'a',\n    classes: ['footer-link', 'footer-container__rss'],\n    attributes: {\n      target: '_blank',\n      href: 'https://rs.school/courses/javascript-ru',\n    },\n    parent: footerContainer,\n  });\n  const svgRSS = createSvgUse('#rss', 'footer-svg_rss');\n  footerLinkRSS.append(svgRSS);\n};\n\nexport default createFooter;\n","import { Buffer } from 'buffer/';\n\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\nfunction isDefined(value) {\n  return typeof value !== 'undefined' && value !== null;\n}\nfunction clean(value) {\n  if (!isDefined(value)) return '';\n  if (typeof value == 'string') return value;\n  return Object.fromEntries(Object.entries(value).filter(([_, value]) => ![null, undefined, ''].includes(value)));\n}\nfunction urlParser(url) {\n  const object = {};\n  const data = new URLSearchParams(url);\n  for (let x of data.keys()) {\n    if (data.getAll(x).length > 1) {\n      object[x] = data.getAll(x);\n    } else {\n      object[x] = data.get(x);\n    }\n  }\n  return object;\n}\nfunction urlStringifier(object) {\n  object = clean(object);\n  if (!object) return '';\n  const params = new URLSearchParams(object);\n  for (const [key, value] of Object.entries(object)) {\n    if (Array.isArray(value)) {\n      params.delete(key);\n      value.filter(isDefined).forEach(v => params.append(key, v));\n    }\n  }\n  return params.toString();\n}\nfunction parseURLString(url, parser = urlParser) {\n  return parser(url);\n}\nfunction stringifyURLString(object, stringifier = urlStringifier) {\n  return stringifier(object);\n}\n\nvar METHODS = ['ACL', 'BIND', 'CHECKOUT', 'CONNECT', 'COPY', 'DELETE', 'GET', 'HEAD', 'LINK', 'LOCK', 'M-SEARCH', 'MERGE', 'MKACTIVITY', 'MKCALENDAR', 'MKCOL', 'MOVE', 'NOTIFY', 'OPTIONS', 'PATCH', 'POST', 'PROPFIND', 'PROPPATCH', 'PURGE', 'PUT', 'REBIND', 'REPORT', 'SEARCH', 'SOURCE', 'SUBSCRIBE', 'TRACE', 'UNBIND', 'UNLINK', 'UNLOCK', 'UNSUBSCRIBE'];\n\n/**\n * @throws {Error}\n */\nfunction validate(funcName, request, options = {\n  allowedMethods: METHODS\n}) {\n  if (!request) throw new Error(`The \"${funcName}\" function requires a \"Request\" object as an argument. See https://commercetools.github.io/nodejs/sdk/Glossary.html#clientrequest`);\n  if (typeof request.uri !== 'string') throw new Error(`The \"${funcName}\" Request object requires a valid uri. See https://commercetools.github.io/nodejs/sdk/Glossary.html#clientrequest`);\n  if (!options.allowedMethods.includes(request.method)) throw new Error(`The \"${funcName}\" Request object requires a valid method. See https://commercetools.github.io/nodejs/sdk/Glossary.html#clientrequest`);\n}\n\nlet _options;\nconst PAGE_LIMIT = 20;\nfunction compose(...funcs) {\n  funcs = funcs.filter(func => typeof func === 'function');\n  if (funcs.length === 1) return funcs[0];\n  return funcs.reduce((a, b) => (...args) => a(b(...args)));\n}\nfunction process$1(request, fn, processOpt) {\n  validate('process', request, {\n    allowedMethods: ['GET']\n  });\n  if (typeof fn !== 'function') throw new Error('The \"process\" function accepts a \"Function\" as a second argument that returns a Promise. See https://commercetools.github.io/nodejs/sdk/api/sdkClient.html#processrequest-processfn-options');\n\n  // Set default process options\n  const opt = {\n    limit: PAGE_LIMIT,\n    // defaults\n    total: Number.POSITIVE_INFINITY,\n    accumulate: true,\n    ...processOpt\n  };\n  return new Promise((resolve, reject) => {\n    let _path,\n      _queryString = '';\n    if (request && request.uri) {\n      const [path, queryString] = request.uri.split('?');\n      _path = path;\n      _queryString = queryString;\n    }\n    // const requestQuery = { ...qs.parse(_queryString) }\n    // const requestQuery = { ...Object.fromEntries(new URLSearchParams(_queryString)) }\n    const requestQuery = {\n      ...parseURLString(_queryString)\n    };\n    const query = {\n      // defaults\n      limit: opt.limit,\n      // merge given query params\n      ...requestQuery\n    };\n    let hasFirstPageBeenProcessed = false;\n    let itemsToGet = opt.total;\n    const processPage = async (lastId, acc = []) => {\n      // Use the lesser value between limit and itemsToGet in query\n      const limit = query.limit < itemsToGet ? query.limit : itemsToGet;\n      // const originalQueryString = qs.stringify({ ...query, limit }, qsOptions)\n      const originalQueryString = stringifyURLString({\n        ...query,\n        limit\n      });\n      const enhancedQuery = {\n        sort: opt.sort || 'id asc',\n        withTotal: false,\n        ...(lastId ? {\n          where: `id > \"${lastId}\"`\n        } : {})\n      };\n\n      // const enhancedQueryString = qs.stringify(enhancedQuery, qsOptions)\n      const enhancedQueryString = stringifyURLString(enhancedQuery);\n      const enhancedRequest = {\n        ...request,\n        uri: `${_path}?${enhancedQueryString}&${originalQueryString}`\n      };\n      try {\n        const payload = await createClient(_options).execute(enhancedRequest);\n        const {\n          results,\n          count: resultsLength\n        } = payload.body;\n        if (!resultsLength && hasFirstPageBeenProcessed) {\n          return resolve(acc || []);\n        }\n        const result = await Promise.resolve(fn(payload));\n        let accumulated = [];\n        hasFirstPageBeenProcessed = true;\n        if (opt.accumulate) accumulated = acc.concat(result || []);\n        itemsToGet -= resultsLength;\n        // If there are no more items to get, it means the total number\n        // of items in the original request have been fetched so we\n        // resolve the promise.\n        // Also, if we get less results in a page then the limit set it\n        // means that there are no more pages and that we can finally\n        // resolve the promise.\n        if (resultsLength < query.limit || !itemsToGet) {\n          return resolve(accumulated || []);\n        }\n        const last = results[resultsLength - 1];\n        const newLastId = last && last.id;\n        processPage(newLastId, accumulated);\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    // Start iterating through pages\n    processPage();\n  });\n}\nfunction createClient(options) {\n  _options = options;\n  if (!options) throw new Error('Missing required options');\n  if (options.middlewares && !Array.isArray(options.middlewares)) throw new Error('Middlewares should be an array');\n  if (!options.middlewares || !Array.isArray(options.middlewares) || !options.middlewares.length) throw new Error('You need to provide at least one middleware');\n  return {\n    /**\n     * Given a request object,\n     */\n    process: process$1,\n    execute(request) {\n      validate('exec', request);\n      return new Promise((resolve, reject) => {\n        const resolver = (rq, rs) => {\n          // Note: pick the promise `resolve` and `reject` function from\n          // the response object. This is not necessary the same function\n          // given from the `new Promise` constructor, as middlewares could\n          // override those functions for custom behaviours.\n          if (rs.error) rs.reject(rs.error);else {\n            const resObj = {\n              body: rs.body || {},\n              statusCode: rs.statusCode\n            };\n            if (rs.headers) resObj.headers = rs.headers;\n            if (rs.request) resObj.request = rs.request;\n            rs.resolve(resObj);\n          }\n        };\n        const dispatch = compose(...options.middlewares)(resolver);\n        dispatch(request,\n        // Initial response shape\n        {\n          resolve,\n          reject,\n          body: undefined,\n          error: undefined\n        });\n      });\n    }\n  };\n}\n\nfunction buildRequestForClientCredentialsFlow(options) {\n  if (!options) throw new Error('Missing required options');\n  if (!options.host) throw new Error('Missing required option (host)');\n  if (!options.projectKey) throw new Error('Missing required option (projectKey)');\n  if (!options.credentials) throw new Error('Missing required option (credentials)');\n  const {\n    clientId,\n    clientSecret\n  } = options.credentials;\n  if (!(clientId && clientSecret)) throw new Error('Missing required credentials (clientId, clientSecret)');\n  const scope = options.scopes ? options.scopes.join(' ') : undefined;\n  const basicAuth = Buffer.from(`${clientId}:${clientSecret}`).toString('base64');\n  // This is mostly useful for internal testing purposes to be able to check\n  // other oauth endpoints.\n  const oauthUri = options.oauthUri || '/oauth/token';\n  const url = options.host.replace(/\\/$/, '') + oauthUri;\n  const body = `grant_type=client_credentials${scope ? `&scope=${scope}` : ''}`;\n  return {\n    basicAuth,\n    url,\n    body\n  };\n}\nfunction buildRequestForPasswordFlow(options) {\n  if (!options) throw new Error('Missing required options');\n  if (!options.host) throw new Error('Missing required option (host)');\n  if (!options.projectKey) throw new Error('Missing required option (projectKey)');\n  if (!options.credentials) throw new Error('Missing required option (credentials)');\n  const {\n    clientId,\n    clientSecret,\n    user\n  } = options.credentials;\n  const pKey = options.projectKey;\n  if (!(clientId && clientSecret && user)) throw new Error('Missing required credentials (clientId, clientSecret, user)');\n  const {\n    username,\n    password\n  } = user;\n  if (!(username && password)) throw new Error('Missing required user credentials (username, password)');\n  const scope = (options.scopes || []).join(' ');\n  const scopeStr = scope ? `&scope=${scope}` : '';\n  const basicAuth = Buffer.from(`${clientId}:${clientSecret}`).toString('base64');\n  /**\n   * This is mostly useful for internal testing purposes to be able to check\n   * other oauth endpoints.\n   */\n  const oauthUri = options.oauthUri || `/oauth/${pKey}/customers/token`;\n  const url = options.host.replace(/\\/$/, '') + oauthUri;\n  // encode username and password as requested by the system\n  const body = `grant_type=password&username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}${scopeStr}`;\n  return {\n    basicAuth,\n    url,\n    body\n  };\n}\nfunction buildRequestForRefreshTokenFlow(options) {\n  if (!options) throw new Error('Missing required options');\n  if (!options.host) throw new Error('Missing required option (host)');\n  if (!options.projectKey) throw new Error('Missing required option (projectKey)');\n  if (!options.credentials) throw new Error('Missing required option (credentials)');\n  if (!options.refreshToken) throw new Error('Missing required option (refreshToken)');\n  const {\n    clientId,\n    clientSecret\n  } = options.credentials;\n  if (!(clientId && clientSecret)) throw new Error('Missing required credentials (clientId, clientSecret)');\n  const basicAuth = Buffer.from(`${clientId}:${clientSecret}`).toString('base64');\n  // This is mostly useful for internal testing purposes to be able to check\n  // other oauth endpoints.\n  const oauthUri = options.oauthUri || '/oauth/token';\n  const url = options.host.replace(/\\/$/, '') + oauthUri;\n  const body = `grant_type=refresh_token&refresh_token=${encodeURIComponent(options.refreshToken)}`;\n  return {\n    basicAuth,\n    url,\n    body\n  };\n}\nfunction buildRequestForAnonymousSessionFlow(options) {\n  if (!options) throw new Error('Missing required options');\n  if (!options.projectKey) throw new Error('Missing required option (projectKey)');\n  const pKey = options.projectKey;\n  options.oauthUri = options.oauthUri || `/oauth/${pKey}/anonymous/token`;\n  const result = buildRequestForClientCredentialsFlow(options);\n  if (options.credentials.anonymousId) result.body += `&anonymous_id=${options.credentials.anonymousId}`;\n  return {\n    ...result\n  };\n}\n\nfunction mergeAuthHeader(token, req) {\n  return {\n    ...req,\n    headers: {\n      ...req.headers,\n      Authorization: `Bearer ${token}`\n    }\n  };\n}\nfunction calculateExpirationTime(expiresIn) {\n  return Date.now() +\n  // Add a gap of 5 minutes before expiration time.\n  expiresIn * 1000 - 5 * 60 * 1000;\n}\nasync function executeRequest({\n  fetcher,\n  url,\n  basicAuth,\n  body,\n  tokenCache,\n  requestState,\n  pendingTasks,\n  response,\n  tokenCacheKey\n}) {\n  try {\n    const _res = await fetcher(url, {\n      method: 'POST',\n      headers: {\n        Authorization: `Basic ${basicAuth}`,\n        'Content-Length': Buffer.byteLength(body).toString(),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body\n    });\n    if (_res.ok) {\n      const {\n        access_token: token,\n        expires_in: expiresIn,\n        refresh_token: refreshToken\n      } = await _res.json();\n      const expirationTime = calculateExpirationTime(expiresIn);\n\n      // cache new generated token\n      tokenCache.set({\n        token,\n        expirationTime,\n        refreshToken\n      }, tokenCacheKey);\n\n      // Dispatch all pending requests\n      requestState.set(false);\n\n      /**\n       * Freeze and copy pending queue, reset original one for accepting\n       * new pending tasks\n       */\n      const executionQueue = pendingTasks.slice();\n      pendingTasks = [];\n      executionQueue.forEach(task => {\n        // Assign the new token in the request header\n        const requestWithAuth = mergeAuthHeader(token, task.request);\n        /**\n         * console.log('test', cache, pendingTasks)\n         * Continue by calling the task's own next function\n         */\n        task.next(requestWithAuth, task.response);\n      });\n      return;\n    }\n\n    // Handle error response\n    let parsed;\n    const text = await _res.text();\n    try {\n      parsed = JSON.parse(text);\n    } catch (error) {\n      /* noop */\n    }\n    const error = new Error(parsed ? parsed.message : text);\n    if (parsed) error.body = parsed;\n\n    /**\n     * to notify that token is either fetched or failed\n     * in the below case token failed to be fetched\n     * and reset requestState to false\n     * so requestState could be shared between multi authMiddlewareBase functions\n     */\n    requestState.set(false);\n    response.reject(error);\n  } catch (error) {\n    /**\n     * to notify that token is either fetched or failed\n     * in the below case token failed to be fetched\n     * and reset requestState to false\n     * so requestState could be shared between multi authMiddlewareBase functions\n     */\n    requestState.set(false);\n    if (response && typeof response.reject === 'function') response.reject(error);\n  }\n}\nfunction authMiddlewareBase({\n  request,\n  response,\n  url,\n  basicAuth,\n  body,\n  pendingTasks,\n  requestState,\n  tokenCache,\n  tokenCacheKey,\n  fetch: fetcher\n}, next, userOptions) {\n  if (!fetcher && typeof fetch === 'undefined') throw new Error('`fetch` is not available. Please pass in `fetch` as an option or have it globally available.');\n  if (!fetcher) fetcher = fetch;\n  // Check if there is already a `Authorization` header in the request.\n  // If so, then go directly to the next middleware.\n  if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {\n    next(request, response);\n    return;\n  }\n  // If there was a token in the tokenCache, and it's not expired, append\n  // the token in the `Authorization` header.\n  const tokenObj = tokenCache.get(tokenCacheKey);\n  if (tokenObj && tokenObj.token && Date.now() < tokenObj.expirationTime) {\n    const requestWithAuth = mergeAuthHeader(tokenObj.token, request);\n    next(requestWithAuth, response);\n    return;\n  }\n\n  /**\n   * Keep pending tasks until a token is fetched\n   * Save next function as well, to call it once the token has been fetched, which prevents\n   * unexpected behaviour in a context in which the next function uses global vars\n   * or Promises to capture the token to hand it to other libraries, e.g. Apollo\n   */\n  pendingTasks.push({\n    request,\n    response,\n    next\n  });\n\n  // If a token is currently being fetched, just wait ;)\n  if (requestState.get()) return;\n\n  // Mark that a token is being fetched\n  requestState.set(true);\n\n  /**\n   * If there was a refreshToken in the tokenCache, and there was an expired\n   * token or no token in the tokenCache, use the refreshToken flow\n   */\n  if (tokenObj && tokenObj.refreshToken && (!tokenObj.token || tokenObj.token && Date.now() > tokenObj.expirationTime)) {\n    if (!userOptions) throw new Error('Missing required options');\n    executeRequest({\n      fetcher,\n      ...buildRequestForRefreshTokenFlow({\n        ...userOptions,\n        refreshToken: tokenObj.refreshToken\n      }),\n      tokenCacheKey,\n      tokenCache,\n      requestState,\n      pendingTasks,\n      response\n    });\n    return;\n  }\n\n  // Token and refreshToken are not present or invalid. Request a new token...\n  executeRequest({\n    fetcher,\n    url,\n    basicAuth,\n    body,\n    tokenCacheKey,\n    tokenCache,\n    requestState,\n    pendingTasks,\n    response\n  });\n}\n\nfunction store(initVal) {\n  let value = initVal;\n  return {\n    get: TokenCacheOption => value,\n    set: (val, TokenCacheOption) => {\n      value = val;\n    }\n  };\n}\n\nfunction createAuthMiddlewareForAnonymousSessionFlow$1(options) {\n  const tokenCache = options.tokenCache || store({\n    token: '',\n    expirationTime: -1\n  });\n  const pendingTasks = [];\n  const requestState = store(false);\n  return next => (request, response) => {\n    // Check if there is already a `Authorization` header in the request.\n    // If so, then go directly to the next middleware.\n    if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {\n      next(request, response);\n      return;\n    }\n    const params = {\n      request,\n      response,\n      ...buildRequestForAnonymousSessionFlow(options),\n      pendingTasks,\n      requestState,\n      tokenCache,\n      fetch: options.fetch\n    };\n    authMiddlewareBase(params, next, options);\n  };\n}\n\nfunction buildTokenCacheKey(options) {\n  return {\n    clientId: options.credentials.clientId,\n    host: options.host,\n    projectKey: options.projectKey\n  };\n}\n\nfunction createAuthMiddlewareForClientCredentialsFlow$1(options) {\n  const tokenCache = options.tokenCache || store({\n    token: '',\n    expirationTime: -1\n  });\n  const requestState = store(false);\n  const pendingTasks = [];\n  return next => (request, response) => {\n    // Check if there is already a `Authorization` header in the request.\n    // If so, then go directly to the next middleware.\n    if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {\n      next(request, response);\n      return;\n    }\n    const params = {\n      request,\n      response,\n      ...buildRequestForClientCredentialsFlow(options),\n      pendingTasks,\n      requestState,\n      tokenCache,\n      tokenCacheKey: buildTokenCacheKey(options),\n      fetch: options.fetch\n    };\n    authMiddlewareBase(params, next);\n  };\n}\n\nfunction createAuthMiddlewareWithExistingToken$1(authorization = '', options = {}) {\n  return next => (request, response) => {\n    if (typeof authorization !== 'string') throw new Error('authorization must be a string');\n    const force = options.force === undefined ? true : options.force;\n\n    /** The request will not be modified if:\n     *  1. no argument is passed\n     *  2. force is false and authorization header exists\n     */\n    if (!authorization || (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) && force === false) {\n      return next(request, response);\n    }\n    const requestWithAuth = {\n      ...request,\n      headers: {\n        ...request.headers,\n        Authorization: authorization\n      }\n    };\n    return next(requestWithAuth, response);\n  };\n}\n\nfunction createAuthMiddlewareForPasswordFlow$1(options) {\n  const tokenCache = options.tokenCache || store({});\n  const pendingTasks = [];\n  const requestState = store(false);\n  return next => (request, response) => {\n    // Check if there is already a `Authorization` header in the request.\n    // If so, then go directly to the next middleware.\n    if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {\n      next(request, response);\n      return;\n    }\n    const params = {\n      request,\n      response,\n      ...buildRequestForPasswordFlow(options),\n      pendingTasks,\n      requestState,\n      tokenCache,\n      fetch: options.fetch\n    };\n    authMiddlewareBase(params, next, options);\n  };\n}\n\nfunction createAuthMiddlewareForRefreshTokenFlow$1(options) {\n  const tokenCache = options.tokenCache || store({\n    token: '',\n    expirationTime: -1\n  });\n  const pendingTasks = [];\n  const requestState = store(false);\n  return next => (request, response) => {\n    // Check if there is already a `Authorization` header in the request.\n    // If so, then go directly to the next middleware.\n    if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {\n      next(request, response);\n      return;\n    }\n    const params = {\n      request,\n      response,\n      ...buildRequestForRefreshTokenFlow(options),\n      pendingTasks,\n      requestState,\n      tokenCache,\n      fetch: options.fetch\n    };\n    authMiddlewareBase(params, next);\n  };\n}\n\nvar authMiddlewares = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createAuthMiddlewareForAnonymousSessionFlow: createAuthMiddlewareForAnonymousSessionFlow$1,\n  createAuthMiddlewareForClientCredentialsFlow: createAuthMiddlewareForClientCredentialsFlow$1,\n  createAuthMiddlewareWithExistingToken: createAuthMiddlewareWithExistingToken$1,\n  createAuthMiddlewareForPasswordFlow: createAuthMiddlewareForPasswordFlow$1,\n  createAuthMiddlewareForRefreshTokenFlow: createAuthMiddlewareForRefreshTokenFlow$1\n});\n\nfunction createCorrelationIdMiddleware(options) {\n  return next => (request, response) => {\n    const nextRequest = {\n      ...request,\n      headers: {\n        ...request.headers,\n        'X-Correlation-ID': options.generate()\n      }\n    };\n    next(nextRequest, response);\n  };\n}\n\nfunction defineError(statusCode, message, meta = {}) {\n  this.status = this.statusCode = this.code = statusCode;\n  this.message = message;\n  Object.assign(this, meta);\n  this.name = this.constructor.name;\n  this.constructor.prototype.__proto__ = Error.prototype;\n  if (Error.captureStackTrace) Error.captureStackTrace(this, this.constructor);\n}\nfunction NetworkError(...args) {\n  defineError.call(this, 0 /* special code to indicate network errors */, ...args);\n}\nfunction HttpError(...args) {\n  defineError.call(this, /* code will be passed as arg */...args);\n}\nfunction BadRequest(...args) {\n  defineError.call(this, 400, ...args);\n}\nfunction Unauthorized(...args) {\n  defineError.call(this, 401, ...args);\n}\nfunction Forbidden(...args) {\n  defineError.call(this, 403, ...args);\n}\nfunction NotFound(...args) {\n  defineError.call(this, 404, ...args);\n}\nfunction ConcurrentModification(...args) {\n  defineError.call(this, 409, ...args);\n}\nfunction InternalServerError(...args) {\n  defineError.call(this, 500, ...args);\n}\nfunction ServiceUnavailable(...args) {\n  defineError.call(this, 503, ...args);\n}\nfunction getErrorByCode(code) {\n  switch (code) {\n    case 0:\n      return NetworkError;\n    case 400:\n      return BadRequest;\n    case 401:\n      return Unauthorized;\n    case 403:\n      return Forbidden;\n    case 404:\n      return NotFound;\n    case 409:\n      return ConcurrentModification;\n    case 500:\n      return InternalServerError;\n    case 503:\n      return ServiceUnavailable;\n    default:\n      return undefined;\n  }\n}\n\nfunction parseHeaders(headers) {\n  if (headers.raw)\n    // node-fetch\n    return headers.raw();\n\n  // Tmp fix for Firefox until it supports iterables\n  if (!headers.forEach) return {};\n\n  // whatwg-fetch\n  const map = {};\n  headers.forEach((value, name) => {\n    map[name] = value;\n  });\n  return map;\n}\n\n// performs a proper buffer check\nfunction isBuffer(obj) {\n  return obj != null && obj.constructor != null && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n}\nfunction createError({\n  statusCode,\n  message,\n  ...rest\n}) {\n  let errorMessage = message || 'Unexpected non-JSON error response';\n  if (statusCode === 404) {\n    errorMessage = `URI not found: ${rest.originalRequest?.uri || rest.uri}`;\n    delete rest.uri; // remove the `uri` property from the response\n  }\n  const ResponseError = getErrorByCode(statusCode);\n  if (ResponseError) return new ResponseError(errorMessage, rest);\n  return new HttpError(statusCode, errorMessage, rest);\n}\n\n// calculates the delay duration exponentially\n// More info about the algorithm use here https://goo.gl/Xk8h5f\nfunction calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay) {\n  if (backoff) return retryCount !== 0 // do not increase if it's the first retry\n  ? Math.min(Math.round((Math.random() + 1) * retryDelay * 2 ** retryCount), maxDelay) : retryDelay;\n  return retryDelay;\n}\nfunction maskAuthData(request, maskSensitiveHeaderData) {\n  if (maskSensitiveHeaderData) {\n    if (request && request.headers && request.headers.authorization) request.headers.authorization = 'Bearer ********';\n    if (request && request.headers && request.headers.Authorization) request.headers.Authorization = 'Bearer ********';\n  }\n}\nfunction createHttpMiddleware({\n  host,\n  credentialsMode,\n  includeResponseHeaders,\n  includeOriginalRequest,\n  includeRequestInErrorResponse = true,\n  maskSensitiveHeaderData = true,\n  headersWithStringBody = [],\n  enableRetry,\n  timeout,\n  retryConfig: {\n    // encourage exponential backoff to prevent spamming the server if down\n    maxRetries = 10,\n    backoff = true,\n    retryDelay = 200,\n    maxDelay = Infinity,\n    // If set to true reinitialize the abort controller when the timeout is reached and apply the retry config\n    retryOnAbort = false,\n    retryCodes = [503]\n  } = {},\n  fetch: fetcher,\n  getAbortController\n}) {\n  //nodejs v18 has the fetch available and not the version 16\n  if (!fetcher) throw new Error('`fetch` is not available. Please pass in `fetch` as an option or have it globally available.');\n  if (timeout && !getAbortController) throw new Error('`AbortController` is not available. Please pass in `getAbortController` as an option or have AbortController globally available when using timeout.');\n  let fetchFunction;\n  if (fetcher) {\n    fetchFunction = fetcher;\n  } else {\n    // `fetcher` is set here rather than the destructuring to ensure fetch is\n    // declared before referencing it otherwise it would cause a `ReferenceError`.\n    // For reference of this pattern: https://github.com/apollographql/apollo-link/blob/498b413a5b5199b0758ce898b3bb55451f57a2fa/packages/apollo-link-http/src/httpLink.ts#L49\n    fetchFunction = fetch;\n  }\n  if (!Array.isArray(retryCodes)) {\n    throw new Error('`retryCodes` option must be an array of retry status (error) codes.');\n  }\n  if (!Array.isArray(headersWithStringBody)) {\n    throw new Error('`headersWithStringBody` option must be an array of strings');\n  }\n  return next => (request, response) => {\n    const url = host.replace(/\\/$/, '') + request.uri;\n    const requestHeader = {\n      ...request.headers\n    };\n\n    // If no content-type is provided, defaults to application/json\n    if (!(Object.prototype.hasOwnProperty.call(requestHeader, 'Content-Type') || Object.prototype.hasOwnProperty.call(requestHeader, 'content-type'))) {\n      requestHeader['Content-Type'] = 'application/json';\n    }\n\n    // Unset the content-type header if explicitly asked to (passing `null` as value).\n    if (requestHeader['Content-Type'] === null) {\n      delete requestHeader['Content-Type'];\n    }\n\n    // Ensure body is a string if content type is application/json or application/graphql\n    const body = ['application/json', 'application/graphql', ...headersWithStringBody].indexOf(requestHeader['Content-Type']) > -1 && typeof request.body === 'string' || isBuffer(request.body) ? request.body : JSON.stringify(request.body || undefined);\n    if (body && (typeof body === 'string' || isBuffer(body))) {\n      requestHeader['Content-Length'] = Buffer.byteLength(body).toString();\n    }\n    const fetchOptions = {\n      method: request.method,\n      headers: requestHeader\n    };\n    if (credentialsMode) {\n      fetchOptions.credentialsMode = credentialsMode;\n    }\n    if (body) {\n      fetchOptions.body = body;\n    }\n    let retryCount = 0;\n    // wrap in a fn so we can retry if error occur\n    function executeFetch() {\n      // Kick off timer for abortController directly before fetch.\n      let timer;\n      let abortController;\n      if (timeout) {\n        // Initialize the abort controller in case we do a retry on an aborted request to rest the signal\n        abortController = (getAbortController ? getAbortController() : null) || new AbortController();\n        fetchOptions.signal = abortController.signal;\n        // Set the timer\n        timer = setTimeout(() => {\n          abortController.abort();\n        }, timeout);\n      }\n      fetchFunction(url, fetchOptions).then(res => {\n        if (res.ok) {\n          if (fetchOptions.method === 'HEAD') {\n            next(request, {\n              ...response,\n              statusCode: res.status\n            });\n            return;\n          }\n          res.text().then(result => {\n            // Try to parse the response as JSON\n            let parsed;\n            try {\n              parsed = result.length > 0 ? JSON.parse(result) : {};\n            } catch (err) {\n              if (enableRetry && retryCount < maxRetries) {\n                setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));\n                retryCount += 1;\n                return;\n              }\n              parsed = result;\n            }\n            const parsedResponse = {\n              ...response,\n              body: parsed,\n              statusCode: res.status\n            };\n            if (includeResponseHeaders) parsedResponse.headers = parseHeaders(res.headers);\n            if (includeOriginalRequest) {\n              parsedResponse.request = {\n                ...fetchOptions\n              };\n              maskAuthData(parsedResponse.request, maskSensitiveHeaderData);\n            }\n            next(request, parsedResponse);\n          }).catch(err => {\n            if (enableRetry && retryCount < maxRetries) {\n              setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));\n              retryCount += 1;\n              return;\n            }\n            const error = new NetworkError(err.message, {\n              ...(includeRequestInErrorResponse ? {\n                originalRequest: request\n              } : {}),\n              retryCount\n            });\n            maskAuthData(error.originalRequest, maskSensitiveHeaderData);\n            next(request, {\n              ...response,\n              error,\n              statusCode: 0\n            });\n          });\n          return;\n        }\n\n        // Server responded with an error. Try to parse it as JSON, then\n        // return a proper error type with all necessary meta information.\n        res.text().then(text => {\n          // Try to parse the error response as JSON\n          let parsed;\n          try {\n            parsed = JSON.parse(text);\n          } catch (error) {\n            parsed = text;\n          }\n          const error = createError({\n            statusCode: res.status,\n            ...(includeRequestInErrorResponse ? {\n              originalRequest: request\n            } : res.status === 404 ? {\n              uri: request.uri\n            } : {}),\n            retryCount,\n            headers: parseHeaders(res.headers),\n            ...(typeof parsed === 'object' ? {\n              message: parsed.message,\n              body: parsed\n            } : {\n              message: parsed,\n              body: parsed\n            })\n          });\n          if (enableRetry && (retryCodes.indexOf(error.statusCode) !== -1 || retryCodes?.indexOf(error.message) !== -1)) {\n            if (retryCount < maxRetries) {\n              setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));\n              retryCount += 1;\n              return;\n            }\n          }\n          maskAuthData(error.originalRequest, maskSensitiveHeaderData);\n          // Let the final resolver to reject the promise\n          const parsedResponse = {\n            ...response,\n            error,\n            statusCode: res.status\n          };\n          next(request, parsedResponse);\n        });\n      },\n      // We know that this is a \"network\" error thrown by the `fetch` library\n      e => {\n        // Retry when enabled and either the request was not aborted or retryOnAbort is enabled\n        if (enableRetry && (retryOnAbort || !abortController || !abortController.signal)) {\n          if (retryCount < maxRetries) {\n            setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));\n            retryCount += 1;\n            return;\n          }\n        }\n        const error = new NetworkError(e.message, {\n          ...(includeRequestInErrorResponse ? {\n            originalRequest: request\n          } : {}),\n          retryCount\n        });\n        maskAuthData(error.originalRequest, maskSensitiveHeaderData);\n        next(request, {\n          ...response,\n          error,\n          statusCode: 0\n        });\n      }).finally(() => {\n        clearTimeout(timer);\n      });\n    }\n    executeFetch();\n  };\n}\n\nfunction createLoggerMiddleware() {\n  return next => (request, response) => {\n    const {\n      error,\n      body,\n      statusCode\n    } = response;\n    console.log('Request: ', request);\n    console.log('Response: ', {\n      error,\n      body,\n      statusCode\n    });\n    next(request, response);\n  };\n}\n\nfunction createQueueMiddleware({\n  concurrency = 20\n}) {\n  const queue = [];\n  let runningCount = 0;\n  const dequeue = next => {\n    // We assume here that this task has been completed\n    runningCount -= 1;\n\n    // Check if there are any other pending tasks and execute them\n    if (queue.length && runningCount <= concurrency) {\n      const nextTask = queue.shift();\n      runningCount += 1;\n      next(nextTask.request, nextTask.response);\n    }\n  };\n  return next => (request, response) => {\n    // Override response `resolve` and `reject` to know when the request has\n    // been completed and therefore trigger a pending task in the queue.\n    const patchedResponse = {\n      ...response,\n      resolve(data) {\n        // Resolve original promise\n        response.resolve(data);\n        dequeue(next);\n      },\n      reject(error) {\n        // Reject original promise\n        response.reject(error);\n        dequeue(next);\n      }\n    };\n\n    // Add task to the queue\n    queue.push({\n      request,\n      response: patchedResponse\n    });\n\n    // If possible, run the task straight away\n    if (runningCount < concurrency) {\n      const nextTask = queue.shift();\n      runningCount += 1;\n      next(nextTask.request, nextTask.response);\n    }\n  };\n}\n\nvar packageJson = {\n\tname: \"@commercetools/sdk-client-v2\",\n\tversion: \"3.0.0\",\n\tengines: {\n\t\tnode: \">=18\"\n\t},\n\tdescription: \"commercetools Composable Commerce TypeScript SDK client.\",\n\tkeywords: [\n\t\t\"commercetools\",\n\t\t\"composable commerce\",\n\t\t\"sdk\",\n\t\t\"typescript\",\n\t\t\"client\",\n\t\t\"middleware\",\n\t\t\"http\",\n\t\t\"oauth\",\n\t\t\"auth\"\n\t],\n\thomepage: \"https://github.com/commercetools/commercetools-sdk-typescript\",\n\tlicense: \"MIT\",\n\tdirectories: {\n\t\tlib: \"lib\",\n\t\ttest: \"test\"\n\t},\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\trepository: {\n\t\ttype: \"git\",\n\t\turl: \"git+https://github.com/commercetools/commercetools-sdk-typescript.git\"\n\t},\n\tbugs: {\n\t\turl: \"https://github.com/commercetools/commercetools-sdk-typescript/issues\"\n\t},\n\tdependencies: {\n\t\tbuffer: \"^6.0.3\"\n\t},\n\tfiles: [\n\t\t\"dist\",\n\t\t\"CHANGELOG.md\"\n\t],\n\tauthor: \"Chukwuemeka Ajima <meeky.ae@gmail.com>\",\n\tmain: \"dist/commercetools-sdk-client-v2.cjs.js\",\n\tmodule: \"dist/commercetools-sdk-client-v2.esm.js\",\n\tbrowser: {\n\t\t\"./dist/commercetools-sdk-client-v2.cjs.js\": \"./dist/commercetools-sdk-client-v2.browser.cjs.js\",\n\t\t\"./dist/commercetools-sdk-client-v2.esm.js\": \"./dist/commercetools-sdk-client-v2.browser.esm.js\"\n\t},\n\tdevDependencies: {\n\t\t\"common-tags\": \"1.8.2\",\n\t\tdotenv: \"16.4.5\",\n\t\tjest: \"29.7.0\",\n\t\tnock: \"^14.0.0-beta.19\",\n\t\t\"organize-imports-cli\": \"0.10.0\"\n\t},\n\tscripts: {\n\t\torganize_imports: \"find src -type f -name '*.ts' | xargs organize-imports-cli\",\n\t\tpostbuild: \"yarn organize_imports\",\n\t\tpost_process_generate: \"yarn organize_imports\",\n\t\tdocs: \"typedoc --out docs\"\n\t}\n};\n\n/*\n  This is the easiest way, for this use case, to detect if we're running in\n  Node.js or in a browser environment. In other cases, this won't be even a\n  problem as Rollup will provide the correct polyfill in the bundle.\n  The main advantage by doing it this way is that it allows to easily test\n  the code running in both environments, by overriding `global.window` in\n  the specific test.\n*/\nconst isBrowser = () => window.document && window.document.nodeType === 9;\nfunction getSystemInfo() {\n  if (isBrowser()) return window.navigator.userAgent;\n  const nodeVersion = process?.version.slice(1) || '12'; // temporary fix for rn environment\n  // const platformInfo = `(${process.platform}; ${process.arch})`\n  // return `Node.js/${nodeVersion} ${platformInfo}`\n\n  return `node.js/${nodeVersion}`;\n}\nfunction createUserAgent(options) {\n  if (!options || Object.keys(options).length === 0 || !{}.hasOwnProperty.call(options, 'name')) throw new Error('Missing required option `name`');\n\n  // Main info\n  const baseInfo = options.version ? `${options.name}/${options.version}` : options.name;\n\n  // Library info\n  let libraryInfo = null;\n  if (options.libraryName && !options.libraryVersion) libraryInfo = options.libraryName;else if (options.libraryName && options.libraryVersion) libraryInfo = `${options.libraryName}/${options.libraryVersion}`;\n\n  // Contact info\n  let contactInfo = null;\n  if (options.contactUrl && !options.contactEmail) contactInfo = `(+${options.contactUrl})`;else if (!options.contactUrl && options.contactEmail) contactInfo = `(+${options.contactEmail})`;else if (options.contactUrl && options.contactEmail) contactInfo = `(+${options.contactUrl}; +${options.contactEmail})`;\n\n  // System info\n  const systemInfo = getSystemInfo();\n\n  // customName\n  const customAgent = options.customAgent || '';\n  return [baseInfo, systemInfo, libraryInfo, contactInfo, customAgent].filter(Boolean).join(' ');\n}\n\nfunction createUserAgentMiddleware(options) {\n  const userAgent = createUserAgent({\n    ...options,\n    name: `commercetools-sdk-javascript-v2/${packageJson.version}`\n  });\n  return next => (request, response) => {\n    const requestWithUserAgent = {\n      ...request,\n      headers: {\n        ...request.headers,\n        'User-Agent': userAgent\n      }\n    };\n    next(requestWithUserAgent, response);\n  };\n}\n\nconst {\n  createAuthMiddlewareForPasswordFlow,\n  createAuthMiddlewareForAnonymousSessionFlow,\n  createAuthMiddlewareForClientCredentialsFlow,\n  createAuthMiddlewareForRefreshTokenFlow,\n  createAuthMiddlewareWithExistingToken\n} = authMiddlewares;\nclass ClientBuilder {\n  constructor() {\n    _defineProperty(this, \"projectKey\", void 0);\n    _defineProperty(this, \"authMiddleware\", void 0);\n    _defineProperty(this, \"httpMiddleware\", void 0);\n    _defineProperty(this, \"userAgentMiddleware\", void 0);\n    _defineProperty(this, \"correlationIdMiddleware\", void 0);\n    _defineProperty(this, \"loggerMiddleware\", void 0);\n    _defineProperty(this, \"queueMiddleware\", void 0);\n    _defineProperty(this, \"telemetryMiddleware\", void 0);\n    _defineProperty(this, \"beforeMiddleware\", void 0);\n    _defineProperty(this, \"afterMiddleware\", void 0);\n    _defineProperty(this, \"middlewares\", []);\n  }\n  withProjectKey(key) {\n    this.projectKey = key;\n    return this;\n  }\n  defaultClient(baseUri, credentials, oauthUri, projectKey) {\n    return this.withClientCredentialsFlow({\n      host: oauthUri,\n      projectKey: projectKey || this.projectKey,\n      credentials\n    }).withHttpMiddleware({\n      host: baseUri,\n      fetch: fetch\n    }).withLoggerMiddleware().withUserAgentMiddleware();\n  }\n  withAuthMiddleware(authMiddleware) {\n    this.authMiddleware = authMiddleware;\n    return this;\n  }\n  withMiddleware(middleware) {\n    this.middlewares.push(middleware);\n    return this;\n  }\n  withClientCredentialsFlow(options) {\n    return this.withAuthMiddleware(createAuthMiddlewareForClientCredentialsFlow({\n      host: options.host || 'https://auth.europe-west1.gcp.commercetools.com',\n      projectKey: options.projectKey || this.projectKey,\n      credentials: {\n        clientId: options.credentials.clientId || '',\n        clientSecret: options.credentials.clientSecret || ''\n      },\n      oauthUri: options.oauthUri || '',\n      scopes: options.scopes,\n      fetch: options.fetch || fetch,\n      ...options\n    }));\n  }\n  withPasswordFlow(options) {\n    return this.withAuthMiddleware(createAuthMiddlewareForPasswordFlow({\n      host: options.host || 'https://auth.europe-west1.gcp.commercetools.com',\n      projectKey: options.projectKey || this.projectKey,\n      credentials: {\n        clientId: options.credentials.clientId || '',\n        clientSecret: options.credentials.clientSecret || '',\n        user: {\n          username: options.credentials.user.username || '',\n          password: options.credentials.user.password || ''\n        }\n      },\n      fetch: options.fetch || fetch,\n      ...options\n    }));\n  }\n  withAnonymousSessionFlow(options) {\n    return this.withAuthMiddleware(createAuthMiddlewareForAnonymousSessionFlow({\n      host: options.host || 'https://auth.europe-west1.gcp.commercetools.com',\n      projectKey: this.projectKey || options.projectKey,\n      credentials: {\n        clientId: options.credentials.clientId || '',\n        clientSecret: options.credentials.clientSecret || '',\n        anonymousId: options.credentials.anonymousId || ''\n      },\n      fetch: options.fetch || fetch,\n      ...options\n    }));\n  }\n  withRefreshTokenFlow(options) {\n    return this.withAuthMiddleware(createAuthMiddlewareForRefreshTokenFlow({\n      host: options.host || 'https://auth.europe-west1.gcp.commercetools.com',\n      projectKey: this.projectKey || options.projectKey,\n      credentials: {\n        clientId: options.credentials.clientId || '',\n        clientSecret: options.credentials.clientSecret || ''\n      },\n      fetch: options.fetch || fetch,\n      refreshToken: options.refreshToken || '',\n      ...options\n    }));\n  }\n  withExistingTokenFlow(authorization, options) {\n    return this.withAuthMiddleware(createAuthMiddlewareWithExistingToken(authorization, {\n      force: options.force || true,\n      ...options\n    }));\n  }\n  withHttpMiddleware(options) {\n    this.httpMiddleware = createHttpMiddleware({\n      host: options.host || 'https://api.europe-west1.gcp.commercetools.com',\n      fetch: options.fetch || fetch,\n      ...options\n    });\n    return this;\n  }\n  withUserAgentMiddleware(options) {\n    this.userAgentMiddleware = createUserAgentMiddleware(options);\n    return this;\n  }\n  withQueueMiddleware(options) {\n    this.queueMiddleware = createQueueMiddleware({\n      concurrency: options.concurrency || 20,\n      ...options\n    });\n    return this;\n  }\n  withLoggerMiddleware(options) {\n    const {\n      logger,\n      ...rest\n    } = options || {};\n    this.loggerMiddleware = typeof options?.logger == 'function' && options.logger(rest) || createLoggerMiddleware();\n    return this;\n  }\n  withCorrelationIdMiddleware(options) {\n    this.correlationIdMiddleware = createCorrelationIdMiddleware({\n      generate: options.generate || null,\n      ...options\n    });\n    return this;\n  }\n  withTelemetryMiddleware(options) {\n    const {\n      createTelemetryMiddleware,\n      ...rest\n    } = options;\n    this.withUserAgentMiddleware({\n      customAgent: rest?.userAgent || 'typescript-sdk-apm-middleware'\n    });\n    this.telemetryMiddleware = createTelemetryMiddleware(rest);\n    return this;\n  }\n  withBeforeExecutionMiddleware(options) {\n    const {\n      middleware,\n      ...rest\n    } = options || {};\n    this.beforeMiddleware = options.middleware(rest);\n    return this;\n  }\n  withAfterExecutionMiddleware(options) {\n    const {\n      middleware,\n      ...rest\n    } = options || {};\n    this.afterMiddleware = options.middleware(rest);\n    return this;\n  }\n  build() {\n    const middlewares = this.middlewares.slice();\n    if (this.telemetryMiddleware) middlewares.push(this.telemetryMiddleware);\n    if (this.correlationIdMiddleware) middlewares.push(this.correlationIdMiddleware);\n    if (this.userAgentMiddleware) middlewares.push(this.userAgentMiddleware);\n    if (this.authMiddleware) middlewares.push(this.authMiddleware);\n    if (this.beforeMiddleware) middlewares.push(this.beforeMiddleware);\n    if (this.queueMiddleware) middlewares.push(this.queueMiddleware);\n    if (this.httpMiddleware) middlewares.push(this.httpMiddleware);\n    if (this.afterMiddleware) middlewares.push(this.afterMiddleware);\n    if (this.loggerMiddleware) middlewares.push(this.loggerMiddleware);\n    return createClient({\n      middlewares\n    });\n  }\n}\n\nexport { ClientBuilder, process$1 as Process, createAuthMiddlewareForAnonymousSessionFlow$1 as createAuthForAnonymousSessionFlow, createAuthMiddlewareForClientCredentialsFlow$1 as createAuthForClientCredentialsFlow, createAuthMiddlewareForPasswordFlow$1 as createAuthForPasswordFlow, createAuthMiddlewareForRefreshTokenFlow$1 as createAuthForRefreshTokenFlow, createAuthMiddlewareWithExistingToken$1 as createAuthWithExistingToken, createClient, createCorrelationIdMiddleware, createHttpMiddleware as createHttpClient, createLoggerMiddleware, createQueueMiddleware, createUserAgentMiddleware, getErrorByCode };\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\n\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\n\nfunction defineError(statusCode, message) {\n  var meta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // eslint-disable-next-line no-multi-assign\n  this.status = this.statusCode = this.code = statusCode;\n  this.message = message;\n  Object.assign(this, meta);\n  this.name = this.constructor.name;\n  // eslint-disable-next-line no-proto\n  this.constructor.prototype.__proto__ = Error.prototype;\n  if (Error.captureStackTrace) Error.captureStackTrace(this, this.constructor);\n}\n\n/* eslint-disable max-len, flowtype/require-parameter-type */\nfunction NetworkError() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  defineError.call.apply(defineError, [this, 0 /* special code to indicate network errors */].concat(args));\n}\nfunction HttpError() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  defineError.call.apply(defineError, [this].concat(args));\n}\nfunction BadRequest() {\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n  defineError.call.apply(defineError, [this, 400].concat(args));\n}\nfunction Unauthorized() {\n  for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n  defineError.call.apply(defineError, [this, 401].concat(args));\n}\nfunction Forbidden() {\n  for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    args[_key5] = arguments[_key5];\n  }\n  defineError.call.apply(defineError, [this, 403].concat(args));\n}\nfunction NotFound() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n  defineError.call.apply(defineError, [this, 404].concat(args));\n}\nfunction ConcurrentModification() {\n  for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    args[_key7] = arguments[_key7];\n  }\n  defineError.call.apply(defineError, [this, 409].concat(args));\n}\nfunction InternalServerError() {\n  for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n    args[_key8] = arguments[_key8];\n  }\n  defineError.call.apply(defineError, [this, 500].concat(args));\n}\nfunction ServiceUnavailable() {\n  for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    args[_key9] = arguments[_key9];\n  }\n  defineError.call.apply(defineError, [this, 503].concat(args));\n}\n/* eslint-enable max-len */\n\nfunction getErrorByCode(code) {\n  switch (code) {\n    case 0:\n      return NetworkError;\n    case 400:\n      return BadRequest;\n    case 401:\n      return Unauthorized;\n    case 403:\n      return Forbidden;\n    case 404:\n      return NotFound;\n    case 409:\n      return ConcurrentModification;\n    case 500:\n      return InternalServerError;\n    case 503:\n      return ServiceUnavailable;\n    default:\n      return undefined;\n  }\n}\n\nvar errors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  NetworkError: NetworkError,\n  HttpError: HttpError,\n  BadRequest: BadRequest,\n  Unauthorized: Unauthorized,\n  Forbidden: Forbidden,\n  NotFound: NotFound,\n  ConcurrentModification: ConcurrentModification,\n  InternalServerError: InternalServerError,\n  ServiceUnavailable: ServiceUnavailable,\n  'default': getErrorByCode\n});\n\nfunction parseHeaders(headers) {\n  if (headers.raw)\n    // node-fetch\n    return headers.raw();\n\n  // Tmp fix for Firefox until it supports iterables\n  if (!headers.forEach) return {};\n\n  // whatwg-fetch\n  var map = {};\n  headers.forEach(function (value, name) {\n    map[name] = value;\n  });\n  return map;\n}\n\nvar _excluded = [\"statusCode\", \"message\"];\nfunction createError(_ref) {\n  var statusCode = _ref.statusCode,\n    message = _ref.message,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var errorMessage = message || 'Unexpected non-JSON error response';\n  if (statusCode === 404) errorMessage = \"URI not found: \".concat(rest.originalRequest.uri);\n  var ResponseError = getErrorByCode(statusCode);\n  if (ResponseError) return new ResponseError(errorMessage, rest);\n  return new HttpError(statusCode, errorMessage, rest);\n}\n\n// calculates the delay duration exponentially\n// More info about the algorithm use here https://goo.gl/Xk8h5f\nfunction calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay) {\n  if (backoff) return retryCount !== 0 // do not increase if it's the first retry\n  ? Math.min(Math.round((Math.random() + 1) * retryDelay * Math.pow(2, retryCount)), maxDelay) : retryDelay;\n  return retryDelay;\n}\nfunction maskAuthData(request, maskSensitiveHeaderData) {\n  if (maskSensitiveHeaderData) {\n    if (request.headers.authorization) request.headers.authorization = 'Bearer ********';\n    if (request.headers.Authorization) request.headers.Authorization = 'Bearer ********';\n  }\n}\nfunction createHttpMiddleware(_ref2) {\n  var host = _ref2.host,\n    credentialsMode = _ref2.credentialsMode,\n    includeResponseHeaders = _ref2.includeResponseHeaders,\n    includeOriginalRequest = _ref2.includeOriginalRequest,\n    _ref2$maskSensitiveHe = _ref2.maskSensitiveHeaderData,\n    maskSensitiveHeaderData = _ref2$maskSensitiveHe === void 0 ? true : _ref2$maskSensitiveHe,\n    enableRetry = _ref2.enableRetry,\n    timeout = _ref2.timeout,\n    _ref2$retryConfig = _ref2.retryConfig,\n    _ref2$retryConfig2 = _ref2$retryConfig === void 0 ? {} : _ref2$retryConfig,\n    _ref2$retryConfig2$ma = _ref2$retryConfig2.maxRetries,\n    maxRetries = _ref2$retryConfig2$ma === void 0 ? 10 : _ref2$retryConfig2$ma,\n    _ref2$retryConfig2$ba = _ref2$retryConfig2.backoff,\n    backoff = _ref2$retryConfig2$ba === void 0 ? true : _ref2$retryConfig2$ba,\n    _ref2$retryConfig2$re = _ref2$retryConfig2.retryDelay,\n    retryDelay = _ref2$retryConfig2$re === void 0 ? 200 : _ref2$retryConfig2$re,\n    _ref2$retryConfig2$ma2 = _ref2$retryConfig2.maxDelay,\n    maxDelay = _ref2$retryConfig2$ma2 === void 0 ? Infinity : _ref2$retryConfig2$ma2,\n    _ref2$retryConfig2$re2 = _ref2$retryConfig2.retryOnAbort,\n    retryOnAbort = _ref2$retryConfig2$re2 === void 0 ? false : _ref2$retryConfig2$re2,\n    _ref2$retryConfig2$re3 = _ref2$retryConfig2.retryCodes,\n    retryCodes = _ref2$retryConfig2$re3 === void 0 ? [503] : _ref2$retryConfig2$re3,\n    fetcher = _ref2.fetch,\n    _abortController = _ref2.abortController,\n    getAbortController = _ref2.getAbortController;\n  if (!fetcher && typeof fetch === 'undefined') throw new Error('`fetch` is not available. Please pass in `fetch` as an option or have it globally available.');\n  if (timeout && !getAbortController && !_abortController && typeof AbortController === 'undefined') throw new Error('`AbortController` is not available. Please pass in `getAbortController` as an option or have AbortController globally available when using timeout.');\n  var fetchFunction;\n  if (fetcher) {\n    fetchFunction = fetcher;\n  } else {\n    // `fetcher` is set here rather than the destructuring to ensure fetch is\n    // declared before referencing it otherwise it would cause a `ReferenceError`.\n    // For reference of this pattern: https://github.com/apollographql/apollo-link/blob/498b413a5b5199b0758ce898b3bb55451f57a2fa/packages/apollo-link-http/src/httpLink.ts#L49\n    fetchFunction = fetch;\n  }\n  if (!Array.isArray(retryCodes)) {\n    throw new Error('`retryCodes` option must be an array of retry status (error) codes.');\n  }\n  return function (next) {\n    return function (request, response) {\n      var abortController;\n      var url = host.replace(/\\/$/, '') + request.uri;\n      var requestHeader = _objectSpread2({}, request.headers);\n\n      // If no content-type is provided, defaults to application/json\n      if (!(Object.prototype.hasOwnProperty.call(requestHeader, 'Content-Type') || Object.prototype.hasOwnProperty.call(requestHeader, 'content-type'))) {\n        requestHeader['Content-Type'] = 'application/json';\n      }\n\n      // Unset the content-type header if explicitly asked to (passing `null` as value).\n      if (requestHeader['Content-Type'] === null) {\n        delete requestHeader['Content-Type'];\n      }\n      var body = ['application/json', 'application/graphql'].indexOf(requestHeader['Content-Type']) > -1 && typeof request.body === 'string' || Buffer.isBuffer(request.body) ? request.body : JSON.stringify(request.body || undefined);\n      if (body && (typeof body === 'string' || Buffer.isBuffer(body))) {\n        requestHeader['Content-Length'] = Buffer.byteLength(body).toString();\n      }\n      var fetchOptions = {\n        method: request.method,\n        headers: requestHeader\n      };\n      if (credentialsMode) {\n        fetchOptions.credentials = credentialsMode;\n      }\n      if (!retryOnAbort) {\n        if (timeout || getAbortController || _abortController) {\n          // eslint-disable-next-line\n          abortController = (getAbortController ? getAbortController() : null) || _abortController || new AbortController();\n          if (abortController) {\n            fetchOptions.signal = abortController.signal;\n          }\n        }\n      }\n      if (body) {\n        fetchOptions.body = body;\n      }\n      var retryCount = 0;\n      // wrap in a fn so we can retry if error occur\n      function executeFetch() {\n        if (retryOnAbort) {\n          if (timeout || getAbortController || _abortController) {\n            // eslint-disable-next-line\n            abortController = (getAbortController ? getAbortController() : null) || _abortController || new AbortController();\n            if (abortController) {\n              fetchOptions.signal = abortController.signal;\n            }\n          }\n        }\n        // Kick off timer for abortController directly before fetch.\n        var timer;\n        if (timeout) timer = setTimeout(function () {\n          abortController.abort();\n        }, timeout);\n        fetchFunction(url, fetchOptions).then(function (res) {\n          if (res.ok) {\n            if (fetchOptions.method === 'HEAD') {\n              next(request, _objectSpread2(_objectSpread2({}, response), {}, {\n                statusCode: res.status\n              }));\n              return;\n            }\n            res.text().then(function (result) {\n              // Try to parse the response as JSON\n              var parsed;\n              try {\n                parsed = result.length > 0 ? JSON.parse(result) : {};\n              } catch (err) {\n                if (enableRetry && retryCount < maxRetries) {\n                  setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));\n                  retryCount += 1;\n                  return;\n                }\n                parsed = result;\n              }\n              var parsedResponse = _objectSpread2(_objectSpread2({}, response), {}, {\n                body: parsed,\n                statusCode: res.status\n              });\n              if (includeResponseHeaders) parsedResponse.headers = parseHeaders(res.headers);\n              if (includeOriginalRequest) {\n                parsedResponse.request = _objectSpread2({}, fetchOptions);\n                maskAuthData(parsedResponse.request, maskSensitiveHeaderData);\n              }\n              next(request, parsedResponse);\n            }).catch(function (err) {\n              if (enableRetry) if (retryCount < maxRetries) {\n                setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));\n                retryCount += 1;\n                return;\n              }\n              var error = new NetworkError(err.message, {\n                originalRequest: request,\n                retryCount: retryCount\n              });\n              maskAuthData(error.originalRequest, maskSensitiveHeaderData);\n              next(request, _objectSpread2(_objectSpread2({}, response), {}, {\n                error: error,\n                statusCode: 0\n              }));\n            });\n            return;\n          }\n\n          // Server responded with an error. Try to parse it as JSON, then\n          // return a proper error type with all necessary meta information.\n          res.text().then(function (text) {\n            // Try to parse the error response as JSON\n            var parsed;\n            try {\n              parsed = JSON.parse(text);\n            } catch (error) {\n              parsed = text;\n            }\n            var error = createError(_objectSpread2({\n              statusCode: res.status,\n              originalRequest: request,\n              retryCount: retryCount,\n              headers: parseHeaders(res.headers)\n            }, _typeof(parsed) === 'object' ? {\n              message: parsed.message,\n              body: parsed\n            } : {\n              message: parsed,\n              body: parsed\n            }));\n            if (enableRetry && (retryCodes.indexOf(error.statusCode) !== -1 || (retryCodes === null || retryCodes === void 0 ? void 0 : retryCodes.indexOf(error.message)) !== -1)) {\n              if (retryCount < maxRetries) {\n                setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));\n                retryCount += 1;\n                return;\n              }\n            }\n            maskAuthData(error.originalRequest, maskSensitiveHeaderData);\n            // Let the final resolver to reject the promise\n            var parsedResponse = _objectSpread2(_objectSpread2({}, response), {}, {\n              error: error,\n              statusCode: res.status\n            });\n            next(request, parsedResponse);\n          }).catch(function (err) {\n            if (enableRetry) if (retryCount < maxRetries) {\n              setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));\n              retryCount += 1;\n              return;\n            }\n            var error = new InternalServerError(err.message, {\n              originalRequest: request,\n              retryCount: retryCount\n            });\n            maskAuthData(error.originalRequest, maskSensitiveHeaderData);\n            next(request, _objectSpread2(_objectSpread2({}, response), {}, {\n              error: error,\n              statusCode: 500\n            }));\n          });\n        },\n        // We know that this is a \"network\" error thrown by the `fetch` library\n        function (e) {\n          if (enableRetry) if (retryCount < maxRetries) {\n            setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));\n            retryCount += 1;\n            return;\n          }\n          var error = new NetworkError(e.message, {\n            originalRequest: request,\n            retryCount: retryCount\n          });\n          maskAuthData(error.originalRequest, maskSensitiveHeaderData);\n          next(request, _objectSpread2(_objectSpread2({}, response), {}, {\n            error: error,\n            statusCode: 0\n          }));\n        }).finally(function () {\n          clearTimeout(timer);\n        });\n      }\n      executeFetch();\n    };\n  };\n}\n\nexport { createHttpMiddleware, errors, getErrorByCode };\n","import { errors } from '@commercetools/sdk-middleware-http';\n\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\n// POST https://{host}/oauth/token?grant_type=client_credentials&scope={scope}\n// Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\nfunction buildRequestForClientCredentialsFlow(options) {\n  if (!options) throw new Error('Missing required options');\n  if (!options.host) throw new Error('Missing required option (host)');\n  if (!options.projectKey) throw new Error('Missing required option (projectKey)');\n  if (!options.credentials) throw new Error('Missing required option (credentials)');\n  var _options$credentials = options.credentials,\n    clientId = _options$credentials.clientId,\n    clientSecret = _options$credentials.clientSecret;\n  if (!(clientId && clientSecret)) throw new Error('Missing required credentials (clientId, clientSecret)');\n  var scope = options.scopes ? options.scopes.join(' ') : undefined;\n  var basicAuth = Buffer.from(\"\".concat(clientId, \":\").concat(clientSecret)).toString('base64');\n  // This is mostly useful for internal testing purposes to be able to check\n  // other oauth endpoints.\n  var oauthUri = options.oauthUri || '/oauth/token';\n  var url = options.host.replace(/\\/$/, '') + oauthUri;\n  var body = \"grant_type=client_credentials\".concat(scope ? \"&scope=\".concat(scope) : '');\n  return {\n    basicAuth: basicAuth,\n    url: url,\n    body: body\n  };\n}\nfunction buildRequestForPasswordFlow(options) {\n  if (!options) throw new Error('Missing required options');\n  if (!options.host) throw new Error('Missing required option (host)');\n  if (!options.projectKey) throw new Error('Missing required option (projectKey)');\n  if (!options.credentials) throw new Error('Missing required option (credentials)');\n  var _options$credentials2 = options.credentials,\n    clientId = _options$credentials2.clientId,\n    clientSecret = _options$credentials2.clientSecret,\n    user = _options$credentials2.user;\n  var pKey = options.projectKey;\n  if (!(clientId && clientSecret && user)) throw new Error('Missing required credentials (clientId, clientSecret, user)');\n  var username = user.username,\n    password = user.password;\n  if (!(username && password)) throw new Error('Missing required user credentials (username, password)');\n  var scope = (options.scopes || []).join(' ');\n  var scopeStr = scope ? \"&scope=\".concat(scope) : '';\n  var basicAuth = Buffer.from(\"\".concat(clientId, \":\").concat(clientSecret)).toString('base64');\n  // This is mostly useful for internal testing purposes to be able to check\n  // other oauth endpoints.\n  var oauthUri = options.oauthUri || \"/oauth/\".concat(pKey, \"/customers/token\");\n  var url = options.host.replace(/\\/$/, '') + oauthUri;\n  // eslint-disable-next-line max-len\n  // encode username and password as requested by platform\n  var body = \"grant_type=password&username=\".concat(encodeURIComponent(username), \"&password=\").concat(encodeURIComponent(password)).concat(scopeStr);\n  return {\n    basicAuth: basicAuth,\n    url: url,\n    body: body\n  };\n}\nfunction buildRequestForRefreshTokenFlow(options) {\n  if (!options) throw new Error('Missing required options');\n  if (!options.host) throw new Error('Missing required option (host)');\n  if (!options.projectKey) throw new Error('Missing required option (projectKey)');\n  if (!options.credentials) throw new Error('Missing required option (credentials)');\n  if (!options.refreshToken) throw new Error('Missing required option (refreshToken)');\n  var _options$credentials3 = options.credentials,\n    clientId = _options$credentials3.clientId,\n    clientSecret = _options$credentials3.clientSecret;\n  if (!(clientId && clientSecret)) throw new Error('Missing required credentials (clientId, clientSecret)');\n  var basicAuth = Buffer.from(\"\".concat(clientId, \":\").concat(clientSecret)).toString('base64');\n  // This is mostly useful for internal testing purposes to be able to check\n  // other oauth endpoints.\n  var oauthUri = options.oauthUri || '/oauth/token';\n  var url = options.host.replace(/\\/$/, '') + oauthUri;\n  var body = \"grant_type=refresh_token&refresh_token=\".concat(encodeURIComponent(options.refreshToken));\n  return {\n    basicAuth: basicAuth,\n    url: url,\n    body: body\n  };\n}\nfunction buildRequestForAnonymousSessionFlow(options) {\n  if (!options) throw new Error('Missing required options');\n  if (!options.projectKey) throw new Error('Missing required option (projectKey)');\n  var pKey = options.projectKey;\n  // eslint-disable-next-line no-param-reassign\n  options.oauthUri = options.oauthUri || \"/oauth/\".concat(pKey, \"/anonymous/token\");\n  var result = buildRequestForClientCredentialsFlow(options);\n  if (options.credentials.anonymousId) result.body += \"&anonymous_id=\".concat(options.credentials.anonymousId);\n  return _objectSpread2({}, result);\n}\n\nfunction buildTokenCacheKey(options) {\n  return {\n    clientId: options.credentials.clientId,\n    host: options.host,\n    projectKey: options.projectKey\n  };\n}\n\nfunction mergeAuthHeader(token, req) {\n  return _objectSpread2(_objectSpread2({}, req), {}, {\n    headers: _objectSpread2(_objectSpread2({}, req.headers), {}, {\n      Authorization: \"Bearer \".concat(token)\n    })\n  });\n}\nfunction calculateExpirationTime(expiresIn) {\n  return Date.now() + expiresIn * 1000 -\n  // Add a gap of 5 minutes before expiration time.\n  5 * 60 * 1000;\n}\nfunction calcDelayDuration(retryCount) {\n  var retryDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60000;\n  var backoff = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var maxDelay = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Infinity;\n  if (backoff) return retryCount !== 0 // do not increase if it's the first retry\n  ? Math.min(Math.round((Math.random() + 1) * retryDelay * Math.pow(2, retryCount)), maxDelay) : retryDelay;\n  return retryDelay;\n}\nfunction executeRequest(_ref) {\n  var fetcher = _ref.fetcher,\n    url = _ref.url,\n    basicAuth = _ref.basicAuth,\n    body = _ref.body,\n    request = _ref.request,\n    tokenCache = _ref.tokenCache,\n    requestState = _ref.requestState,\n    pendingTasks = _ref.pendingTasks,\n    response = _ref.response,\n    tokenCacheKey = _ref.tokenCacheKey,\n    timeout = _ref.timeout,\n    getAbortController = _ref.getAbortController,\n    _ref$retryConfig = _ref.retryConfig,\n    _ref$retryConfig2 = _ref$retryConfig === void 0 ? {} : _ref$retryConfig,\n    _ref$retryConfig2$ret = _ref$retryConfig2.retryDelay,\n    retryDelay = _ref$retryConfig2$ret === void 0 ? 300 : _ref$retryConfig2$ret,\n    _ref$retryConfig2$max = _ref$retryConfig2.maxRetries,\n    maxRetries = _ref$retryConfig2$max === void 0 ? 10 : _ref$retryConfig2$max,\n    _ref$retryConfig2$bac = _ref$retryConfig2.backoff,\n    backoff = _ref$retryConfig2$bac === void 0 ? true : _ref$retryConfig2$bac,\n    _ref$retryConfig2$max2 = _ref$retryConfig2.maxDelay,\n    maxDelay = _ref$retryConfig2$max2 === void 0 ? Infinity : _ref$retryConfig2$max2;\n  // if timeout is configured and no instance of AbortController is passed then throw\n  if (timeout && !getAbortController && typeof AbortController === 'undefined') {\n    throw new Error('`AbortController` is not available. Please pass in `getAbortController` as an option or have AbortController globally available when using timeout.');\n  }\n\n  // ensure that the passed value of the timeout is of type number\n  if (timeout && typeof timeout !== 'number') throw new Error('The passed value for timeout is not a number, please provide a timeout of type number.');\n  var retryCount = 0;\n  function executeFetch() {\n    var signal;\n    var abortController;\n    if (timeout || getAbortController) abortController = (getAbortController ? getAbortController() : null) || new AbortController();\n    if (abortController) {\n      signal = abortController.signal;\n    }\n    var timer;\n    if (timeout) timer = setTimeout(function () {\n      abortController.abort();\n    }, timeout);\n    fetcher(url, {\n      method: 'POST',\n      headers: {\n        Authorization: \"Basic \".concat(basicAuth),\n        'Content-Length': Buffer.byteLength(body).toString(),\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: body,\n      signal: signal\n    }).then(function (res) {\n      if (res.ok) return res.json().then(function (_ref2) {\n        var token = _ref2.access_token,\n          expiresIn = _ref2.expires_in,\n          refreshToken = _ref2.refresh_token;\n        var expirationTime = calculateExpirationTime(expiresIn);\n\n        // Cache new token\n        tokenCache.set({\n          token: token,\n          expirationTime: expirationTime,\n          refreshToken: refreshToken\n        }, tokenCacheKey);\n\n        // Dispatch all pending requests\n        requestState.set(false);\n\n        // Freeze and copy pending queue, reset original one for accepting\n        // new pending tasks\n        var executionQueue = pendingTasks.slice();\n        // eslint-disable-next-line no-param-reassign\n        pendingTasks = [];\n        executionQueue.forEach(function (task) {\n          // Assign the new token in the request header\n          var requestWithAuth = mergeAuthHeader(token, task.request);\n          // console.log('test', cache, pendingTasks)\n          // Continue by calling the task's own next function\n          task.next(requestWithAuth, task.response);\n        });\n      });\n\n      // Handle error response\n      return res.text().then(function (text) {\n        var parsed;\n        try {\n          parsed = JSON.parse(text);\n        } catch (error) {\n          /* noop */\n        }\n        var error = new Error(parsed ? parsed.message : text);\n        if (parsed) error.body = parsed;\n\n        // to notify that token is either fetched or failed\n        // in the below case token failed to be fetched\n        // and reset requestState to false\n        // so requestState could be shared between multi authMiddlewareBase functions\n        requestState.set(false);\n\n        // check that error message matches the pattern '...is suspended'\n        if (error.message.includes('is suspended')) {\n          // empty the tokenCache\n          tokenCache.set(null);\n\n          // retry\n          if (retryCount < maxRetries) {\n            setTimeout(executeFetch, calcDelayDuration(retryCount, retryDelay, maxRetries, backoff, maxDelay));\n            retryCount += 1;\n            return;\n          }\n\n          // construct a suitable error message for the caller\n          var errorResponse = {\n            message: error.body.error,\n            statusCode: error.body.statusCode,\n            originalRequest: request,\n            retryCount: retryCount\n          };\n          response.reject(errorResponse);\n        }\n        response.reject(error);\n      });\n    }).catch(function (error) {\n      // to notify that token is either fetched or failed\n      // in the below case token failed to be fetched\n      // and reset requestState to false\n      // so requestState could be shared between multi authMiddlewareBase functions\n      requestState.set(false);\n      if (response && typeof response.reject === 'function') response.reject(error);\n      if (response && typeof response.reject === 'function' && (error === null || error === void 0 ? void 0 : error.type) === 'aborted') {\n        var _error = new errors.NetworkError(error.message, {\n          type: error.type,\n          request: request\n        });\n        response.reject(_error);\n      }\n    }).finally(function () {\n      clearTimeout(timer);\n    });\n  }\n  executeFetch();\n}\nfunction authMiddlewareBase(_ref3, next, userOptions) {\n  var request = _ref3.request,\n    response = _ref3.response,\n    url = _ref3.url,\n    basicAuth = _ref3.basicAuth,\n    body = _ref3.body,\n    pendingTasks = _ref3.pendingTasks,\n    requestState = _ref3.requestState,\n    tokenCache = _ref3.tokenCache,\n    tokenCacheKey = _ref3.tokenCacheKey,\n    fetcher = _ref3.fetch,\n    timeout = _ref3.timeout,\n    getAbortController = _ref3.getAbortController,\n    retryConfig = _ref3.retryConfig;\n  if (!fetcher && typeof fetch === 'undefined') throw new Error('`fetch` is not available. Please pass in `fetch` as an option or have it globally available.');\n  if (!fetcher)\n    // eslint-disable-next-line\n    fetcher = fetch;\n  // Check if there is already a `Authorization` header in the request.\n  // If so, then go directly to the next middleware.\n  if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {\n    next(request, response);\n    return;\n  }\n  // If there was a token in the tokenCache, and it's not expired, append\n  // the token in the `Authorization` header.\n  var tokenObj = tokenCache.get(tokenCacheKey);\n  if (tokenObj && tokenObj.token && Date.now() < tokenObj.expirationTime) {\n    var requestWithAuth = mergeAuthHeader(tokenObj.token, request);\n    next(requestWithAuth, response);\n    return;\n  }\n  // Keep pending tasks until a token is fetched\n  // Save next function as well, to call it once the token has been fetched, which prevents\n  // unexpected behaviour in a context in which the next function uses global vars\n  // or Promises to capture the token to hand it to other libraries, e.g. Apollo\n  pendingTasks.push({\n    request: request,\n    response: response,\n    next: next\n  });\n\n  // If a token is currently being fetched, just wait ;)\n  if (requestState.get()) return;\n\n  // Mark that a token is being fetched\n  requestState.set(true);\n\n  // If there was a refreshToken in the tokenCache, and there was an expired\n  // token or no token in the tokenCache, use the refreshToken flow\n  if (tokenObj && tokenObj.refreshToken && (!tokenObj.token || tokenObj.token && Date.now() > tokenObj.expirationTime)) {\n    if (!userOptions) throw new Error('Missing required options')\n    // eslint-disable-next-line\n    ;\n    executeRequest(_objectSpread2(_objectSpread2({\n      fetcher: fetcher\n    }, buildRequestForRefreshTokenFlow(_objectSpread2(_objectSpread2({}, userOptions), {}, {\n      refreshToken: tokenObj.refreshToken\n    }))), {}, {\n      tokenCacheKey: tokenCacheKey,\n      request: request,\n      tokenCache: tokenCache,\n      requestState: requestState,\n      pendingTasks: pendingTasks,\n      response: response,\n      timeout: timeout,\n      getAbortController: getAbortController,\n      retryConfig: retryConfig\n    }));\n    return;\n  }\n\n  // Token and refreshToken are not present or invalid. Request a new token...\n  executeRequest({\n    fetcher: fetcher,\n    url: url,\n    basicAuth: basicAuth,\n    body: body,\n    request: request,\n    tokenCacheKey: tokenCacheKey,\n    tokenCache: tokenCache,\n    requestState: requestState,\n    pendingTasks: pendingTasks,\n    response: response,\n    timeout: timeout,\n    getAbortController: getAbortController,\n    retryConfig: retryConfig\n  });\n}\n\nfunction store(initVal) {\n  var value = initVal;\n  return {\n    get: function get() {\n      return value;\n    },\n    set: function set(val) {\n      value = val;\n      return value;\n    }\n  };\n}\n\nfunction createAuthMiddlewareForClientCredentialsFlow(options) {\n  var tokenCache = options.tokenCache || store({\n    token: '',\n    expirationTime: -1\n  });\n  var requestState = store(false);\n  var pendingTasks = [];\n  return function (next) {\n    return function (request, response) {\n      // Check if there is already a `Authorization` header in the request.\n      // If so, then go directly to the next middleware.\n      if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {\n        next(request, response);\n        return;\n      }\n      var params = _objectSpread2(_objectSpread2(_objectSpread2({}, options), {}, {\n        request: request,\n        response: response\n      }, buildRequestForClientCredentialsFlow(options)), {}, {\n        pendingTasks: pendingTasks,\n        requestState: requestState,\n        tokenCache: tokenCache,\n        tokenCacheKey: buildTokenCacheKey(options),\n        fetch: options.fetch\n      });\n      authMiddlewareBase(params, next);\n    };\n  };\n}\n\nfunction createAuthMiddlewareForPasswordFlow(options) {\n  var tokenCache = store({});\n  var pendingTasks = [];\n  var requestState = store(false);\n  return function (next) {\n    return function (request, response) {\n      // Check if there is already a `Authorization` header in the request.\n      // If so, then go directly to the next middleware.\n      if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {\n        next(request, response);\n        return;\n      }\n      var params = _objectSpread2(_objectSpread2(_objectSpread2({}, options), {}, {\n        request: request,\n        response: response\n      }, buildRequestForPasswordFlow(options)), {}, {\n        pendingTasks: pendingTasks,\n        requestState: requestState,\n        tokenCache: tokenCache,\n        fetch: options.fetch\n      });\n      authMiddlewareBase(params, next, options);\n    };\n  };\n}\n\nfunction createAuthMiddlewareForRefreshTokenFlow(options) {\n  var tokenCache = store({});\n  var pendingTasks = [];\n  var requestState = store(false);\n  return function (next) {\n    return function (request, response) {\n      // Check if there is already a `Authorization` header in the request.\n      // If so, then go directly to the next middleware.\n      if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {\n        next(request, response);\n        return;\n      }\n      var params = _objectSpread2(_objectSpread2(_objectSpread2({}, options), {}, {\n        request: request,\n        response: response\n      }, buildRequestForRefreshTokenFlow(options)), {}, {\n        pendingTasks: pendingTasks,\n        requestState: requestState,\n        tokenCache: tokenCache,\n        fetch: options.fetch\n      });\n      authMiddlewareBase(params, next);\n    };\n  };\n}\n\nfunction createAuthMiddlewareForAnonymousSessionFlow(options) {\n  var tokenCache = store({});\n  var pendingTasks = [];\n  var requestState = store(false);\n  return function (next) {\n    return function (request, response) {\n      // Check if there is already a `Authorization` header in the request.\n      // If so, then go directly to the next middleware.\n      if (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) {\n        next(request, response);\n        return;\n      }\n      var params = _objectSpread2(_objectSpread2(_objectSpread2({}, options), {}, {\n        request: request,\n        response: response\n      }, buildRequestForAnonymousSessionFlow(options)), {}, {\n        pendingTasks: pendingTasks,\n        requestState: requestState,\n        tokenCache: tokenCache,\n        fetch: options.fetch\n      });\n      authMiddlewareBase(params, next, options);\n    };\n  };\n}\n\nfunction createAuthMiddlewareWithExistingToken() {\n  var authorization = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function (next) {\n    return function (request, response) {\n      if (typeof authorization !== 'string') throw new Error('authorization must be a string');\n      var force = options.force === undefined ? true : options.force;\n\n      /** The request will not be modified if:\n       *  1. no argument is passed\n       *  2. force is false and authorization header exists\n       */\n      if (!authorization || (request.headers && request.headers.authorization || request.headers && request.headers.Authorization) && force === false) {\n        return next(request, response);\n      }\n      var requestWithAuth = _objectSpread2(_objectSpread2({}, request), {}, {\n        headers: _objectSpread2(_objectSpread2({}, request.headers), {}, {\n          Authorization: authorization\n        })\n      });\n      return next(requestWithAuth, response);\n    };\n  };\n}\n\nvar MANAGE_PROJECT = 'manage_project';\nvar MANAGE_PRODUCTS = 'manage_products';\nvar VIEW_PRODUCTS = 'view_products';\nvar MANAGE_ORDERS = 'manage_orders';\nvar VIEW_ORDERS = 'view_orders';\nvar MANAGE_MY_ORDERS = 'manage_my_orders';\nvar MANAGE_CUSTOMERS = 'manage_customers';\nvar VIEW_CUSTOMERS = 'view_customers';\nvar MANAGE_MY_PROFILE = 'manage_my_profile';\nvar MANAGE_TYPES = 'manage_types';\nvar VIEW_TYPES = 'view_types';\nvar MANAGE_PAYMENTS = 'manage_payments';\nvar VIEW_PAYMENTS = 'view_payments';\nvar CREATE_ANONYMOUS_TOKEN = 'create_anonymous_token';\nvar MANAGE_SUBSCRIPTIONS = 'manage_subscriptions';\n\nvar scopes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MANAGE_PROJECT: MANAGE_PROJECT,\n  MANAGE_PRODUCTS: MANAGE_PRODUCTS,\n  VIEW_PRODUCTS: VIEW_PRODUCTS,\n  MANAGE_ORDERS: MANAGE_ORDERS,\n  VIEW_ORDERS: VIEW_ORDERS,\n  MANAGE_MY_ORDERS: MANAGE_MY_ORDERS,\n  MANAGE_CUSTOMERS: MANAGE_CUSTOMERS,\n  VIEW_CUSTOMERS: VIEW_CUSTOMERS,\n  MANAGE_MY_PROFILE: MANAGE_MY_PROFILE,\n  MANAGE_TYPES: MANAGE_TYPES,\n  VIEW_TYPES: VIEW_TYPES,\n  MANAGE_PAYMENTS: MANAGE_PAYMENTS,\n  VIEW_PAYMENTS: VIEW_PAYMENTS,\n  CREATE_ANONYMOUS_TOKEN: CREATE_ANONYMOUS_TOKEN,\n  MANAGE_SUBSCRIPTIONS: MANAGE_SUBSCRIPTIONS\n});\n\nexport { createAuthMiddlewareForAnonymousSessionFlow, createAuthMiddlewareForClientCredentialsFlow, createAuthMiddlewareForPasswordFlow, createAuthMiddlewareForRefreshTokenFlow, createAuthMiddlewareWithExistingToken, scopes };\n","function _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\nfunction isDefined(value) {\n  return typeof value !== 'undefined' && value !== null;\n}\nfunction stringify(object) {\n  const params = new URLSearchParams(object);\n  for (const [key, value] of Object.entries(object)) {\n    if (Array.isArray(value)) {\n      params.delete(key);\n      value.filter(Boolean).forEach(v => params.append(key, v));\n    }\n  }\n  return params.toString();\n}\nfunction cleanObject(obj) {\n  return Object.keys(obj).reduce((result, key) => {\n    const value = obj[key];\n    if (Array.isArray(value)) {\n      const values = value.filter(isDefined);\n      if (!values.length) {\n        return result;\n      }\n      return {\n        ...result,\n        [key]: values\n      };\n    }\n    if (isDefined(value)) {\n      return {\n        ...result,\n        [key]: value\n      };\n    }\n    return result;\n  }, {});\n}\nfunction formatQueryString(variableMap) {\n  const map = cleanObject(variableMap);\n  const result = stringify(map);\n  if (result === '') {\n    return '';\n  }\n  return `?${result}`;\n}\nfunction buildRelativeUri(commonRequest) {\n  const pathMap = commonRequest.pathVariables;\n  var uri = commonRequest.uriTemplate;\n  for (const param in pathMap) {\n    const value = encodeURIComponent(`${pathMap[param]}`);\n    uri = uri.replace(`{${param}}`, `${value}`);\n  }\n  const resQuery = formatQueryString(commonRequest.queryParams || {});\n  return `${uri}${resQuery}`;\n}\n\nclass ApiRequest {\n  constructor(request, requestExecutor) {\n    this.requestExecutor = requestExecutor;\n    _defineProperty(this, \"request\", void 0);\n    this.request = {\n      ...request,\n      uri: buildRelativeUri(request)\n    };\n  }\n  clientRequest() {\n    return this.request;\n  }\n  execute() {\n    return this.requestExecutor(this.request);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves the Customer's most recently modified [active Cart](ctp:api:type:CartState) in a Store. Returns a `200 OK` status if successful.\n   *\n   *\tCarts with `Merchant` or `Quote` [CartOrigin](ctp:api:type:CartOrigin) are ignored.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no active Cart exists.\n   *\t- If an active Cart exists but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If an active Cart exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/active-cart',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an active Cart exists in a Store. Returns `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no active Cart exists in a Store.\n   *\t- If an active Cart exists but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If an active Cart exists but does not contain a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/active-cart',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeActiveCartRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves the Customer's most recently modified [active Cart](ctp:api:type:CartState). Returns a `200 OK` status if successful.\n   *\n   *\tCarts with `Merchant` or `Quote` [CartOrigin](ctp:api:type:CartOrigin) are ignored.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no active Cart exists.\n   *\t- If an active Cart exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/active-cart',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an active Cart exists. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no active Cart exists.\n   *\t- If an active Cart exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/active-cart',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyApiClientsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/api-clients/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an API Client exists with the provided `id`. Returns a `200 OK` status if the API Client exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/api-clients/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/api-clients/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyApiClientsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyApiClientsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/api-clients',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an API Client exists for the provided query predicate. Returns a `200 OK` status if any API Clients match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/api-clients',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/api-clients',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdBusinessUnitsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a BusinessUnit exists with the provided `id`. Returns a `200 OK` status if the BusinessUnit exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdBusinessUnitsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a BusinessUnit exists with the provided `key`. Returns a `200 OK` status if the BusinessUnit exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdBusinessUnitsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdBusinessUnitsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdBusinessUnitsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more BusinessUnits exist for the provided query predicate. Returns a `200 OK` status if any BusinessUnits match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalFlowsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/approval-flows/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/approval-flows/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalFlowsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalFlowsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/approval-flows',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/approval-rules/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/approval-rules/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/approval-rules/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/approval-rules/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/approval-rules',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/approval-rules',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsReplicateRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tCreates a new Cart by replicating an existing Cart or Order. Can be useful in cases where a customer wants to cancel a recent order to make some changes or reorder a previous order.\n   *\n   *\tThe replicated Cart preserves Customer information, Line Items and Custom Line Items, Custom Fields, Discount Codes, and other settings of the Cart or Order. If the Line Items become invalid, for example, due to removed Products or Prices, they are removed from the new Cart. If the Customer switches to another Customer Group, the new Cart is updated with the new value. It has up-to-date Tax Rates, Prices, and Line Item product data and is in `Active` [CartState](ctp:api:type:CartState).\n   *\n   *\tThe new Cart does not contain Payments or Deliveries. The [State](ctp:api:type:ItemState) of Line Items and Custom Line Items is reset to `initial`.\n   *\n   *\tIf the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/replicate',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Cart exists with the provided `id`. Returns a `200 OK` status if the Cart exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Cart exists with the provided `key`. Returns a `200 OK` status if the Cart exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the Cart exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  replicate() {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsReplicateRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Carts exist for the provided query predicate. Returns a `200 OK` status if any Carts match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates a Cart in the [BusinessUnit](ctp:api:type:BusinessUnit) referenced by `businessUnitKey`. As such, the `businessUnit` field on [CartDraft](ctp:api:type:CartDraft) is ignored for this request.\n   *\tCreating a Cart can fail with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the referenced [ShippingMethod](ctp:api:type:ShippingMethod) in the [CartDraft](ctp:api:type:CartDraft) has a predicate that does not match the Cart.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersQuotesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\n   *\tCreates an Order from a [Quote](ctp:api:type:Quote) in a [BusinessUnit](ctp:api:type:BusinessUnit).\n   *\n   *\tThe Quote must reference the same Business Unit as the `businessUnitKey` path parameter, must have the `Pending` [state](ctp:api:type:QuoteState), and must be valid (not past the `validTo` date). If these criteria are not met, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [OutOfStock](ctp:api:type:OutOfStockError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves an Order with the provided `id` in a [BusinessUnit](ctp:api:type:BusinessUnit).\n   *\tIf the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested Business Unit, this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an Order exists with the provided `id` in a [BusinessUnit](ctp:api:type:BusinessUnit). Returns a `200 OK` status if the Order exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates an Order in a [BusinessUnit](ctp:api:type:BusinessUnit) using one or more [update actions](/../api/projects/orders#update-actions).\n   *\tIf the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested Business Unit, this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersOrderNumberByOrderNumberRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves an Order with the provided `orderNumber` in a [BusinessUnit](ctp:api:type:BusinessUnit).\n   *\tIf the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an Order exists with the provided `orderNumber` in a [BusinessUnit](ctp:api:type:BusinessUnit). Returns a `200 OK` status if the Order exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates an Order in a [BusinessUnit](ctp:api:type:BusinessUnit) using one or more [update actions](/../api/projects/orders#update-actions).\n   *\tIf the Order exists in the [Project](ctp:api:type:Project) but does not reference the requested Business Unit, this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  orderQuote() {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersQuotesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withOrderNumber(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersOrderNumberByOrderNumberRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves Orders in a [BusinessUnit](ctp:api:type:BusinessUnit).\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Orders exist with provided query predicate in a [BusinessUnit](ctp:api:type:BusinessUnit). Returns a `200 OK` status if any Orders match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates an Order from a [Cart](ctp:api:type:Cart) in a [BusinessUnit](ctp:api:type:BusinessUnit).\n   *\tThe Cart must have a shipping address set before creating an Order.\n   *\tCreating an Order fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the Cart does not reference the same BusinessUnit as the `businessUnitKey` path parameter.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [OutOfStock](ctp:api:type:OutOfStockError)\n   *\t- [PriceChanged](ctp:api:type:PriceChangedError)\n   *\t- [ShippingMethodDoesNotMatchCart](ctp:api:type:ShippingMethodDoesNotMatchCartError)\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a QuoteRequest exists with the provided `id`. Returns a `200 OK` status if the QuoteRequest exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a QuoteRequest exists with the provided `key`. Returns a `200 OK` status if the QuoteRequest exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the QuoteRequest exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more QuoteRequests exist for the provided query predicate. Returns a `200 OK` status if any QuoteRequests match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates a QuoteRequest in a [BusinessUnit](ctp:api:type:BusinessUnit). Creating QuoteRequest fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) if the Cart does not reference the same BusinessUnit as the `businessUnitKey` path parameter.\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Quote exists with the provided `id`. Returns a `200 OK` status if the Quote exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Quote exists with the provided `key`. Returns a `200 OK` status if the Quote exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the Quote exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Quotes exist for the provided query predicate. Returns a `200 OK` status if any Quotes match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a ShoppingList with the provided `key` in a [BusinessUnit](ctp:api:type:BusinessUnit).\n   *\n   *\tIf the ShoppingList exists in the Project but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShoppingList exists with the provided `id` in a [BusinessUnit](ctp:api:type:BusinessUnit). Returns a `200 OK` if the ShoppingList exists; otherwise, returns [Not Found](/../api/errors#404-not-found).\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a ShoppingList in a [BusinessUnit](ctp:api:type:BusinessUnit) using one or more [update actions](/../api/projects/shoppingLists#update-actions).\n   *\tIf the ShoppingList exists in the Project but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a ShoppingList in a [BusinessUnit](ctp:api:type:BusinessUnit).\n   *\n   *\tIf the ShoppingList exists in the Project but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a ShoppingList with the provided `key` in a [BusinessUnit](ctp:api:type:BusinessUnit).\n   *\tIf the ShoppingList exists in the Project but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShoppingList exists with the provided `key` in a [BusinessUnit](ctp:api:type:BusinessUnit). Returns a `200 OK` if the ShoppingList exists; otherwise, returns [Not Found](/../api/errors#404-not-found).\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a ShoppingList in a [BusinessUnit](ctp:api:type:BusinessUnit) using one or more [update actions](/../api/projects/shoppingLists#update-actions).\n   *\tIf the ShoppingList exists in the [Project](ctp:api:type:Project) but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a ShoppingList in a [BusinessUnit](ctp:api:type:BusinessUnit).\n   *\n   *\tIf the ShoppingList exists in the Project but does not reference the requested [BusinessUnit](ctp:api:type:BusinessUnit), this method returns an [InvalidOperation](ctp:api:type:InvalidOperationError) error.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves all ShoppingLists in a [BusinessUnit](ctp:api:type:BusinessUnit).\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more ShoppingLists exist for the provided query predicate in a [BusinessUnit](ctp:api:type:BusinessUnit). Returns a `200 OK` if any ShoppingLists match the query predicate; otherwise, returns [Not Found](/../api/errors#404-not-found).\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates a ShoppingList in the [BusinessUnit](ctp:api:type:BusinessUnit) referenced by `businessUnitKey`. As such, the `businessUnit` field on [ShoppingListDraft](ctp:api:type:ShoppingListDraft) is ignored for this request.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/as-associate/{associateId}/in-business-unit/key={businessUnitKey}/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tAn Approval Rule describes the conditions determining whether an Order that matches the predicate needs approval by an approver before it can be ordered by an requester within a Business Unit.\n   */\n  approvalRules() {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tApproval Flows connect Orders that require approval with the Approval Rules that initiate the approval requirement.\n   *\tThey represent the approval process by including information about approvals, rejections, and all involved parties.\n   *\n   */\n  approvalFlows() {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalFlowsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA shopping cart holds product variants and can be ordered.\n   */\n  carts() {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tshopping-lists e.g. for wishlist support\n   *\n   */\n  shoppingLists() {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  orders() {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA quote holds the negotiated offer.\n   */\n  quotes() {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  quoteRequests() {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateByAssociateIdRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tA Business Unit can represent a Company or a Division.\n   */\n  businessUnits() {\n    return new ByProjectKeyAsAssociateByAssociateIdBusinessUnitsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  inBusinessUnitKeyWithBusinessUnitKeyValue(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAsAssociateRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withAssociateIdValue(childPathArgs) {\n    return new ByProjectKeyAsAssociateByAssociateIdRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAssociateRolesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/associate-roles/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an AssociateRole exists with the provided `id`. Returns a `200 OK` status if the AssociateRole exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/associate-roles/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/associate-roles/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/associate-roles/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAssociateRolesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/associate-roles/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an AssociateRole exists with the provided `key`. Returns a `200 OK` status if the AssociateRole exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/associate-roles/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/associate-roles/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeleting an AssociateRole generates the [AssociateRoleDeleted](ctp:api:type:AssociateRoleDeletedMessage) Message. An AssociateRole can only be deleted if it is not assigned to any [Associates](ctp:api:type:Associate).\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/associate-roles/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAssociateRolesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyAssociateRolesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyAssociateRolesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/associate-roles',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more AssociateRoles exist for the provided query predicate. Returns a `200 OK` status if any AssociateRole match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/associate-roles',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreating a Associate Role generates the [AssociateRoleCreated](ctp:api:type:AssociateRoleCreatedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/associate-roles',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAttributeGroupsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/attribute-groups/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an AttributeGroup exists with the provided `id`. Returns a `200 OK` status if the AttributeGroup exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/attribute-groups/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/attribute-groups/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/attribute-groups/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/attribute-groups/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an AttributeGroup exists with the provided `key`. Returns `200 OK` status if the AttributeGroup exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/attribute-groups/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/attribute-groups/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/attribute-groups/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyAttributeGroupsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyAttributeGroupsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/attribute-groups',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more AttributeGroups exist for the provided query predicate. Returns `200 OK` status if any AttributeGroups match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/attribute-groups',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/attribute-groups',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyBusinessUnitsByBusinessUnitIdAssociatesByAssociateIdRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves all roles and permissions of an Associate in a Business Unit.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/business-units/{businessUnitId}/associates/{associateId}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyBusinessUnitsKeyByKeyAssociatesByAssociateIdRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves all roles and permissions of an Associate in a Business Unit.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/business-units/key={key}/associates/{associateId}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyBusinessUnitsSearchIndexingStatusRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tReturns the indexing status of the Business Unit Search for a Project.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/business-units/search/indexing-status',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyBusinessUnitsSearchRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the initial indexing is in progress or the feature is inactive, A [SearchNotReady](ctp:api:type:SearchNotReadyError) error is returned. If inactive, you can [reactivate](/../api/projects/business-unit-search#reactivate) it.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/business-units/search',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks whether a search index of Business Units exists for a Project.\n   *\tReturns a `200 OK` if an index exists; otherwise, returns a `409 Conflict`.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/business-units/search',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyBusinessUnitsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a BusinessUnit exists with the provided `id`. Returns a `200 OK` status if the BusinessUnit exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a BusinessUnit exists with the provided `key`. Returns a `200 OK` status if the BusinessUnit exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyBusinessUnitsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyBusinessUnitsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  keyWithKeyValueAssociatesWithAssociateIdValue(childPathArgs) {\n    return new ByProjectKeyBusinessUnitsKeyByKeyAssociatesByAssociateIdRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withBusinessUnitIdValueAssociatesWithAssociateIdValue(childPathArgs) {\n    return new ByProjectKeyBusinessUnitsByBusinessUnitIdAssociatesByAssociateIdRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tThis endpoint provides high-performance search queries over Business Units.\n   *\n   */\n  search() {\n    return new ByProjectKeyBusinessUnitsSearchRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  searchIndexingStatus() {\n    return new ByProjectKeyBusinessUnitsSearchIndexingStatusRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more BusinessUnits exist for the provided query predicate. Returns a `200 OK` status if any BusinessUnits match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCartDiscountsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/cart-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a CartDiscount exists with the provided `id`. Returns a `200 OK` status if the CartDiscount exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/cart-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/cart-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeleting a Cart Discount produces the [CartDiscountDeleted](ctp:api:type:CartDiscountDeletedMessage) Message.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/cart-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCartDiscountsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/cart-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a CartDiscount exists with the provided `key`. Returns a `200 OK` status if the CartDiscount exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/cart-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/cart-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeleting a Cart Discount produces the [CartDiscountDeleted](ctp:api:type:CartDiscountDeletedMessage) Message.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/cart-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCartDiscountsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyCartDiscountsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyCartDiscountsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/cart-discounts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more CartDiscounts exist for the provided query predicate. Returns a `200 OK` status if any CartDiscounts match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/cart-discounts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreating a Cart Discount produces the [CartDiscountCreated](ctp:api:type:CartDiscountCreatedMessage) Message.\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/cart-discounts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCartsReplicateRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tCreates a new Cart by replicating an existing Cart or Order. Can be useful in cases where a customer wants to cancel a recent order to make some changes or reorder a previous order.\n   *\n   *\tThe replicated Cart preserves Customer information, Line Items and Custom Line Items, Custom Fields, Discount Codes, and other settings of the Cart or Order. If the Line Items become invalid, for example, due to removed Products or Prices, they are removed from the new Cart. If the Customer switches to another Customer Group, the new Cart is updated with the new value. It has up-to-date Tax Rates, Prices, and Line Item product data and is in `Active` [CartState](ctp:api:type:CartState).\n   *\n   *\tThe new Cart does not contain Payments or Deliveries. The [State](ctp:api:type:ItemState) of Line Items and Custom Line Items is reset to `initial`.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/carts/replicate',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCartsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a Cart with the provided `id`.\n   *\tTo ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Cart exists for the provided `id`. Returns a `200 OK` status if the Cart exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a Cart in the Project using one or more [update actions](/../api/projects/carts#update-actions).\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a Cart in the Project.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves the most recently modified active Cart of a Customer with [CartOrigin](ctp:api:type:CartOrigin) `Customer`. If no active Cart exists, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   *\tTo ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/carts/customer-id={customerId}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Cart exists for a Customer. Returns a `200 OK` status if the Cart exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/carts/customer-id={customerId}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCartsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a Cart with the provided `key`.\n   *\tTo ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Cart exists with the provided `key`. Returns a `200 OK` status if the Cart exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a Cart in the Project using one or more [update actions](/../api/projects/carts#update-actions).\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a Cart in the Project.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCartsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  replicate() {\n    return new ByProjectKeyCartsReplicateRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withCustomerId(childPathArgs) {\n    return new ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyCartsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyCartsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves all Carts in the Project.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Carts exist for the provided query predicate. Returns a `200 OK` status if any Carts match the query predicate, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\n   *\tCreates a Cart in the Project.\n   *\n   *\tIf the referenced [ShippingMethod](ctp:api:type:ShippingMethod) in the [CartDraft](ctp:api:type:CartDraft) has a predicate that does not match, or if the Shipping Method is not active, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCategoriesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tEither the [scope](/../api/scopes) `view_products:{projectKey}` or `view_categories:{projectKey}` is required.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/categories/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Category exists with the provided `id`. Returns a `200 OK` status if the Category exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/categories/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tEither the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/categories/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tEither the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/categories/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCategoriesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tEither the [scope](/../api/scopes) `view_products:{projectKey}` or `view_categories:{projectKey}` is required.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/categories/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Category exists with the provided `key`. Returns a `200 OK` status if the Category exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/categories/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tEither the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/categories/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tEither the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/categories/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCategoriesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyCategoriesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyCategoriesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tEither the [scope](/../api/scopes) `view_products:{projectKey}` or `view_categories:{projectKey}` is required.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/categories',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Categories exist for the provided query predicate. Returns a `200 OK` status if any Categories match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/categories',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tEither the [scope](/../api/scopes) `manage_products:{projectKey}` or `manage_categories:{projectKey}` is required.\n   *\n   *\tCreating a Category produces the [CategoryCreated](ctp:api:type:CategoryCreatedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/categories',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyChannelsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/channels/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Channel exists with the provided `id`. Returns a `200 OK` status if the Channel exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/channels/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/channels/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tReturns a [ReferenceExists](ctp:api:type:ReferenceExistsError) error if other resources reference the Channel to be deleted.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/channels/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyChannelsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/channels/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Channel exists with the provided `key`. Returns a `200 OK` status if the Channel exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/channels/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/channels/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tReturns a [ReferenceExists](ctp:api:type:ReferenceExistsError) error if other resources reference the Channel to be deleted.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/channels/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyChannelsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyChannelsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyChannelsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/channels',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Channels exist for the provided query predicate. Returns a `200 OK` status if any Channels match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/channels',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/channels',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/custom-objects/{container}/{key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomObjectsByContainerRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/custom-objects/{container}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomObjectsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withContainerAndKey(childPathArgs) {\n    return new ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withContainer(childPathArgs) {\n    return new ByProjectKeyCustomObjectsByContainerRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tFor performance reasons, it is highly advisable to query for Custom Objects in a container by using the `container` field in the `where` predicate.\n   *\n   */\n  /**\n   * @deprecated\n   **/\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/custom-objects',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more CustomObjects exist for the provided query predicate. Returns a `200 OK` status if any CustomObjects match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/custom-objects',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf an object with the given container/key exists, the object will be replaced with the new value and the version is incremented.\n   *\tIf the request contains a version and an object with the given container/key, then the version must match the version of the existing object. Concurrent updates to the same Custom Object returns a [ConcurrentModification](ctp:api:type:ConcurrentModificationError) error even if the version is not provided.\n   *\n   *\tFields within `value` that have `null` values **are not saved**.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/custom-objects',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomerGroupsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/customer-groups/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a CustomerGroup exists with the provided `id`. Returns a `200 OK` status if the CustomerGroup exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/customer-groups/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customer-groups/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/customer-groups/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/customer-groups/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a CustomerGroup exists with the provided `key`. Returns a `200 OK` status if the CustomerGroup exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/customer-groups/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customer-groups/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/customer-groups/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomerGroupsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyCustomerGroupsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/customer-groups',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more CustomerGroups exist for the provided query predicate. Returns a `200 OK` status if any CustomerGroup match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/customer-groups',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customer-groups',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersEmailConfirmRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to verify a global Customer's email during their [email verification process](/../api/customers-overview#customer-email-verification).\n   *\n   *\tVerifying the email of the Customer produces the [CustomerEmailVerified](ctp:api:type:CustomerEmailVerifiedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customers/email/confirm',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersEmailTokenRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to create an email token for a global Customer during their [email verification process](/../api/customers-overview#customer-email-verification).\n   *\n   *\tCreating an email token for the Customer produces the [CustomerEmailTokenCreated](ctp:api:type:CustomerEmailTokenCreatedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customers/email-token',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersSearchIndexingStatusRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tReturns the indexing status of the Customer Search for a Project.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/customers/search/indexing-status',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersPasswordTokenRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to create a password reset token for a global Customer during their [password reset process](/../api/customers-overview#customer-password-reset).\n   *\n   *\tCreating a password reset token does not invalidate existing tokens.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customers/password-token',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersPasswordRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tChanging the password produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customers/password',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersPasswordResetRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to reset a global Customer's password during their [password reset process](/../api/customers-overview#customer-password-reset).\n   *\n   *\tAfter the password is reset, any previously issued access and/or refresh tokens created through the [password flow](/authorization#password-flow) or [refresh token flow](/authorization#refresh-token-flow) are invalidated.\n   *\n   *\tResetting the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customers/password/reset',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersSearchRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the initial indexing is in progress or the feature is inactive, a [SearchNotReady](ctp:api:type:SearchNotReadyError) error is returned.\n   *\tIf inactive, you can [reactivate](/../api/projects/customer-search#reactivate) it.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customers/search',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks whether a search index of Customers exists for a Project.\n   *\tReturns a `200 OK` if an index exists; otherwise, returns a `409 Conflict`.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/customers/search',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/customers/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Customer exists with the provided `id`. Returns a `200 OK` status if the Customer exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/customers/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tSimultaneously updating two Customers with the same email address can return a [LockedField](ctp:api:type:LockedFieldError) error.\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customers/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/customers/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to retrieve a global Customer's details by using the email token during their [email verification process](/../api/customers-overview#customer-email-verification).\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/customers/email-token={emailToken}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/customers/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Customer exists with the provided `key`. Returns a `200 OK` status if the Customer exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/customers/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tSimultaneously updating two Customers with the same email address can return a [LockedField](ctp:api:type:LockedFieldError) error.\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customers/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/customers/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to retrieve the details of a global Customer by using the password token during their [password reset process](/../api/customers-overview#customer-password-reset).\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/customers/password-token={passwordToken}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyCustomersRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withPasswordToken(childPathArgs) {\n    return new ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withEmailToken(childPathArgs) {\n    return new ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  emailToken() {\n    return new ByProjectKeyCustomersEmailTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  emailConfirm() {\n    return new ByProjectKeyCustomersEmailConfirmRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  password() {\n    return new ByProjectKeyCustomersPasswordRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  passwordReset() {\n    return new ByProjectKeyCustomersPasswordResetRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tProduces the [CustomerPasswordTokenCreated](ctp:api:type:CustomerPasswordTokenCreatedMessage) Message.\n   */\n  passwordToken() {\n    return new ByProjectKeyCustomersPasswordTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyCustomersKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyCustomersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tThis endpoint provides high-performance search queries over Customers.\n   *\n   */\n  search() {\n    return new ByProjectKeyCustomersSearchRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  searchIndexingStatus() {\n    return new ByProjectKeyCustomersSearchIndexingStatusRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/customers',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Customers exist for the provided query predicate. Returns a `200 OK` status if any Customers match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/customers',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the `anonymousCart` field is set on the [CustomerDraft](ctp:api:type:CustomerDraft), then the newly created Customer will be assigned to that [Cart](ctp:api:type:Cart).\n   *\tSimilarly, if the `anonymousId` field is set, the Customer will be set on all [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [ShoppingLists](ctp:api:type:ShoppingList) and [Payments](ctp:api:type:Payment) with the same `anonymousId`.\n   *\n   *\tCreating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message. Simultaneously creating two Customers with the same email address can return a [LockedField](ctp:api:type:LockedFieldError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/customers',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyDiscountCodesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tDeprecated OAuth 2.0 Scope: `view_orders:{projectKey}`\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/discount-codes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a DiscountCode exists with the provided `id`. Returns a `200 OK` status if the DiscountCode exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/discount-codes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeprecated OAuth 2.0 Scope: `manage_orders:{projectKey}`\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/discount-codes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeleting a Discount Code produces the [DiscountCodeDeleted](ctp:api:type:DiscountCodeDeletedMessage) Message.\n   *\n   *\tDeprecated OAuth 2.0 Scope: `manage_orders:{projectKey}`\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/discount-codes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyDiscountCodesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tDeprecated OAuth 2.0 Scope: `view_orders:{projectKey}`\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/discount-codes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a DiscountCode exists with the provided `key`. Returns a `200 OK` status if the DiscountCode exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/discount-codes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeprecated OAuth 2.0 Scope: `manage_orders:{projectKey}`\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/discount-codes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeleting a Discount Code produces the [DiscountCodeDeleted](ctp:api:type:DiscountCodeDeletedMessage) Message.\n   *\n   *\tDeprecated OAuth 2.0 Scope: `manage_orders:{projectKey}`\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/discount-codes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyDiscountCodesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyDiscountCodesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyDiscountCodesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tDeprecated OAuth 2.0 Scope: `view_orders:{projectKey}`\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/discount-codes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more DiscountCodes exist for the provided query predicate. Returns a `200 OK` status if any DiscountCodes match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/discount-codes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreating a Discount Code produces the [DiscountCodeCreated](ctp:api:type:DiscountCodeCreatedMessage) Message.\n   *\n   *\tDeprecated OAuth 2.0 Scope: `manage_orders:{projectKey}`\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/discount-codes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyExtensionsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/extensions/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an Extension exists with the provided `id`. Returns a `200 OK` status if the Extension exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/extensions/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/extensions/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/extensions/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyExtensionsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/extensions/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an Extension exists with the provided `key`. Returns a `200 OK` status if the Extension exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/extensions/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/extensions/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/extensions/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyExtensionsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyExtensionsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyExtensionsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/extensions',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Extensions exist for the provided query predicate. Returns a `200 OK` status if any Extensions match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/extensions',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/extensions',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyGraphqlRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tExecute a GraphQL request.\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/graphql',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tThe My Business Unit endpoint does not support assigning existing Customers to a Business Unit.\n   *\tAssociates with the `UpdateAssociates` [Permission](ctp:api:type:Permission) can use this endpoint to create a new Customer and associate it with the Business Unit.\n   *\tIf the required [Permission](/projects/associate-roles#permission) is missing, an [AssociateMissingPermission](/errors#associatemissingpermission) error is returned.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-business-unit/key={businessUnitKey}/me/customers',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  customers() {\n    return new ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  me() {\n    return new ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsByBusinessUnitIdAssociatesByAssociateIdRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves all roles and permissions of an Associate in a Business Unit in a Store.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units/{businessUnitId}/associates/{associateId}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsKeyByKeyAssociatesByAssociateIdRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves all roles and permissions of an Associate in a Business Unit in a Store.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units/key={key}/associates/{associateId}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a BusinessUnit exists with the provided `id`. Returns a `200 OK` status if the BusinessUnit exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a BusinessUnit exists with the provided `key`. Returns a `200 OK` status if the BusinessUnit exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  keyWithKeyValueAssociatesWithAssociateIdValue(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsKeyByKeyAssociatesByAssociateIdRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withBusinessUnitIdValueAssociatesWithAssociateIdValue(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsByBusinessUnitIdAssociatesByAssociateIdRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more BusinessUnits exist for the provided query predicate. Returns a `200 OK` status if any BusinessUnits match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCartDiscountsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a CartDiscount exists with the provided `id`. Returns a `200 OK` status if the CartDiscount exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tTo update a CartDiscount, you must have permissions for all Stores the CartDiscount is associated with, except when [removing a Store](ctp:api:type:CartDiscountRemoveStoreAction).\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tTo delete a CartDiscount, specify the `manage_cart_discounts:{projectKey}:{storeKey}` scope for all Stores associated with the CartDiscount.\n   *\n   *\tDeleting a Cart Discount produces the [CartDiscountDeleted](ctp:api:type:CartDiscountDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCartDiscountsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a CartDiscount exists with the provided `key`. Returns a `200 OK` status if the CartDiscount exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tTo update a CartDiscount, you must have permissions for all Stores the CartDiscount is associated with, except when [removing a Store](ctp:api:type:CartDiscountRemoveStoreAction).\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tTo delete a CartDiscount, specify the `manage_cart_discounts:{projectKey}:{storeKey}` scope for all Stores associated with the CartDiscount.\n   *\n   *\tDeleting a Cart Discount produces the [CartDiscountDeleted](ctp:api:type:CartDiscountDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCartDiscountsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartDiscountsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartDiscountsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more CartDiscounts exist for the provided query predicate. Returns a `200 OK` status if any CartDiscounts match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tWhen using the endpoint, the Store specified in the path and the Stores specified in the payload's `stores` field are added to the CartDiscount.\n   *\n   *\tCreating a Cart Discount produces the [CartDiscountCreated](ctp:api:type:CartDiscountCreatedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/cart-discounts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tCreates a new Cart by replicating an existing Cart or Order. Can be useful in cases where a customer wants to cancel a recent order to make some changes or reorder a previous order.\n   *\n   *\tThe replicated Cart preserves Customer information, Line Items and Custom Line Items, Custom Fields, Discount Codes, and other settings of the Cart or Order. If the Line Items become invalid, for example, due to removed Products or Prices, they are removed from the new Cart. If the Customer switches to another Customer Group, the new Cart is updated with the new value. It has up-to-date Tax Rates, Prices, and Line Item product data and is in `Active` [CartState](ctp:api:type:CartState).\n   *\n   *\tThe new Cart does not contain payments or deliveries. The [State](ctp:api:type:ItemState) of Line Items and Custom Line Items is reset to `initial`.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/replicate',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a Cart with the provided `id` in a [Store](ctp:api:type:Store).\n   *\n   *\tIf the Cart exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   *\tTo ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Cart exists with the provided `id` in a Store. Returns a `200 OK` status if the Cart exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a Cart in a [Store](ctp:api:type:Store) using one or more [update actions](/../api/projects/carts#update-actions).\n   *\n   *\tIf the Cart exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a Cart in a [Store](ctp:api:type:Store).\n   *\n   *\tIf the Cart exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves the most recently modified [active Cart](ctp:api:type:CartState) of a Customer with [CartOrigin](ctp:api:type:CartOrigin) `Customer`. If no active Cart exists, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   *\tIf the Cart exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   *\tTo ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Carts exist for a Customer in a [Store](ctp:api:type:Store). Returns a `200 OK` status if the Cart exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/customer-id={customerId}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\n   *\tRetrieves a Cart with the provided `key` in a [Store](ctp:api:type:Store).\n   *\n   *\tIf the Cart exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   *\tTo ensure the Cart is up-to-date with current values (such as Prices and Discounts), use the [Recalculate](ctp:api:type:CartRecalculateAction) update action.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Cart exists with the provided `key` in a [Store](ctp:api:type:Store). Returns a `200 OK` status if the Cart exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a Cart in a [Store](ctp:api:type:Store) using one or more [update actions](/../api/projects/carts#update-actions).\n   *\n   *\tIf the Cart exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a Cart in a [Store](ctp:api:type:Store).\n   *\n   *\tIf the Cart exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withCustomerId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  replicate() {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves all Carts in a [Store](ctp:api:type:Store).\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Carts exist for the provided query predicate in a [Store](ctp:api:type:Store). Returns a `200 OK` status if any Carts match the query predicate, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates a Cart in a [Store](ctp:api:type:Store).\n   *\n   *\tIf the referenced [ShippingMethod](ctp:api:type:ShippingMethod) in the [CartDraft](ctp:api:type:CartDraft) has a predicate that does not match, or if the Shipping Method is not active, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\t- [CountryNotConfiguredInStore](ctp:api:type:CountryNotConfiguredInStoreError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to verify a Store-specific Customer's email during their [email verification process](/../api/customers-overview#customer-email-verification).\n   *\n   *\tVerifying the email of the Customer produces the [CustomerEmailVerified](ctp:api:type:CustomerEmailVerifiedMessage) Message.\n   *\n   *\tIf the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email/confirm',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to create an email token for a Store-specific Customer during their [email verification process](/../api/customers-overview#customer-email-verification).\n   *\n   *\tIf the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email-token',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to create a password reset token for a Store-specific Customer during their [password reset process](/../api/customers-overview#customer-password-reset).\n   *\n   *\tCreating a password reset token does not invalidate existing tokens.\n   *\n   *\tIf the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password-token',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tChanging the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to reset a Store-specific Customer's password during their [password reset process](/../api/customers-overview#customer-password-reset).\n   *\n   *\tAfter the password is reset, any previously issued access and/or refresh tokens created through the [password flow](/authorization#password-flow) or [refresh token flow](/authorization#refresh-token-flow) are invalidated.\n   *\n   *\tResetting the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.\n   *\n   *\tIf the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), then this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password/reset',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Customer exists with the provided `id`. Returns a `200 OK` status if the Customer exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   *\tSimultaneously updating two Customers with the same email address can return a [LockedField](ctp:api:type:LockedFieldError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.\n   *\n   *\tIf the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to retrieve a Store-specific Customer's details by using the email token during their [email verification process](/../api/customers-overview#customer-email-verification).\n   *\n   *\tIf the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/email-token={emailToken}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Customer exists with the provided `key`. Returns a `200 OK` status if the Customer exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   *\tSimultaneously updating two Customers with the same email address can return a [LockedField](ctp:api:type:LockedFieldError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeleting a Customer produces the [CustomerDeleted](ctp:api:type:CustomerDeletedMessage) Message.\n   *\n   *\tIf the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUse this method to retrieve a Store-specific Customer's details by using the password reset token during their [password reset process](/../api/customers-overview#customer-password-reset).\n   *\n   *\tIf the Customer exists in the Project but the `stores` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers/password-token={passwordToken}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withPasswordToken(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withEmailToken(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  emailToken() {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  emailConfirm() {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  password() {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  passwordReset() {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  passwordToken() {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Customers exist for the provided query predicate. Returns a `200 OK` status if any Customers match the query predicate, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tWhen using this endpoint, if omitted, the Customer `stores` field is set to the [Store](ctp:api:type:Store) specified in the path parameter.\n   *\n   *\tIf the `anonymousCart` field is set on the [CustomerDraft](ctp:api:type:CustomerDraft), then the newly created Customer will be assigned to that [Cart](ctp:api:type:Cart).\n   *\tSimilarly, if the `anonymousId` field is set, the Customer will be set on all [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [ShoppingLists](ctp:api:type:ShoppingList) and [Payments](ctp:api:type:Payment) with the same `anonymousId`.\n   *\tIf a Cart with a `store` field specified, the `store` field must reference the same [Store](ctp:api:type:Store) specified in the `{storeKey}` path parameter.\n   *\n   *\tCreating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message. Simultaneously creating two Customers with the same email address can return a [LockedField](ctp:api:type:LockedFieldError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/customers',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tAuthenticates a Customer associated with a [Store](ctp:api:type:Store). For more information, see [Global versus Store-specific Customers](/../api/customers-overview#global-versus-store-specific-customers).\n   *\n   *\tA Cart returned in the [CustomerSignInResult](ctp:api:type:CustomerSignInResult) has any invalid Line Items removed and is [updated](/api/carts-orders-overview#cart-updates) with the latest prices, taxes, and discounts. During these updates, the following errors can be returned: [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError) and [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError).\n   *\n   *\tTriggers [Cart merge during sign-in](/../api/customers-overview#cart-merge-during-sign-in).\n   *\n   *\tIf the Customer exists in the Project but the `stores` field references a different [Store](ctp:api:type:Store), this method returns an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/login',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tReturns a Cart for a given `id` in a Store. Returns a `200 OK` status if the Cart exists.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Cart exists in the Store for the given `id`.\n   *\t- If the Cart exists but does not belong to a Store, or the Cart's `store` field references a different Store.\n   *\t- If the Cart exists but does not have either a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates the Cart for a given `id` in a Store. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Cart exists in the Store for the given `id`.\n   *\t- If the Cart exists but does not belong to a Store, or the Cart's `store` field references a different Store.\n   *\t- If the Cart exists but does not have either a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes the Cart for a given `id` in a Store. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Cart exists in the Store for the given `id`.\n   *\t- If the Cart exists in the Project but does not belong to a Store, or the Cart's `store` field references a different Store.\n   *\t- If the Cart exists in the Project but does not have either a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tReturns all Carts that match a given Query Predicate and contain either a matching `customerId` or `anonymousId` in a Store.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Cart exists for a Store that matches the given Query Predicate, and contains a matching `customerId` or `anonymousId`. Returns a `200 OK` status if any Carts match these conditions, or [Not Found](/../api/errors#404-not-found) otherwise.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\n   *\tCreates a Cart in a Store for the Customer or anonymous user. The `customerId` or `anonymousId` field on the Cart is automatically set based on the [customer:{id}](/scopes#composable-commerce-oauth) or [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   *\tThe `store` field in the created [Cart](ctp:api:type:Cart) is set to the Store specified by the `storeKey` path parameter.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [CountryNotConfiguredInStore](ctp:api:type:CountryNotConfiguredInStoreError)\n   *\t- [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tThis is the last step in the [email verification process of a Customer](/../api/projects/customers#email-verification-of-customer-in-store). Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Customer exists with the `id` specified in the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\t- If the Customer exists but is associated with a different Store than what is specified in the `manage_my_profile:{projectKey}:{storeKey}` scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/email/confirm',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\n   *\tRetrieves the authenticated Customer (that matches the given email/password pair) if they are part of a specific [Store](ctp:api:type:Store).\n   *\n   *\tIf used with an optional [access token for an anonymous session](ctp:api:type:AnonymousSession), all Orders and Carts that belong to the `anonymousId` are assigned to the newly logged-in Customer.\n   *\n   *\t- If the Customer does not have a Cart, the most recently modified anonymous cart becomes the Customer's Cart.\n   *\t- If the Customer already has a Cart, the most recently modified anonymous cart is handled according to [AnonymousCartSignInMode](ctp:api:type:AnonymousCartSignInMode).\n   *\n   *\tA Cart returned in the [CustomerSignInResult](ctp:api:type:CustomerSignInResult) has any invalid Line Items removed and is [updated](/api/carts-orders-overview#cart-updates) with the latest prices, taxes, and discounts. During these updates, the following errors can be returned: [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError) and [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError).\n   *\n   *\tIf an account with the given credentials is not found, an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error is returned.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/login',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves an Order with the provided `id` in a [Store](ctp:api:type:Store) for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Orders exists in the Store with the provided `id`.\n   *\t- If an Order exists but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If an Order exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an Order exists with the provided `id` in a [Store](ctp:api:type:Store) for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:\n   *\n   *\t- If no Order exists in the Store with the provided `id`.\n   *\t- If an Order exists but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If an Order exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves Orders in a [Store](ctp:api:type:Store) for the authenticated Customer or anonymous user.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Orders exist that match the provided query predicate.\n   *\t- If an Order exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Orders exist for the provided query predicate in a [Store](ctp:api:type:Store) for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:\n   *\n   *\t- If no Orders exist in the Store that match the Query Predicate.\n   *\t- If an Order matches the Query Predicate, but no `store` is specified, or the `store` field references a different Store.\n   *\t- If an Order matches the Query Predicate, but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\n   *\tCreates an Order from a Cart in a [Store](ctp:api:type:Store) for the Customer or anonymous user. The `customerId` or `anonymousId` field on the Order is automatically set based on the [customer:{id}](/scopes#composable-commerce-oauth) or [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   *\tThe Cart must have a [shipping address set](ctp:api:type:CartSetShippingAddressAction) for taxes to be calculated. When creating [B2B Orders](/associates-overview#b2b-resources), the Customer must have the `CreateMyOrdersFromMyCarts` [Permission](ctp:api:type:Permission).\n   *\n   *\tIf the Cart's `customerId` does not match the [customer:{id}](/scopes#composable-commerce-oauth) scope, or the `anonymousId` does not match the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.\n   *\n   *\tCreating an Order produces the [OrderCreated](ctp:api:type:OrderCreatedMessage) Message.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [AssociateMissingPermission](ctp:api:type:AssociateMissingPermissionError)\n   *\t- [CountryNotConfiguredInStore](ctp:api:type:CountryNotConfiguredInStoreError)\n   *\t- [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\t- [OutOfStock](ctp:api:type:OutOfStockError)\n   *\t- [PriceChanged](ctp:api:type:PriceChangedError)\n   *\t- [ShippingMethodDoesNotMatchCart](ctp:api:type:ShippingMethodDoesNotMatchCartError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tThis is the last step in the [password reset process of the authenticated Customer](/../api/projects/customers#password-reset-of-customer-in-store).\n   *\n   *\tResetting a password produces the Customer [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Customer exists with the `id` specified in the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\t- If the Customer exists but is associated with a different Store than what is specified in the `manage_my_profile:{projectKey}:{storeKey}` scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/password/reset',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  reset() {\n    return new ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tChanging the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.  Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Customer exists with the `id` specified in the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\t- If the Customer exists but is associated with a different Store than what is specified in the `manage_my_profile:{projectKey}:{storeKey}` scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/password',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a ShoppingList with the provided `id` for the authenticated Customer or anonymous user in a [Store](ctp:api:type:Store). Returns `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList matches the provided `id` in a Store.\n   *\t- If a ShoppingList matches the provided `id` but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If a ShoppingList matches the provided `id` in a Store but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShoppingList exists with the provided `id` for the authenticated Customer or anonymous user in a [Store](ctp:api:type:Store). Returns a `200 OK` status if successful.\n   *\n   *\tA [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList matches the provided `id` in a Store.\n   *\t- If a ShoppingList matches the provided `id` but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If a ShoppingList matches the provided `id` in a Store but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a ShoppingList for the authenticated Customer or anonymous user in a [Store](ctp:api:type:Store) using one or more [update actions](/../api/projects/me-shoppingLists#update-actions). Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList matches the provided `id` in a Store.\n   *\t- If a ShoppingList matches the provided `id` but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If a ShoppingList matches the provided `id` in a Store but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a ShoppingList in a [Store](ctp:api:type:Store). Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList matches the provided `id` in a Store.\n   *\t- If a ShoppingList matches the provided `id` but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If a ShoppingList matches the provided `id` in a Store but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a ShoppingList with the provided `key` for the authenticated Customer or anonymous user in a [Store](ctp:api:type:Store). Returns `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList matches the provided `key` in a Store.\n   *\t- If a ShoppingList matches the provided `key` but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If a ShoppingList matches the provided `key` in a Store but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope,\n   *\t   or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShoppingList exists with the provided `key` for the authenticated Customer or anonymous user in a [Store](ctp:api:type:Store). Returns a `200 OK` status if successful.\n   *\n   *\tA [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists that matches the provided `key` in a Store.\n   *\t- If a ShoppingList matches the provided `key` but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If a ShoppingList matches the provided `key` in a Store but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a ShoppingList for the authenticated Customer or anonymous user in a [Store](ctp:api:type:Store) using one or more [update actions](/../api/projects/me-shoppingLists#update-actions). Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList matches the provided `key` in a Store.\n   *\t- If a ShoppingList matches the provided `key` but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If a ShoppingList matches the provided `key` in a Store but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a ShoppingList in a [Store](ctp:api:type:Store). Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList matches the provided `key` in a Store.\n   *\t- If a ShoppingList matches the provided `key` but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If a ShoppingList matches the provided `key` in a Store but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves all ShoppingLists for the authenticated Customer or anonymous user in a [Store](ctp:api:type:Store). Returns `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingLists exist in a Store.\n   *\t- If a ShoppingList exists but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If a ShoppingList exists in a Store but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more ShoppingLists exist for the provided query predicate for the authenticated Customer or anonymous user in a [Store](ctp:api:type:Store). Returns `200 OK` status if successful.\n   *\n   *\tA [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingLists exist for the provided query predicate in a Store.\n   *\t- If a ShoppingList matches the query predicate but does not have a `store` specified, or the `store` field references a different Store.\n   *\t- If a ShoppingList exists in a Store but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\n   *\tCreates a ShoppingList for the authenticated Customer or anonymous user in a [Store](ctp:api:type:Store). The `customer` or `anonymousId` field on the ShoppingList is automatically set based on the given [customer:{id}](/scopes#composable-commerce-oauth) or [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   *\tWhen using this endpoint, the `store` field of a ShoppingList is always set to the Store specified in the path parameter.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\n   *\tIf used with an optional [access token for an anonymous session](ctp:api:type:AnonymousSession), all Orders and Carts that belong to the `anonymousId` are assigned to the newly created Customer.\n   *\n   *\tIf omitted in the request body, the [Customer](ctp:api:type:Customer) `stores` field is set to the [Store](ctp:api:type:Store) specified in the path parameter.\n   *\n   *\tA Cart returned in the [CustomerSignInResult](ctp:api:type:CustomerSignInResult) has any invalid Line Items removed and is [updated](/api/carts-orders-overview#cart-updates) with the latest prices, taxes, and discounts. During these updates, the following errors can be returned: [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError) and [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError).\n   *\n   *\tCreating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me/signup',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tA shopping cart holds product variants and can be ordered.\n   */\n  carts() {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tAn order can be created from a order, usually after a checkout process has been completed.\n   */\n  orders() {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  activeCart() {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tshopping-lists e.g. for wishlist support\n   *\n   */\n  shoppingLists() {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  emailConfirm() {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  password() {\n    return new ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  signup() {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  login() {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tReturns a Customer for a given Query Predicate in a [Store](ctp:api:type:Store). Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Customer exists in the Store for the given Query Predicate.\n   *\t- If a Customer exists in the Store for the given Query Predicate, but does not have an `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\t- If a Customer exists for the given Query Predicate but is associated with a different Store than what is specified in the `manage_my_profile:{projectKey}:{storeKey}` scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates the Customer in a [Store](ctp:api:type:Store). Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Customer exists with the `id` specified in the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\t- If the Customer exists but is associated with a different Store than what is specified in the `manage_my_profile:{projectKey}:{storeKey}` scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes the Customer in a [Store](ctp:api:type:Store). Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Customer exists with the `id` specified in the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\t- If the Customer exists but is associated with a different Store than what is specified in the `manage_my_profile:{projectKey}:{storeKey}` scope.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/me',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyOrdersQuotesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\n   *\tCreates an Order from a [Quote](ctp:api:type:Quote) in a [Store](ctp:api:type:Store). The referenced Quote must have the `Pending` [state](ctp:api:type:QuoteState) and must be valid (not past the `validTo` date); otherwise, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.\n   *\n   *\tProduces the [OrderCreated](ctp:api:type:OrderCreatedMessage) Message.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [OutOfStock](ctp:api:type:OutOfStockError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [InvalidOperation](ctp:api:type:InvalidOperationError)\n   *\t- [CountryNotConfiguredInStore](ctp:api:type:CountryNotConfiguredInStoreError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves an Order with the provided `id` in a [Store](ctp:api:type:Store).\n   *\tIf the Order exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an Order exists with the provided `id` in a [Store](ctp:api:type:Store). Returns a `200 OK` status if the Order exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates an Order in a [Store](ctp:api:type:Store) using one or more [update actions](/../api/projects/orders#update-actions).\n   *\tIf the Order exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes an Order in a [Store](ctp:api:type:Store).\n   *\tIf the Order exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   *\tDeleting an Order produces the [OrderDeleted](ctp:api:type:OrderDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves an Order with the provided `orderNumber` in a [Store](ctp:api:type:Store).\n   *\tIf the Order exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an Order exists with the provided `orderNumber` in a [Store](ctp:api:type:Store). Returns a `200 OK` status if the Order exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates an Order in a [Store](ctp:api:type:Store) using one or more [update actions](/../api/projects/orders#update-actions).\n   *\tIf the Order exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes an Order in a [Store](ctp:api:type:Store).\n   *\tIf the Order exists in the Project but does not have a `store` specified, or the `store` field references a different Store, this method returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error.\n   *\n   *\tDeleting an Order produces the [OrderDeleted](ctp:api:type:OrderDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  orderQuote() {\n    return new ByProjectKeyInStoreKeyByStoreKeyOrdersQuotesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withOrderNumber(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves Orders in a [Store](ctp:api:type:Store).\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Orders exist for the provided query predicate in a [Store](ctp:api:type:Store). Returns a `200 OK` status if any Orders match the query predicate, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates an Order from a Cart in a [Store](ctp:api:type:Store).\n   *\tBefore you create an Order, the Cart must have a [shipping address set](ctp:api:type:CartSetShippingAddressAction).\n   *\tThe shipping address is used for tax calculation for a Cart with `Platform` [TaxMode](ctp:api:type:TaxMode).\n   *\n   *\tCreating an Order produces the [OrderCreated](ctp:api:type:OrderCreatedMessage) Message.\n   *\tIf a server-side problem occurs, indicated by a 500 Internal Server Error HTTP response, the Order creation may still successfully complete after the error is returned.\n   *\tIf you receive this error, you should verify the status of the Order by querying a unique identifier supplied during the creation request, such as the Order number.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [OutOfStock](ctp:api:type:OutOfStockError)\n   *\t- [PriceChanged](ctp:api:type:PriceChangedError)\n   *\t- [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)\n   *\t- [ShippingMethodDoesNotMatchCart](ctp:api:type:ShippingMethodDoesNotMatchCartError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [InvalidOperation](ctp:api:type:InvalidOperationError)\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\t- [CountryNotConfiguredInStore](ctp:api:type:CountryNotConfiguredInStoreError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tGets the current or staged representation of a [Product](ctp:api:type:Product) by its ID in the specified [Store](ctp:api:type:Store).\n   *\tIf the Store has defined some languages, countries, distribution, supply Channels, and/or Product Selection,\n   *\tthey are used for projections based on [locale](ctp:api:type:ProductProjectionLocales), [price](ctp:api:type:ProductProjectionPrices),\n   *\tand [inventory](ctp:api:type:ProductProjectionInventoryEntries).\n   *\n   *\tIf [ProductSelection](ctp:api:type:ProductSelection) is used, it affects the [availability of the Product](/projects/stores#products-available-in-store) in the specified Store.\n   *\n   *\tIf a [ProductTailoring](ctp:api:type:ProductTailoring) exists for the Product with the given `id` and the given Store, this endpoint returns the ProductProjection with tailored data.\n   *\n   *\tWhen used with an API Client that has the `view_published_products:{projectKey}` scope, this endpoint only returns published (current) Product Projections.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-projections/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if the current or staged representations of a Product exists with the provided `id` in the specified [Store](ctp:api:type:Store). Returns a `200 OK` status if the ProductProjection exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-projections/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tGets the current or staged representation of a [Product](ctp:api:type:Product) by its key in the specified [Store](ctp:api:type:Store).\n   *\tIf the Store has defined some languages, countries, distribution, supply Channels, and/or Product Selection,\n   *\tthey are used for projections based on [locale](ctp:api:type:ProductProjectionLocales), [price](ctp:api:type:ProductProjectionPrices),\n   *\tand [inventory](ctp:api:type:ProductProjectionInventoryEntries).\n   *\n   *\tIf [ProductSelection](ctp:api:type:ProductSelection) is used, it affects the [availability of the Product](/projects/stores#products-available-in-store) in the specified Store.\n   *\n   *\tIf a [ProductTailoring](ctp:api:type:ProductTailoring) exists for the Product with the given `key` and the given Store, this endpoint returns the ProductProjection with tailored data.\n   *\n   *\tWhen used with an API Client that has the `view_published_products:{projectKey}` scope, this endpoint only returns published (current) Product Projections.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-projections/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if the current or staged representations of a Product exists with the provided `key` in the specified [Store](ctp:api:type:Store). Returns a `200 OK` status if the ProductProjection exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-projections/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tQueries Product Selection assignments in a specific [Store](ctp:api:type:Store).\n   *\n   *\tThe response will include duplicate Products whenever more than one active Product Selection of the Store\n   *\tincludes a Product. To make clear through which Product Selection a Product is available in the Store\n   *\tthe response contains assignments including both the Product and the Product Selection.\n   *\tOnly Products of Product Selections that are activated in the Store will be returned.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-selection-assignments',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductTailoringRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tQueries Product Tailoring in a specific [Store](ctp:api:type:Store).\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates a [ProductTailoring](ctp:api:type:ProductTailoring) in the [Store](ctp:api:type:Store) specified by `storeKey`.\n   *\tWhen using this endpoint the ProductTailoring's `store` field is always set to the [Store](ctp:api:type:Store) specified in the path parameter.\n   *\n   *\tGenerates the [ProductTailoringCreated](ctp:api:type:ProductTailoringCreatedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringImagesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUploads a JPEG, PNG and GIF file to a [ProductVariantTailoring](ctp:api:type:ProductVariantTailoring).\n   *\tThe maximum file size of the image is **10MB**.\n   *\tEither `variant` or `sku` is required to update a specific ProductVariant.\n   *\tIf neither is provided, the image is uploaded to the Master Variant of the Product.\n   *\n   *\tThe response status code depends on the size of the original image.\n   *\tIf the image is small, the API responds with `200 OK`, and if the image is larger, it responds with `202 Accepted`.\n   *\tThe Product returned with a `202 Accepted` status code contains a `warnings` field with an [ImageProcessingOngoing](ctp:api:type:ImageProcessingOngoingWarning) Warning.\n   *\n   *\tProduces the [ProductTailoringImageAdded](/projects/messages/product-catalog-messages#product-tailoring-image-added) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/products/{productID}/product-tailoring/images',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  images() {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringImagesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tGets the current or staged representation of a [Product Tailoring](ctp:api:type:ProductTailoring) by its Product ID in the specified [Store](ctp:api:type:Store).\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/products/{productID}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates the current or staged representation of a [Product Tailoring](ctp:api:type:ProductTailoring) by its Product ID in the specified [Store](ctp:api:type:Store).\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/products/{productID}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tGenerates the [ProductTailoringDeleted](ctp:api:type:ProductTailoringDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/products/{productID}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  productTailoring() {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyProductTailoringImagesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUploads a JPEG, PNG and GIF file to a [ProductVariantTailoring](ctp:api:type:ProductVariantTailoring).\n   *\tThe maximum file size of the image is **10MB**.\n   *\tEither `variant` or `sku` is required to update a specific ProductVariant.\n   *\tIf neither is provided, the image is uploaded to the Master Variant of the Product.\n   *\n   *\tThe response status code depends on the size of the original image.\n   *\tIf the image is small, the API responds with `200 OK`, and if the image is larger, it responds with `202 Accepted`.\n   *\tThe Product returned with a `202 Accepted` status code contains a `warnings` field with an [ImageProcessingOngoing](ctp:api:type:ImageProcessingOngoingWarning) Warning.\n   *\n   *\tProduces the [ProductTailoringImageAdded](/projects/messages/product-catalog-messages#product-tailoring-image-added) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/products/key={productKey}/product-tailoring/images',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyProductTailoringRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  images() {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyProductTailoringImagesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tGets the current or staged representation of a [Product Tailoring](ctp:api:type:ProductTailoring) by its Product key in the specified [Store](ctp:api:type:Store).\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/products/key={productKey}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates the current or staged representation of a [Product Tailoring](ctp:api:type:ProductTailoring) by its Product key in the specified [Store](ctp:api:type:Store).\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/products/key={productKey}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tGenerates the [ProductTailoringDeleted](ctp:api:type:ProductTailoringDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/products/key={productKey}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  productTailoring() {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyProductTailoringRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyProductsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withProductId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withProductKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a QuoteRequest exists with the provided `id`. Returns a `200 OK` status if the QuoteRequest exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a QuoteRequest exists with the provided `key`. Returns a `200 OK` status if the QuoteRequest exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more QuoteRequests exist for the provided query predicate. Returns a `200 OK` status if any QuoteRequests match the query predicate, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyQuotesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Quote exists with the provided `id`. Returns a `200 OK` status if the Quote exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyQuotesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Quote exists with the provided `key`. Returns a `200 OK` status if the Quote exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyQuotesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyQuotesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyQuotesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Quotes exist for the provided query predicate. Returns a `200 OK` status if any Quotes match the query predicate, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves all the active ShippingMethods that can ship to the shipping address of the given Cart in a given [Store](ctp:api:type:Store).\n   *\tEach ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`.\n   *\tThis ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).\n   *\tIf a matching ShippingMethod has `isDefault` set to `true`, it is returned as the first item in the array.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an active ShippingMethod that can ship to the shipping address of the given Cart exists in the given [Store](ctp:api:type:Store). Returns a `200 OK` status if the ShippingMethod exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shipping-methods/matching-cart',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tGet ShippingMethods for a cart in a store\n   */\n  matchingCart() {\n    return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a ShoppingList with the provided `id` in a [Store](ctp:api:type:Store).\n   *\tIf a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,\n   *\tthe [ResourceNotFound](/errors#404-not-found-1) error is returned.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShoppingList exists with the provided `id` in a [Store](ctp:api:type:Store). Returns a `200 OK` status if the ShoppingList exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a ShoppingList in a [Store](ctp:api:type:Store) using one or more [update actions](/../api/projects/shoppingLists#update-actions).\n   *\tIf a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,\n   *\tthe [ResourceNotFound](/errors#404-not-found-1) error is returned.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a ShoppingList in a [Store](ctp:api:type:Store).\n   *\tIf a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,\n   *\tthe [ResourceNotFound](/errors#404-not-found-1) error is returned.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a ShoppingList with the provided `key` in a [Store](ctp:api:type:Store).\n   *\tIf a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,\n   *\tthe [ResourceNotFound](/errors#404-not-found-1) error is returned.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShoppingList exists with the provided `key` in a [Store](ctp:api:type:Store). Returns a `200 OK` status if the ShoppingList exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a ShoppingList in a [Store](ctp:api:type:Store) using one or more [update actions](/../api/projects/shoppingLists#update-actions).\n   *\tIf a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,\n   *\tthe [ResourceNotFound](/errors#404-not-found-1) error is returned.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a ShoppingList in a [Store](ctp:api:type:Store).\n   *\tIf a ShoppingList exists in a Project but does _not_ have the `store` field, or the `store` field references a different Store,\n   *\tthe [ResourceNotFound](/errors#404-not-found-1) error is returned.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves all ShoppingLists in a [Store](ctp:api:type:Store).\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more ShoppingLists exist for the provided query predicate in a [Store](ctp:api:type:Store). Returns a `200 OK` status if any ShoppingLists match the query predicate or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates a ShoppingList in a [Store](ctp:api:type:Store).\n   *\tWhen using this endpoint, the `store` field of a ShoppingList is always set to the [Store](ctp:api:type:Store) specified in the path parameter.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyStagedQuotesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a StagedQuote exists with the provided `id`. Returns a `200 OK` status if the StagedQuote exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyStagedQuotesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a StagedQuote exists with the provided `key`. Returns a `200 OK` status if the StagedQuote exists or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyStagedQuotesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyStagedQuotesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyStagedQuotesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more StagedQuotes exist for the provided query predicate. Returns a `200 OK` status if any StagedQuotes match the query predicate, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/in-store/key={storeKey}/staged-quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInStoreKeyByStoreKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tA shopping cart holds product variants and can be ordered.\n   */\n  carts() {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tAn order can be created from a cart, usually after a checkout process has been completed.\n   */\n  orders() {\n    return new ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  me() {\n    return new ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA Customer is a person purchasing products. Carts, Orders,\n   *\tComments and Reviews can be associated to a Customer.\n   *\n   */\n  customers() {\n    return new ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tRetrieves the authenticated customer.\n   */\n  login() {\n    return new ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  shippingMethods() {\n    return new ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tshopping-lists e.g. for wishlist support\n   *\n   */\n  shoppingLists() {\n    return new ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  productProjections() {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  productSelectionAssignments() {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  cartDiscounts() {\n    return new ByProjectKeyInStoreKeyByStoreKeyCartDiscountsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA Product Tailoring holds tailored data of Product in the Store.\n   */\n  productTailoring() {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductTailoringRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  products() {\n    return new ByProjectKeyInStoreKeyByStoreKeyProductsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA request for a Quote holds product variants and can be ordered.\n   */\n  quoteRequests() {\n    return new ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA staged quote holds the negotiation between the [Buyer](/../api/quotes-overview#buyer) and the [Seller](/../api/quotes-overview#seller).\n   */\n  stagedQuotes() {\n    return new ByProjectKeyInStoreKeyByStoreKeyStagedQuotesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA quote holds the negotiated offer.\n   */\n  quotes() {\n    return new ByProjectKeyInStoreKeyByStoreKeyQuotesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA Business Unit can represent a Company or a Division.\n   */\n  businessUnits() {\n    return new ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInventoryByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/inventory/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an InventoryEntry exists with the provided `id`. Returns a `200 OK` status if the InventoryEntry exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/inventory/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/inventory/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tProduces the [InventoryEntryDeleted](ctp:api:type:InventoryEntryDeletedMessage) Message.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/inventory/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInventoryKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/inventory/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an InventoryEntry exists with the provided `key`. Returns a `200 OK` status if the InventoryEntry exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/inventory/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/inventory/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tProduces the [InventoryEntryDeleted](ctp:api:type:InventoryEntryDeletedMessage) Message.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/inventory/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyInventoryRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyInventoryByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyInventoryKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/inventory',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more InventoryEntries exist for the provided query predicate. Returns a `200 OK` status if any Inventory Entries match the Query Predicate, a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/inventory',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tProduces the [InventoryEntryCreated](ctp:api:type:InventoryEntryCreatedMessage) Message.\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/inventory',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyLoginRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tAuthenticates a global Customer not associated with a Store.\n   *\tFor more information, see [Global versus Store-specific Customers](/../api/customers-overview#global-versus-store-specific-customers).\n   *\tIf the Customer is registered in a Store, use the [Authenticate (sign in) Customer in Store](ctp:api:endpoint:/{projectKey}/in-store/key={storeKey}/login:POST) method.\n   *\n   *\tTriggers [Cart merge during sign-in](/../api/customers-overview#cart-merge-during-sign-in).\n   *\n   *\tA Cart returned in the [CustomerSignInResult](ctp:api:type:CustomerSignInResult) has any invalid Line Items removed and is [updated](/api/carts-orders-overview#cart-updates) with the latest prices, taxes, and discounts. During these updates, the following errors can be returned: [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError) and [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError).\n   *\n   *\tIf an account with the given credentials is not found, an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error is returned.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/login',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeBusinessUnitsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tReturns a Business Unit for a given `id`. Returns a `200 OK` status if the Business Unit exists and the Customer has access to it, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a BusinessUnit exists with the provided `id`. Returns a `200 OK` status if the BusinessUnit exists and the Customer has access to it, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a Business Unit for a given `id`. Returns a `200 OK` status if the Business Unit exists and the Customer has access to it, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/business-units/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tReturns a Business Unit for a given `key`. Returns a `200 OK` status if the Business Unit exists and the Customer has access to it, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a BusinessUnit exists with the provided `key`. Returns a `200 OK` status if the Business Unit exists and the Customer has access to it, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a Business Unit for a given `key`. Returns a `200 OK` status if the Business Unit exists and the Customer has access to it, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/business-units/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeBusinessUnitsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyMeBusinessUnitsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tReturns all of the authenticated Customer’s Business Units in a Project. Returns a `200 OK` status if successful, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more BusinessUnits exist for the provided query predicate. Returns a `200 OK` status if any BusinessUnits match the Query Predicate and the Customer has access to them, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tAutomatically assigns the Associate to the Business Unit in the default [Associate Role](ctp:api:type:AssociateRole) defined in [BusinessUnitConfiguration](ctp:api:type:BusinessUnitConfiguration). If there is no default Associate Role configured, this request fails with an [InvalidOperation](ctp:api:type:InvalidOperationError) error. When creating a Division, the Associate must have the `AddChildUnits` [Permission](ctp:api:type:Permission) in the parent unit. If the required [Permission](/projects/associate-roles#permission) is missing, an [AssociateMissingPermission](/errors#associatemissingpermission) error is returned.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/business-units',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeCartsReplicateRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tCreates a new Cart by replicating an existing Cart or Order of the authenticated Customer.\n   *\tThis can be useful in cases where a customer wants to cancel a recent order to make some changes or reorder a previous order.\n   *\n   *\tThe replicated Cart preserves Customer information, Line Items and Custom Line Items, Custom Fields, Discount Codes, and other settings of the Cart or Order.\n   *\tIf the Line Items become invalid, for example, due to removed Products or Prices, they are removed from the new Cart.\n   *\tIf the Customer switches to another Customer Group, the new Cart is updated with the new value.\n   *\tIt has up-to-date Tax Rates, Prices, and Line Item product data and is in `Active` [CartState](ctp:api:type:CartState).\n   *\n   *\tThe new Cart does not contain Payments or Deliveries. The [State](ctp:api:type:ItemState) of Line Items and Custom Line Items is reset to `initial`.\n   *\n   *\tIf the Cart or Order to be replicated does not belong to the authenticated Customer, the API returns a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/carts/replicate',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeCartsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tReturns a Cart for a given `id`. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Cart exists with the provided `id`.\n   *\t- If the Cart exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Cart exists with the provided `id`. Returns a `200 OK` status if the Cart exists.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Cart exists with the provided `id`.\n   *\t- If the Cart exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates the Cart for a given `id`. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Cart exists with the provided `id`.\n   *\t- If the Cart exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes the Cart for a given `id`. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Cart exists with the provided `id`.\n   *\t- If the Cart exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/me/carts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeCartsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyMeCartsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  replicate() {\n    return new ByProjectKeyMeCartsReplicateRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tReturns all Carts that match a given Query Predicate and contain either a matching `customerId` or `anonymousId`.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Cart exists that matches a given Query Predicate and contains either a matching `customerId` or `anonymousId`. Returns a `200 OK` status if the Cart exists, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\n   *\tCreates a Cart for the Customer or anonymous user. The `customerId` or `anonymousId` field on the Cart is automatically set based on the [customer:{id}](/scopes#composable-commerce-oauth) or [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/carts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeEmailConfirmRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tThis is the last step in the [email verification process of a Customer](/../api/projects/customers#email-verification-of-customer).\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/email/confirm',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeLoginRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves the authenticated customer (that matches the given email/password pair).\n   *\n   *\tIf used with an optional [access token for an anonymous session](ctp:api:type:AnonymousSession), all Orders and Carts that belong to the `anonymousId` are assigned to the newly logged-in Customer.\n   *\n   *\t- If the Customer does not have a Cart yet, the most recently modified anonymous cart becomes the Customer's Cart.\n   *\t- If the Customer already has a Cart, the most recently modified anonymous cart is handled in accordance with [AnonymousCartSignInMode](ctp:api:type:AnonymousCartSignInMode).\n   *\n   *\tA Cart returned in the [CustomerSignInResult](ctp:api:type:CustomerSignInResult) has any invalid Line Items removed and is [updated](/api/carts-orders-overview#cart-updates) with the latest prices, taxes, and discounts. During these updates, the following errors can be returned: [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError) and [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError).\n   *\n   *\tIf an account with the given credentials is not found, an [InvalidCredentials](ctp:api:type:InvalidCredentialsError) error is returned.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/login',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeOrdersQuotesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\n   *\tCreates an Order from a [Quote](ctp:api:type:Quote) for the authenticated Customer. To create [B2B Orders](/associates-overview#b2b-resources), the Customer must have the `CreateMyOrdersFromMyQuotes` [Permission](ctp:api:type:Permission).\n   *\n   *\tThe referenced Quote must have the `Pending` [state](ctp:api:type:QuoteState) and must be valid (not past the `validTo` date); otherwise, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.\n   *\n   *\tProduces the [OrderCreated](ctp:api:type:OrderCreatedMessage) Message.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [OutOfStock](ctp:api:type:OutOfStockError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [CountryNotConfiguredInStore](ctp:api:type:CountryNotConfiguredInStoreError)\n   *\t- [AssociateMissingPermission](ctp:api:type:AssociateMissingPermissionError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/orders/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeOrdersByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves an Order with the provided `id` for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Order exists for the provided `id`.\n   *\t- If the Order exists but does not have either a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an Order exists with the provided `id` for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:\n   *\n   *\t- If no Order exists for the provided `id`.\n   *\t- If the Order exists but does not have either a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeOrdersRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyMeOrdersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  orderQuote() {\n    return new ByProjectKeyMeOrdersQuotesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves Orders for the authenticated Customer or anonymous user.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Orders exist for the provided query predicate.\n   *\t- If an Order exists but does not have a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Orders exist for the provided query predicate for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:\n   *\n   *\t- If no Orders exist that match the provided query predicate.\n   *\t- If one or more Orders exist but don't have either a `customerId` that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope, or an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\n   *\tCreates an Order from a Cart for the Customer or anonymous user. The `customerId` or `anonymousId` field on the Order is automatically set based on the [customer:{id}](/scopes#composable-commerce-oauth) or [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   *\tThe Cart must have a [shipping address set](ctp:api:type:CartSetShippingAddressAction) for taxes to be calculated. When creating [B2B Orders](/associates-overview#b2b-resources), the Customer must have the `CreateMyOrdersFromMyCarts` [Permission](ctp:api:type:Permission).\n   *\tCreating an Order produces the [OrderCreated](ctp:api:type:OrderCreatedMessage) Message.\n   *\n   *\tIf the Cart's `customerId` does not match the [customer:{id}](/scopes#composable-commerce-oauth) scope, or the `anonymousId` does not match the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned.\n   *\n   *\tIf a server-side problem occurs, indicated by a 500 Internal Server Error HTTP response, the Order creation may still successfully complete after the error is returned.\n   *\tIf you receive this error, you should verify the status of the Order by querying a unique identifier supplied during the creation request, such as the Order number.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [AssociateMissingPermission](ctp:api:type:AssociateMissingPermissionError)\n   *\t- [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [OutOfStock](ctp:api:type:OutOfStockError)\n   *\t- [PriceChanged](ctp:api:type:PriceChangedError)\n   *\t- [ShippingMethodDoesNotMatchCart](ctp:api:type:ShippingMethodDoesNotMatchCartError)\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMePasswordResetRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tThis is the last step in the [password reset process of a Customer](/../api/projects/customers#password-reset-of-customer).\n   *\n   *\tResetting a password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=true`.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/password/reset',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMePasswordRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  reset() {\n    return new ByProjectKeyMePasswordResetRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tChanging the password of the Customer produces the [CustomerPasswordUpdated](ctp:api:type:CustomerPasswordUpdatedMessage) Message with `reset=false`.\n   *\n   *\tIf the current password does not match, an [InvalidCurrentPassword](ctp:api:type:InvalidCurrentPasswordError) error is returned.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/password',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMePaymentsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a [Payment](/projects/me-payments#mypayment) with the provided `id` for the authenticated Customer or anonymous user.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/payments/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a [Payment](/projects/me-payments#mypayment) exists with the provided `id` for the authenticated Customer or anonymous user. Returns a `200 OK` status if the Payment exists, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/payments/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a [Payment](/projects/me-payments#mypayment) for the authenticated Customer or anonymous user using one or more [update actions](/../api/projects/me-payments#update-actions).\n   *\tYou can only update a Payment if it has no [Transactions](ctp:api:type:Transaction).\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/payments/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a [Payment](/projects/me-payments#mypayment) with the provided `id` for the authenticated Customer or anonymous user.\n   *\tYou can only delete a Payment if it has no [Transactions](ctp:api:type:Transaction).\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/me/payments/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMePaymentsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyMePaymentsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves all [Payments](/projects/me-payments#mypayment) for the authenticated Customer or anonymous user.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/payments',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more [Payments](/projects/me-payments#mypayment) exist for the provided query predicate for the authenticated Customer or anonymous user. Returns a `200 OK` status if any Payments match the query predicate, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/payments',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates a [Payment](/projects/me-payments#mypayment) for the authenticated Customer or anonymous user.\n   *\tCreating a Payment produces the [PaymentCreated](ctp:api:type:PaymentCreatedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/payments',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeQuoteRequestsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a QuoteRequest exists with the provided `id`. Returns a `200 OK` status if the QuoteRequest exists or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a QuoteRequest exists with the provided `key`. Returns a `200 OK` status if the QuoteRequest exists or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeQuoteRequestsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyMeQuoteRequestsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tReturns all Quote Requests that match a given Query Predicate. Returns a `200 OK` status if successful.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more QuoteRequests exist for the provided query predicate. Returns a `200 OK` status if any QuoteRequests match the query predicate, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeQuotesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Quote exists with the provided `id`. Returns a `200 OK` status if the Quote exists or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeQuotesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Quote exists with the provided `key`. Returns a `200 OK` status if the Quote exists or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeQuotesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyMeQuotesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyMeQuotesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Quotes exist for the provided query predicate. Returns a `200 OK` status if any Quotes match the query predicate, or a [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeShoppingListsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a ShoppingList with the provided `id` for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists with the provided `id`.\n   *\t- If a ShoppingList exists but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShoppingList exists with the provided `id` for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists for the provided `id`.\n   *\t- If a ShoppingList exists but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a ShoppingList for the authenticated Customer or anonymous user using one or more [update actions](/../api/projects/me-shoppingLists#update-actions).  Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists for the provided `id`.\n   *\t- If a ShoppingList exists but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a ShoppingList for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists with the provided `id`.\n   *\t- If a ShoppingList exists but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/me/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a ShoppingList with the provided `key` for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists with the provided `key`.\n   *\t- If a ShoppingList exists but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShoppingList exists with the provided `key` for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists with the provided `key`.\n   *\t- If a ShoppingList exists but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a ShoppingList for the authenticated Customer or anonymous user using one or more [update actions](/../api/projects/me-shoppingLists#update-actions).  Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists for the provided `key`.\n   *\t- If a ShoppingList exists but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a ShoppingList for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists for the provided `key`.\n   *\t- If a ShoppingList exists but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/me/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeShoppingListsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyMeShoppingListsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves all ShoppingLists for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists for the provided query predicate.\n   *\t- If a ShoppingList exists but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more ShoppingLists exist for the provided query predicate for the authenticated Customer or anonymous user. Returns a `200 OK` status if successful.\n   *\n   *\tA [Not Found](/../api/errors#404-not-found) error is returned in the following scenarios:\n   *\n   *\t- If no ShoppingList exists for the provided query predicate.\n   *\t- If a ShoppingList exists but does not contain either an `anonymousId` that matches the [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope, or a `customer` with `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/me/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates a ShoppingList for the authenticated Customer or anonymous user. The `customerId` or `anonymousId` on the ShoppingList is automatically set based on the given [customer:{id}](/scopes#composable-commerce-oauth) or [anonymous_id:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeSignupRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf used with an optional [access token for an anonymous session](ctp:api:type:AnonymousSession), all Orders and Carts that belong to the `anonymousId` are assigned to the newly created Customer.\n   *\n   *\tCreating a Customer produces the [CustomerCreated](ctp:api:type:CustomerCreatedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me/signup',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMeRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  emailConfirm() {\n    return new ByProjectKeyMeEmailConfirmRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  password() {\n    return new ByProjectKeyMePasswordRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  signup() {\n    return new ByProjectKeyMeSignupRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  login() {\n    return new ByProjectKeyMeLoginRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  activeCart() {\n    return new ByProjectKeyMeActiveCartRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tMyBusinessUnit creates and provides access to Business Units scoped to a specific user.\n   */\n  businessUnits() {\n    return new ByProjectKeyMeBusinessUnitsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA shopping cart holds product variants and can be ordered.\n   */\n  carts() {\n    return new ByProjectKeyMeCartsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tAn order can be created from a cart, usually after a checkout process has been completed.\n   */\n  orders() {\n    return new ByProjectKeyMeOrdersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tThe My Payments endpoint creates and provides access to payments scoped to a specific user.\n   */\n  payments() {\n    return new ByProjectKeyMePaymentsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tThe My Quote Requests endpoint creates and provides access to Quote Requests scoped to a specific user.\n   */\n  quoteRequests() {\n    return new ByProjectKeyMeQuoteRequestsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tThe My Quote endpoint provides access to Quotes scoped to a specific user.\n   */\n  quotes() {\n    return new ByProjectKeyMeQuotesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tThe My Shopping Lists endpoint creates and provides access to Shopping Lists scoped to a specific user.\n   */\n  shoppingLists() {\n    return new ByProjectKeyMeShoppingListsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tReturns a Customer for a given Query Predicate. Returns a `200 OK` status if successful.\n   *\n   *\tA [ResourceNotFound](ctp:api:type:ResourceNotFoundError) error is returned in the following scenarios:\n   *\n   *\t- If no Customer exists for the given Query Predicate.\n   *\t- If a Customer exists for the given Query Predicate, but does not have an `id` value that matches the [customer:{id}](/scopes#composable-commerce-oauth) scope.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/me',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates the Customer specified in the [customer:{id}](/scopes#composable-commerce-oauth) scope. Returns a `200 OK` status if successful.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/me',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes the Customer specified in the [customer:{id}](/scopes#composable-commerce-oauth) scope. Returns a `200 OK` status if successful.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/me',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMessagesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tDeprecated OAuth 2.0 Scope: `view_orders:{projectKey}`\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/messages/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Message exists with the provided `id`. Returns a `200 OK` status if the Message exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/messages/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyMessagesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyMessagesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tDeprecated OAuth 2.0 Scope: `view_orders:{projectKey}`\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/messages',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Messages exist for the provided query predicate. Returns a `200 OK` status if any Messages match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/messages',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyOrdersEditsByIDApplyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tApplying an OrderEdit produces the [OrderEditApplied](ctp:api:type:OrderEditAppliedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/orders/edits/{ID}/apply',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyOrdersEditsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  apply() {\n    return new ByProjectKeyOrdersEditsByIDApplyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves an OrderEdit with the provided `id`.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/orders/edits/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an OrderEdit exists with the provided `id`. Returns a `200 OK` status if the OrderEdit exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/orders/edits/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates an OrderEdit in the Project using one or more [update actions](/../api/projects/order-edits#update-actions).\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/orders/edits/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes an OrderEdit in the Project.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/orders/edits/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyOrdersEditsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves an OrderEdit with the provided `key`.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/orders/edits/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an OrderEdit exists with the provided `key`. Returns a `200 OK` status if the OrderEdit exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/orders/edits/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates an OrderEdit in the Project using one or more [update actions](/../api/projects/order-edits#update-actions).\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/orders/edits/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes an OrderEdit in the Project.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/orders/edits/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyOrdersEditsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyOrdersEditsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyOrdersEditsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves OrderEdits in the Project.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/orders/edits',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more OrderEdits exist for the provided query predicate. Returns a `200 OK` status if any OrderEdits match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/orders/edits',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates an OrderEdit in the Project.\n   *\tYou can either create multiple Order Edits for an Order and apply them sequentially to an Order, or create multiple Order Edits parallelly (as alternatives to each other) and apply one of them to the Order.\n   *\n   *\tYou can only create an Order Edit if the [InventoryMode](/projects/carts#inventorymode) of the Order and its [LineItems](/projects/carts#lineitem) is `None`.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/orders/edits',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyOrdersImportRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tCreates an Order without needing to create a Cart first.\n   *\tImporting an Order produces the [Order Imported](ctp:api:type:OrderImportedMessage) Message.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [OutOfStock](ctp:api:type:OutOfStockError)\n   *\t- [CountryNotConfiguredInStore](ctp:api:type:CountryNotConfiguredInStoreError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/orders/import',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyOrdersQuotesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\n   *\tCreates an Order from a Quote. The referenced Quote must have the `Pending` [state](ctp:api:type:QuoteState) and must be valid (not past the `validTo` date); otherwise, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.\n   *\n   *\tProduces the [OrderCreated](ctp:api:type:OrderCreatedMessage) Message.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [CountryNotConfiguredInStore](ctp:api:type:CountryNotConfiguredInStoreError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [InvalidOperation](ctp:api:type:InvalidOperationError)\n   *\t- [OutOfStock](ctp:api:type:OutOfStockError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/orders/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyOrdersSearchRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/orders/search',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks whether a search index for the Project's Orders exists.\n   *\tReturns a `200 OK` status if the index exists or a `404 Not Found` error otherwise.\n   *\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/orders/search',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyOrdersByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves an Order with the provided `id`.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an Order exists with the provided `id`. Returns a `200 OK` status if the Order exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates an Order in the Project using one or more [update actions](/../api/projects/orders#update-actions).\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes an Order in the Project.\n   *\tDeleting an Order produces the [OrderDeleted](ctp:api:type:OrderDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/orders/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves an Order with the provided `orderNumber`.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an Order exists with the provided `orderNumber`. Returns a `200 OK` status if the Order exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates an Order in the Project using one or more [update actions](/../api/projects/orders#update-actions).\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes an Order in the Project.\n   *\tDeleting an Order produces the [OrderDeleted](ctp:api:type:OrderDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/orders/order-number={orderNumber}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyOrdersRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  importOrder() {\n    return new ByProjectKeyOrdersImportRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  orderQuote() {\n    return new ByProjectKeyOrdersQuotesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withOrderNumber(childPathArgs) {\n    return new ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tOrderEdit are containers for financial changes after an Order has been placed.\n   */\n  edits() {\n    return new ByProjectKeyOrdersEditsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyOrdersByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tThis endpoint provides high performance search queries over Orders. The order search allows searching through all orders (currently supporting a limit of the 10.000.000 newest orders) in your project.\n   *\n   */\n  search() {\n    return new ByProjectKeyOrdersSearchRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves Orders in the Project.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Orders exist for the provided query predicate. Returns a `200 OK` status if any Orders match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates an Order from a Cart.\n   *\tBefore you create an Order, the Cart must have a [shipping address set](ctp:api:type:CartSetShippingAddressAction).\n   *\tThe shipping address is used for tax calculation for a Cart with `Platform` [TaxMode](ctp:api:type:TaxMode).\n   *\n   *\tCreating an Order produces the [OrderCreated](ctp:api:type:OrderCreatedMessage) Message.\n   *\n   *\t  If a server-side problem occurs, indicated by a 500 Internal Server Error HTTP response, the Order creation may still successfully complete after the error is returned.\n   *\t  If you receive this error, you should verify the status of the Order by querying a unique identifier supplied during the creation request, such as the Order number.\n   *\n   *\tSpecific Error Codes:\n   *\n   *\t- [OutOfStock](ctp:api:type:OutOfStockError)\n   *\t- [PriceChanged](ctp:api:type:PriceChangedError)\n   *\t- [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError)\n   *\t- [ShippingMethodDoesNotMatchCart](ctp:api:type:ShippingMethodDoesNotMatchCartError)\n   *\t- [InvalidItemShippingDetails](ctp:api:type:InvalidItemShippingDetailsError)\n   *\t- [InvalidOperation](ctp:api:type:InvalidOperationError)\n   *\t- [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n   *\t- [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError)\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/orders',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyPaymentsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a Payment with the provided `id`.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/payments/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Payment exists with the provided `id`. Returns a `200 OK` status if the Payment exists, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/payments/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a Payment in the Project using one or more [update actions](/../api/projects/payments#update-actions).\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/payments/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a Payment in the Project.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/payments/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyPaymentsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a Payment with the provided `key`.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/payments/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Payment exists with the provided `key`. Returns a `200 OK` status if the Payment exists, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/payments/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a Payment in the Project using one or more [update actions](/../api/projects/payments#update-actions).\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/payments/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a Payment in the Project.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/payments/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyPaymentsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyPaymentsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyPaymentsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves all Payments in the Project.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/payments',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Payments exist for the provided query predicate. Returns a `200 OK` status if any Payments match the query predicate, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/payments',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreates a Payment in the Project.\n   *\tCreating a Payment produces the [PaymentCreated](ctp:api:type:PaymentCreatedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/payments',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductDiscountsMatchingRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tThis endpoint can be used to simulate which Product Discounts would be applied if a specified Product Variant had a specified Price.\n   *\tGiven Product and Product Variant IDs and a Price, this endpoint will return the [ProductDiscount](ctp:api:type:ProductDiscount) that would have been applied to that Price.\n   *\n   *\tIf a Product Discount could not be found that could be applied to the Price of a Product Variant, a [NoMatchingProductDiscountFound](ctp:api:type:NoMatchingProductDiscountFoundError) error is returned.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-discounts/matching',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductDiscountsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ProductDiscount exists with the provided `id`. Returns a `200 OK` status if the ProductDiscount exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/product-discounts/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductDiscountsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ProductDiscount exists with the provided `key`. Returns a `200 OK` status if the ProductDiscount exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/product-discounts/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductDiscountsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  matching() {\n    return new ByProjectKeyProductDiscountsMatchingRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyProductDiscountsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyProductDiscountsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-discounts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more ProductDiscounts exist for the provided query predicate. Returns a `200 OK` status if any ProductDiscounts match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-discounts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-discounts',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductProjectionsSearchRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tFor implementing funnel search on Product Listing Pages where users select multiple filters, use this POST method.\n   *\tTo avoid URL length restrictions, this method passes the same query parameters as defined in the [GET](ctp:api:endpoint:/{projectKey}/product-projections/search:GET) method, within the request body in URL-encoded format.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-projections/search',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tThis method appends query parameters to the URL.\n   *\tThe maximum allowed URL length is 8192 characters.\n   *\tExceeding this limit will result in URL truncation, potentially leading to unexpected results.\n   *\tFor funnel searches on Product Listing Pages, where users select multiple filters, we recommend the [POST](ctp:api:endpoint:/{projectKey}/product-projections/search:POST) method which passes the query parameters within the request body, avoiding URL length restrictions.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-projections/search',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductProjectionsSuggestRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-projections/suggest',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductProjectionsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tGets the current or staged representation of a [Product](ctp:api:type:Product) by its ID. When used with an API Client that has the `view_published_products:{projectKey}` scope, this endpoint only returns published (current) Product Projections.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-projections/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if the current or staged representation of a Product exists with the provided `id`. Returns a `200 OK` status if the ProductProjection exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-projections/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductProjectionsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tGets the current or staged representation of a [Product](ctp:api:type:Product) found by Key.\n   *\tWhen used with an API Client that has the `view_published_products:{projectKey}` scope,\n   *\tthis endpoint only returns published (current) Product Projections.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-projections/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if the current or staged representation of a Product exists with the provided `key`. Returns a `200 OK` status if the ProductProjection exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-projections/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductProjectionsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  search() {\n    return new ByProjectKeyProductProjectionsSearchRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tThe source of data for suggestions is the searchKeyword field in a product\n   */\n  suggest() {\n    return new ByProjectKeyProductProjectionsSuggestRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyProductProjectionsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyProductProjectionsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tUse the Product Projections query endpoint to get the current or staged representations of Products.\n   *\tWhen used with an API Client that has the `view_published_products:{projectKey}` scope,\n   *\tthis endpoint only returns published (current) Product Projections.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-projections',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if the current or staged representation of a Product exists for the provided query predicate. Returns a `200 OK` status if any ProductProjections match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-projections',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductSelectionsByIDProductsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-selections/{ID}/products',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductSelectionsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  products() {\n    return new ByProjectKeyProductSelectionsByIDProductsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-selections/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ProductSelection exists with the provided `id`. Returns a `200 OK` status if the ProductSelection exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-selections/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-selections/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletion will only succeed if the Product Selection is not assigned to any [Store](ctp:api:type:Store).\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/product-selections/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-selections/key={key}/products',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductSelectionsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  products() {\n    return new ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-selections/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ProductSelection exists with the provided `key`. Returns a `200 OK` status if the ProductSelection exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-selections/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-selections/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletion will only succeed if the Product Selection is not assigned to any [Store](ctp:api:type:Store).\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/product-selections/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductSelectionsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyProductSelectionsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyProductSelectionsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-selections',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more ProductSelections exist for the provided query predicate. Returns a `200 OK` status if any ProductSelections match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-selections',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-selections',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductTailoringByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-tailoring/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-tailoring/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tGenerates the [ProductTailoringDeleted](ctp:api:type:ProductTailoringDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/product-tailoring/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductTailoringKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-tailoring/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-tailoring/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tGenerates the [ProductTailoringDeleted](ctp:api:type:ProductTailoringDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/product-tailoring/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductTailoringRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyProductTailoringKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyProductTailoringByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more ProductTailorings exist for the provided query predicate. Returns a `200 OK` status if any ProductTailoring match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tGenerates the [ProductTailoringCreated](ctp:api:type:ProductTailoringCreatedMessage) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-tailoring',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductTypesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-types/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ProductType exists with the provided `id`. Returns a `200 OK` status if the ProductType exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-types/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-types/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/product-types/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductTypesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-types/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ProductType exists with the provided `key`. Returns a `200 OK` status if the ProductType exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-types/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-types/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/product-types/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductTypesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyProductTypesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyProductTypesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/product-types',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more ProductTypes exist for the provided query predicate. Returns a `200 OK` status if any ProductTypes match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/product-types',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/product-types',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductsSearchRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tIf the indexing is in progress or the feature is inactive, an [ObjectNotFound](ctp:api:type:ObjectNotFoundError) error is returned.\n   *\tIf inactive, you can [reactivate](/../api/projects/product-search#activation-of-the-feature) it.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/products/search',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductsByIDImagesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tUploads a JPEG, PNG, or a GIF image file to a [ProductVariant](ctp:api:type:ProductVariant).\n   *\tThe maximum file size of the image is **10MB**.\n   *\tEither `variant` or `sku` is required to update a specific ProductVariant.\n   *\tIf neither is provided, the image is uploaded to the Master Variant of the Product.\n   *\n   *\tThe response status code depends on the size of the original image.\n   *\tIf the image is small, the API responds with `200 OK`, and if the image is larger, it responds with `202 Accepted`.\n   *\tThe Product returned with a `202 Accepted` status code contains a `warnings` field with an [ImageProcessingOngoing](ctp:api:type:ImageProcessingOngoingWarning) Warning.\n   *\n   *\tProduces the [ProductImageAdded](/projects/messages/product-catalog-messages#product-image-added) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/products/{ID}/images',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductsByIDProductSelectionsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/products/{ID}/product-selections',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  images() {\n    return new ByProjectKeyProductsByIDImagesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  productSelections() {\n    return new ByProjectKeyProductsByIDProductSelectionsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tIf [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/products/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Product exists with the provided `id`. Returns a `200 OK` status if the Product exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/products/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.\n   *\n   *\tA failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/products/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.\n   *\tProduces the [ProductDeleted](/projects/messages/product-catalog-messages#product-deleted) Message.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/products/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/products/key={key}/product-selections',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  productSelections() {\n    return new ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tIf [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/products/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Product exists with the provided `key`. Returns a `200 OK` status if the Product exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/products/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tA failed response can return a [DuplicatePriceScope](ctp:api:type:DuplicatePriceScopeError), [DuplicateVariantValues](ctp:api:type:DuplicateVariantValuesError), [DuplicateAttributeValue](ctp:api:type:DuplicateAttributeValueError), or [DuplicateAttributeValues](ctp:api:type:DuplicateAttributeValuesError) error.\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/products/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tIf [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.\n   *\tProduces the [ProductDeleted](/projects/messages/product-catalog-messages#product-deleted) Message.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/products/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyProductsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyProductsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyProductsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tThis endpoint provides high-performance search queries over Products. Product Search allows searching through all products with a current projection in your Project.\n   *\n   */\n  search() {\n    return new ByProjectKeyProductsSearchRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tIf [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, the selected Prices are added to the response.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/products',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Products exist for the provided query predicate. Returns a `200 OK` status if any Products match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/products',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tTo create a new Product, send a representation that is going to become the initial _staged_ and _current_ representation of the new Product in the catalog.\n   *\tIf [Product price selection query parameters](/../api/pricing-and-discounts-overview#product-price-selection) are provided, selected Prices will be added to the response.\n   *\tProduces the [ProductCreated](/projects/messages/product-catalog-messages#product-created) Message.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/products',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyQuoteRequestsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a QuoteRequest exists with the provided `id`. Returns a `200 OK` status if the QuoteRequest exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/quote-requests/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a QuoteRequest exists with the provided `key`. Returns a `200 OK` status if the QuoteRequest exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/quote-requests/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyQuoteRequestsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyQuoteRequestsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more QuoteRequests exist for the provided query predicate. Returns a `200 OK` status if any QuoteRequests match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/quote-requests',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyQuotesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Quote exists with the provided `id`. Returns a `200 OK` status if the Quote exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyQuotesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Quote exists with the provided `key`. Returns a `200 OK` status if the Quote exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyQuotesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyQuotesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyQuotesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Quotes exist for the provided query predicate. Returns a `200 OK` status if any Quotes match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyReviewsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/reviews/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Review exists with the provided `id`. Returns a `200 OK` status if the Review exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/reviews/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/reviews/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/reviews/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyReviewsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/reviews/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Review exists with the provided `key`. Returns a `200 OK` status if the Review exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/reviews/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/reviews/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/reviews/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyReviewsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyReviewsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyReviewsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/reviews',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Reviews exist for the provided query predicate. Returns a `200 OK` status if any Reviews match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/reviews',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/reviews',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves all the active ShippingMethods that can ship to the given [Location](ctp:api:type:Location)\n   *\twith a `predicate` that matches the given Cart.\n   *\tEach ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`.\n   *\tThis ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).\n   *\tIf a matching ShippingMethod has `isDefault` set to `true`, it is returned as the first item in the array.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/shipping-methods/matching-cart-location',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an active ShippingMethod that can ship to the given [Location](ctp:api:type:Location) exists for the given Cart. Returns a `200 OK` status if the ShippingMethod exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/shipping-methods/matching-cart-location',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyShippingMethodsMatchingCartRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves all the active ShippingMethods that can ship to the shipping address of the given Cart.\n   *\tEach ShippingMethod contains exactly one ShippingRate with the flag `isMatching` set to `true`.\n   *\tThis ShippingRate is used when the ShippingMethod is [added to the Cart](ctp:api:type:CartSetShippingMethodAction).\n   *\tIf a matching ShippingMethod has `isDefault` set to `true`, it is returned as the first item in the array.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/shipping-methods/matching-cart',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an active ShippingMethod exists for the given Cart. If a matching ShippingMethod has `isDefault` set to `true`, it is returned as the first item in the array. Returns a `200 OK` status if the ShippingMethod exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/shipping-methods/matching-cart',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyShippingMethodsMatchingLocationRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves all the active ShippingMethods that can ship to the given [Location](/projects/zones#location).\n   *\tShippingMethods that have a `predicate` defined are automatically disqualified.\n   *\tIf the `currency` parameter is given, then the ShippingMethods must also have a rate defined in the specified currency.\n   *\tEach ShippingMethod contains at least one ShippingRate with the flag `isMatching` set to `true`.\n   *\tIf the `currency` parameter is given, exactly one ShippingRate will contain it.\n   *\tIf a matching ShippingMethod has `isDefault` set to `true`, it is returned as the first item in the array.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/shipping-methods/matching-location',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an active ShippingMethod that can ship to the given [Location](ctp:api:type:Location) exists. Returns a `200 OK` status if the ShippingMethod exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/shipping-methods/matching-location',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves all the active ShippingMethods that can ship to the given [Location](ctp:api:type:Location) for an [OrderEdit](ctp:api:type:OrderEdit).\n   *\tIf a matching ShippingMethod has `isDefault` set to `true`, it is returned as the first item in the array.\n   *\tIf the OrderEdit preview cannot be generated, an [EditPreviewFailed](ctp:api:type:EditPreviewFailedError) error is returned.\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/shipping-methods/matching-orderedit',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if an active ShippingMethod that can ship to the given [Location](ctp:api:type:Location) exists for the given [OrderEdit](ctp:api:type:OrderEdit). Returns a `200 OK` status if the ShippingMethod exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/shipping-methods/matching-orderedit',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyShippingMethodsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/shipping-methods/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShippingMethod exists with the provided `id`. Returns a `200 OK` status if the ShippingMethod exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/shipping-methods/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/shipping-methods/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/shipping-methods/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyShippingMethodsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/shipping-methods/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShippingMethod exists with the provided `key`. Returns a `200 OK` status if the ShippingMethod exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/shipping-methods/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/shipping-methods/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/shipping-methods/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyShippingMethodsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyShippingMethodsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tGet ShippingMethods for a cart\n   */\n  matchingCart() {\n    return new ByProjectKeyShippingMethodsMatchingCartRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tGet ShippingMethods for a cart and location\n   */\n  matchingCartLocation() {\n    return new ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tGet ShippingMethods for an order edit\n   */\n  matchingOrderedit() {\n    return new ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tGet ShippingMethods for a location\n   */\n  matchingLocation() {\n    return new ByProjectKeyShippingMethodsMatchingLocationRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyShippingMethodsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/shipping-methods',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more ShippingMethods exist for the provided query predicate. Returns a `200 OK` status if any ShippingMethods match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/shipping-methods',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/shipping-methods',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyShoppingListsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a ShoppingList with the provided `id`.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShoppingList exists with the provided `id`. Returns a `200 OK` status if the ShoppingList exists, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a ShoppingList in the Project using one or more [update actions](/../api/projects/shoppingLists#update-actions).\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a ShoppingList in the Project.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/shopping-lists/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyShoppingListsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tRetrieves a ShoppingList with the provided `key`.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a ShoppingList exists with the provided `key`. Returns a `200 OK` status if the ShoppingList exists, or [Not Found](/../api/errors#404-not-found) otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tUpdates a ShoppingList in the Project using one or more [update actions](/../api/projects/shoppingLists#update-actions).\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tDeletes a ShoppingList in the Project.\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/shopping-lists/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyShoppingListsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyShoppingListsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyShoppingListsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n\n  /**\n   *\tRetrieves all ShoppingLists in the Project.\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more ShoppingLists exist for the provided query predicate. Returns a `200 OK` status if any ShoppingLists match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreate a ShoppingList in the Project.\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/shopping-lists',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStagedQuotesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/staged-quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a StagedQuote exists with the provided `id`. Returns a `200 OK` status if the StagedQuote exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/staged-quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/staged-quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/staged-quotes/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStagedQuotesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/staged-quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a StagedQuote exists with the provided `key`. Returns a `200 OK` status if the StagedQuote exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/staged-quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/staged-quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/staged-quotes/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStagedQuotesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyStagedQuotesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyStagedQuotesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/staged-quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more StagedQuotes exist for the provided query predicate. Returns a `200 OK` status if any StagedQuotes match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/staged-quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/staged-quotes',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStandalonePricesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/standalone-prices/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a StandalonePrice exists with the provided `id`. Returns a `200 OK` status if the StandalonePrice exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/standalone-prices/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/standalone-prices/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tProduces the [StandalonePriceDeleted](ctp:api:type:StandalonePriceDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/standalone-prices/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStandalonePricesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/standalone-prices/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a StandalonePrice exists with the provided `key`. Returns a `200 OK` status if the StandalonePrice exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/standalone-prices/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/standalone-prices/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tProduces the [StandalonePriceDeleted](ctp:api:type:StandalonePriceDeletedMessage) Message.\n   *\n   */\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/standalone-prices/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStandalonePricesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyStandalonePricesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyStandalonePricesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/standalone-prices',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more StandalonePrices exist for the provided query predicate. Returns a `200 OK` status if any StandalonePrices match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/standalone-prices',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tCreating a Standalone Price produces the [StandalonePriceCreated](ctp:api:type:StandalonePriceCreatedMessage) Message.\n   *\n   *\t- If the Standalone Price has the same price scope as an existing Standalone Price, a [DuplicateStandalonePriceScope](ctp:api:type:DuplicateStandalonePriceScopeError) error is returned.\n   *\t- If the Standalone Price has overlapping validity periods within the same price scope, a [OverlappingStandalonePriceValidity](ctp:api:type:OverlappingStandalonePriceValidityError) error is returned. A Price without validity period does not conflict with a Price defined for a time period.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/standalone-prices',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStatesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/states/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a State exists with the provided `id`. Returns a `200 OK` status if the State exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/states/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/states/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/states/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStatesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/states/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a State exists with the provided `key`. Returns a `200 OK` status if the State exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/states/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/states/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/states/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStatesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyStatesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyStatesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/states',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more States exist for the provided query predicate. Returns a `200 OK` status if any States match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/states',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/states',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStoresByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/stores/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Store exists with the provided `id`. Returns a `200 OK` status if the Store exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/stores/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/stores/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/stores/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStoresKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/stores/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Store exists with the provided `key`. Returns a `200 OK` status if the Store exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/stores/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/stores/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/stores/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyStoresRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyStoresKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyStoresByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/stores',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Stores exist for the provided query predicate. Returns a `200 OK` status if any Stores match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/stores',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/stores',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeySubscriptionsByIDHealthRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  /**\n   *\tThis endpoint can be polled by a monitoring or alerting system that checks the health of your Subscriptions. To ease integration with such systems this endpoint does not require [Authorization](/../api/authorization).\n   *\n   */\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/subscriptions/{ID}/health',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeySubscriptionsByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withIdHealth() {\n    return new ByProjectKeySubscriptionsByIDHealthRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/subscriptions/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Subscription exists with the provided `id`. Returns a `200 OK` status if the Subscription exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/subscriptions/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/subscriptions/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/subscriptions/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeySubscriptionsKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/subscriptions/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Subscription exists with the provided `key`. Returns a `200 OK` status if the Subscription exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/subscriptions/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/subscriptions/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/subscriptions/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeySubscriptionsRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeySubscriptionsKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeySubscriptionsByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/subscriptions',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Subscriptions exist for the provided query predicate. Returns a `200 OK` status if any Subscriptions match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/subscriptions',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tA test notification is sent to ensure the correct configuration of the Destination. If the notification cannot be delivered, the Subscription will not be created. The payload of the test notification is of type [ResourceCreated](/../api/projects/subscriptions#resourcecreateddeliverypayload) for the `resourceTypeId` `subscription`.\n   *\n   */\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/subscriptions',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyTaxCategoriesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/tax-categories/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a TaxCategory exists with the provided `id`. Returns a `200 OK` status if the TaxCategory exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/tax-categories/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/tax-categories/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/tax-categories/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/tax-categories/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a TaxCategory exists with the provided `key`. Returns a `200 OK` status if the Tax Category exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/tax-categories/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/tax-categories/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/tax-categories/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyTaxCategoriesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyTaxCategoriesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/tax-categories',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Tax Categories exist for the provided query predicate. Returns a `200 OK` status if any TaxCategories match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/tax-categories',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/tax-categories',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyTypesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/types/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Type exists with the provided `id`. Returns a `200 OK` status if the Type exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/types/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/types/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/types/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyTypesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/types/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Type exists with the provided `key`. Returns a `200 OK` status if the Type exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/types/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/types/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/types/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyTypesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyTypesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyTypesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/types',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Types exist for the provided query predicate. Returns a `200 OK` status if any Types match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/types',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/types',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyZonesByIDRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/zones/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Zone exists with the provided `id`. Returns a `200 OK` status if the Zone exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/zones/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/zones/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/zones/{ID}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyZonesKeyByKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/zones/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Zone exists with the provided `key`. Returns a `200 OK` status if the Zone exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/zones/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/zones/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n  delete(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'DELETE',\n      uriTemplate: '/{projectKey}/zones/key={key}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyZonesRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  withKey(childPathArgs) {\n    return new ByProjectKeyZonesKeyByKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  withId(childPathArgs) {\n    return new ByProjectKeyZonesByIDRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}/zones',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if one or more Zones exist for the provided query predicate. Returns a `200 OK` status if any Zones match the query predicate, or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}/zones',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}/zones',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      queryParams: methodArgs?.queryArgs,\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n/**\n **/\nclass ByProjectKeyRequestBuilder {\n  constructor(args) {\n    this.args = args;\n  }\n  asAssociate() {\n    return new ByProjectKeyAsAssociateRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tAn Associate Role enables permissions over a Business Unit to an Associate.\n   */\n  associateRoles() {\n    return new ByProjectKeyAssociateRolesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA Business Unit can represent a Company or a Division.\n   */\n  businessUnits() {\n    return new ByProjectKeyBusinessUnitsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tCategories are used to organize products in a hierarchical structure.\n   */\n  categories() {\n    return new ByProjectKeyCategoriesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA shopping cart holds product variants and can be ordered.\n   */\n  carts() {\n    return new ByProjectKeyCartsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tCart discounts are used to change the prices of different elements within a cart.\n   */\n  cartDiscounts() {\n    return new ByProjectKeyCartDiscountsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tChannels represent a source or destination of different entities. They can be used to model warehouses or stores.\n   *\n   */\n  channels() {\n    return new ByProjectKeyChannelsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA Customer is a person purchasing products. Carts, Orders, Quotes, Reviews and Payments can be associated to a Customer.\n   *\n   */\n  customers() {\n    return new ByProjectKeyCustomersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tcustomer-groups are used to evaluate products and channels.\n   */\n  customerGroups() {\n    return new ByProjectKeyCustomerGroupsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tStore custom JSON values.\n   */\n  customObjects() {\n    return new ByProjectKeyCustomObjectsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tDiscount Codes can be added to a discount-code to enable certain discount-code discounts.\n   */\n  discountCodes() {\n    return new ByProjectKeyDiscountCodesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tcommercetools Composable Commerce provides a GraphQL API\n   */\n  graphql() {\n    return new ByProjectKeyGraphqlRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tInventory allows you to track stock quantities.\n   */\n  inventory() {\n    return new ByProjectKeyInventoryRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tRetrieves the authenticated customer.\n   */\n  login() {\n    return new ByProjectKeyLoginRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA message represents a change or an action performed on a resource (like an Order or a Product).\n   */\n  messages() {\n    return new ByProjectKeyMessagesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tAn order can be created from a order, usually after a checkout process has been completed.\n   */\n  orders() {\n    return new ByProjectKeyOrdersRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tPayments hold information about the current state of receiving and/or refunding money\n   */\n  payments() {\n    return new ByProjectKeyPaymentsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tProducts themselves are not sellable. Instead, they act as a parent structure for sellable Product Variants.\n   *\n   */\n  products() {\n    return new ByProjectKeyProductsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tProduct discounts are used to change certain product prices.\n   */\n  productDiscounts() {\n    return new ByProjectKeyProductDiscountsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA projected representation of a product shows the product with its current or staged data. The current or staged\n   *\trepresentation of a product in a catalog is called a product projection.\n   *\n   */\n  productProjections() {\n    return new ByProjectKeyProductProjectionsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tManage individual Store assortments through Product Selections.\n   *\n   *\tAfter you have created Product Selections and populated them with Products,\n   *\tyou can manage Store assortments by assigning Product Selections to Stores.\n   *\tProduct Selections may be used by a single Store or shared across several Stores.\n   *\n   *\tAs a good practice, we recommend first creating Products in the project, and then creating Product Selection.\n   *\n   */\n  productSelections() {\n    return new ByProjectKeyProductSelectionsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tProduct tailoring are used to contextualize product data for specific stores.\n   */\n  productTailoring() {\n    return new ByProjectKeyProductTailoringRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tProduct Types are used to describe common characteristics, most importantly common custom attributes,\n   *\tof many concrete products.\n   *\n   */\n  productTypes() {\n    return new ByProjectKeyProductTypesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA quote holds the negotiated offer.\n   */\n  quotes() {\n    return new ByProjectKeyQuotesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA request for a Quote holds product variants and can be ordered.\n   */\n  quoteRequests() {\n    return new ByProjectKeyQuoteRequestsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA staged quote holds the negotiation between the [Buyer](/../api/quotes-overview#buyer) and the [Seller](/../api/quotes-overview#seller).\n   */\n  stagedQuotes() {\n    return new ByProjectKeyStagedQuotesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tReviews are used to evaluate products and channels.\n   */\n  reviews() {\n    return new ByProjectKeyReviewsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tShippingMethods define where orders can be shipped and what the costs are.\n   */\n  shippingMethods() {\n    return new ByProjectKeyShippingMethodsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tshopping-lists e.g. for wishlist support\n   */\n  shoppingLists() {\n    return new ByProjectKeyShoppingListsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tcommercetools Composable Commerce allows you to model states of certain objects, such as orders, line items, products,\n   *\treviews, and payments in order to define finite state machines reflecting the business logic you'd like to\n   *\timplement.\n   *\n   */\n  states() {\n    return new ByProjectKeyStatesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tSubscriptions allow you to be notified of new messages or changes via a Message Queue of your choice\n   */\n  subscriptions() {\n    return new ByProjectKeySubscriptionsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tTax Categories define how products are to be taxed in different countries.\n   */\n  taxCategories() {\n    return new ByProjectKeyTaxCategoriesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tTypes define custom fields that are used to enhance resources as you need.\n   */\n  types() {\n    return new ByProjectKeyTypesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tZones allow defining ShippingRates for specific Locations.\n   */\n  zones() {\n    return new ByProjectKeyZonesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  me() {\n    return new ByProjectKeyMeRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tExtend the behavior of an API with your business logic\n   */\n  extensions() {\n    return new ByProjectKeyExtensionsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tManage your API Clients via an API. Useful for Infrastructure-as-Code tooling, and regularly rotating API secrets.\n   *\n   */\n  apiClients() {\n    return new ByProjectKeyApiClientsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tStores let you model the context your customers shop in.\n   */\n  stores() {\n    return new ByProjectKeyStoresRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  inStoreKeyWithStoreKeyValue(childPathArgs) {\n    return new ByProjectKeyInStoreKeyByStoreKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tA standalone price assigns a price to a product variant for a given scope. The API will use the standalone prices associated with a Product if its field [`priceMode`](/projects/products#pricemode) is set to `Standalone` [ProductPriceMode](ctp:api:type:ProductPriceModeEnum).\n   */\n  standalonePrices() {\n    return new ByProjectKeyStandalonePricesRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  inBusinessUnitKeyWithBusinessUnitKeyValue(childPathArgs) {\n    return new ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs,\n        ...childPathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  /**\n   *\tAttribute groups ... TODO\n   */\n  attributeGroups() {\n    return new ByProjectKeyAttributeGroupsRequestBuilder({\n      pathArgs: {\n        ...this.args.pathArgs\n      },\n      executeRequest: this.args.executeRequest,\n      baseUri: this.args.baseUri\n    });\n  }\n  get(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'GET',\n      uriTemplate: '/{projectKey}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  /**\n   *\tChecks if a Project exists for a given `projectKey`. Returns a `200 OK` status if the Project exists or a `404 Not Found` otherwise.\n   */\n  head(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'HEAD',\n      uriTemplate: '/{projectKey}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        ...methodArgs?.headers\n      }\n    }, this.args.executeRequest);\n  }\n  post(methodArgs) {\n    return new ApiRequest({\n      baseUri: this.args.baseUri,\n      method: 'POST',\n      uriTemplate: '/{projectKey}',\n      pathVariables: this.args.pathArgs,\n      headers: {\n        'Content-Type': 'application/json',\n        ...methodArgs?.headers\n      },\n      body: methodArgs?.body\n    }, this.args.executeRequest);\n  }\n}\n\nclass ApiRoot {\n  constructor(args) {\n    _defineProperty(this, \"executeRequest\", void 0);\n    _defineProperty(this, \"baseUri\", void 0);\n    this.executeRequest = args.executeRequest;\n    this.baseUri = args.baseUri || 'https://api.europe-west1.gcp.commercetools.com';\n  }\n\n  /**\n   *\tThe Project endpoint is used to retrieve certain information from a project.\n   */\n  withProjectKey(childPathArgs) {\n    return new ByProjectKeyRequestBuilder({\n      pathArgs: {\n        ...childPathArgs\n      },\n      executeRequest: this.executeRequest,\n      baseUri: this.baseUri\n    });\n  }\n}\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [ApprovalFlow](ctp:api:type:ApprovalFlow).\n *\n */\n\n/**\n *\tIndicates whether the [Approval Flow](ctp:api:type:ApprovalFlow) is under review, approved, or rejected.\n *\n */\nlet ApprovalFlowStatusValues = /*#__PURE__*/function (ApprovalFlowStatusValues) {\n  ApprovalFlowStatusValues[\"Approved\"] = \"Approved\";\n  ApprovalFlowStatusValues[\"Pending\"] = \"Pending\";\n  ApprovalFlowStatusValues[\"Rejected\"] = \"Rejected\";\n  return ApprovalFlowStatusValues;\n}({});\n\n/**\n *\tThis update action allows an [Associate](ctp:api:type:Associate) to approve an Approval Flow. The process takes into account all [Associate Roles](ctp:api:type:AssociateRole) held by the Associate, aligning with the matched [Approval Rules](ctp:api:type:ApprovalRule) and their respective approver hierarchies.\n *\n *\tWhen every required Associate has given their approval, the Approval Flow achieves a fully approved state, automatically updating its status to `Approved`. An Associate is eligible to approve only if their roles are within tiers of the Approval Rule hierarchy that are yet to be fully approved or rejected. As such, an Associate may be able to give their approval more than once.\n *\n */\n\n/**\n *\tThis update action allows an [Associate](ctp:api:type:Associate) to reject an Approval Flow, setting its status to `Rejected`.\n *\tThe process takes into account all [Associate Roles](ctp:api:type:AssociateRole) held by the Associate, aligning with the matched [Approval Rules](ctp:api:type:ApprovalRule) and their respective approver hierarchies.\n *\tEven a single rejection in the process will result in the rejection of the entire Approval Flow.\n *\n *\tAn Associate is eligible to reject only if their roles are within tiers of the Approval Rule hierarchy that are yet to be rejected. An Associate may alter a prior approval into a rejection.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [ApprovalRule](ctp:api:type:ApprovalRule).\n *\n */\n\n/**\n *\tIndicates whether the Approval Rule should be matched against [Orders](ctp:api:type:Order) or not.\n *\n */\nlet ApprovalRuleStatusValues = /*#__PURE__*/function (ApprovalRuleStatusValues) {\n  ApprovalRuleStatusValues[\"Active\"] = \"Active\";\n  ApprovalRuleStatusValues[\"Inactive\"] = \"Inactive\";\n  return ApprovalRuleStatusValues;\n}({});\n\n/**\n *\tSetting the approvers for an [Approval Rule](ctp:api:type:ApprovalRule) generates an [ApprovalRuleApproversSet](ctp:api:type:ApprovalRuleApproversSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the description for an [Approval Rule](ctp:api:type:ApprovalRule) generates an [ApprovalRuleDescriptionSet](ctp:api:type:ApprovalRuleDescriptionSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the key for an [Approval Rule](ctp:api:type:ApprovalRule) generates an [ApprovalRuleKeySet](ctp:api:type:ApprovalRuleKeySetMessage) Message.\n *\n */\n\n/**\n *\tSetting the name for an [Approval Rule](ctp:api:type:ApprovalRule) generates an [ApprovalRuleNameSet](ctp:api:type:ApprovalRuleNameSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the [Order Predicate](/../api/projects/predicates#order-predicates) for an [Approval Rule](ctp:api:type:ApprovalRule) generates an [ApprovalRulePredicateSet](ctp:api:type:ApprovalRulePredicateSetMessage) Message.\n *\n */\n\n/**\n *\tSets the requesters for an [Approval Rule](ctp:api:type:ApprovalRule) generates an [ApprovalRuleRequestersSet](ctp:api:type:ApprovalRuleRequestersSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the status for an [Approval Rule](ctp:api:type:ApprovalRule) generates an [ApprovalRuleStatusSet](ctp:api:type:ApprovalRuleStatusSetMessage) Message.\n *\n */\n\n/**\n *\tDescribes the order in which [Associates](ctp:api:type:Associate) can approve the matched [Order](ctp:api:type:Order).\n *\n */\n\n/**\n *\tDescribes the sequence in which [Associates](ctp:api:type:Associate) can approve an [Order](ctp:api:type:Order).\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[KeyReference](ctp:api:type:KeyReference) to an [AssociateRole](ctp:api:type:AssociateRole).\n *\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [AssociateRole](ctp:api:type:AssociateRole).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to an [AssociateRole](ctp:api:type:AssociateRole).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:TypeResourceIdentifier) of an [AssociateRole](ctp:api:type:AssociateRole). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tPermissions grant granular access to [Approval Rules](ctp:api:type:ApprovalRule), [Approval Flows](ctp:api:type:ApprovalFlow), [Business Units](ctp:api:type:BusinessUnit), [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [Quotes](ctp:api:type:Quote), [Quote Requests](ctp:api:type:QuoteRequest), and [Shopping Lists](ctp:api:type:ShoppingList).\n *\n */\nlet PermissionValues = /*#__PURE__*/function (PermissionValues) {\n  PermissionValues[\"AcceptMyQuotes\"] = \"AcceptMyQuotes\";\n  PermissionValues[\"AcceptOthersQuotes\"] = \"AcceptOthersQuotes\";\n  PermissionValues[\"AddChildUnits\"] = \"AddChildUnits\";\n  PermissionValues[\"CreateApprovalRules\"] = \"CreateApprovalRules\";\n  PermissionValues[\"CreateMyCarts\"] = \"CreateMyCarts\";\n  PermissionValues[\"CreateMyOrdersFromMyCarts\"] = \"CreateMyOrdersFromMyCarts\";\n  PermissionValues[\"CreateMyOrdersFromMyQuotes\"] = \"CreateMyOrdersFromMyQuotes\";\n  PermissionValues[\"CreateMyQuoteRequestsFromMyCarts\"] = \"CreateMyQuoteRequestsFromMyCarts\";\n  PermissionValues[\"CreateMyShoppingLists\"] = \"CreateMyShoppingLists\";\n  PermissionValues[\"CreateOrdersFromOthersCarts\"] = \"CreateOrdersFromOthersCarts\";\n  PermissionValues[\"CreateOrdersFromOthersQuotes\"] = \"CreateOrdersFromOthersQuotes\";\n  PermissionValues[\"CreateOthersCarts\"] = \"CreateOthersCarts\";\n  PermissionValues[\"CreateOthersShoppingLists\"] = \"CreateOthersShoppingLists\";\n  PermissionValues[\"CreateQuoteRequestsFromOthersCarts\"] = \"CreateQuoteRequestsFromOthersCarts\";\n  PermissionValues[\"DeclineMyQuotes\"] = \"DeclineMyQuotes\";\n  PermissionValues[\"DeclineOthersQuotes\"] = \"DeclineOthersQuotes\";\n  PermissionValues[\"DeleteMyCarts\"] = \"DeleteMyCarts\";\n  PermissionValues[\"DeleteMyShoppingLists\"] = \"DeleteMyShoppingLists\";\n  PermissionValues[\"DeleteOthersCarts\"] = \"DeleteOthersCarts\";\n  PermissionValues[\"DeleteOthersShoppingLists\"] = \"DeleteOthersShoppingLists\";\n  PermissionValues[\"ReassignMyQuotes\"] = \"ReassignMyQuotes\";\n  PermissionValues[\"ReassignOthersQuotes\"] = \"ReassignOthersQuotes\";\n  PermissionValues[\"RenegotiateMyQuotes\"] = \"RenegotiateMyQuotes\";\n  PermissionValues[\"RenegotiateOthersQuotes\"] = \"RenegotiateOthersQuotes\";\n  PermissionValues[\"UpdateApprovalFlows\"] = \"UpdateApprovalFlows\";\n  PermissionValues[\"UpdateApprovalRules\"] = \"UpdateApprovalRules\";\n  PermissionValues[\"UpdateAssociates\"] = \"UpdateAssociates\";\n  PermissionValues[\"UpdateBusinessUnitDetails\"] = \"UpdateBusinessUnitDetails\";\n  PermissionValues[\"UpdateMyCarts\"] = \"UpdateMyCarts\";\n  PermissionValues[\"UpdateMyOrders\"] = \"UpdateMyOrders\";\n  PermissionValues[\"UpdateMyQuoteRequests\"] = \"UpdateMyQuoteRequests\";\n  PermissionValues[\"UpdateMyShoppingLists\"] = \"UpdateMyShoppingLists\";\n  PermissionValues[\"UpdateOthersCarts\"] = \"UpdateOthersCarts\";\n  PermissionValues[\"UpdateOthersOrders\"] = \"UpdateOthersOrders\";\n  PermissionValues[\"UpdateOthersQuoteRequests\"] = \"UpdateOthersQuoteRequests\";\n  PermissionValues[\"UpdateOthersShoppingLists\"] = \"UpdateOthersShoppingLists\";\n  PermissionValues[\"UpdateParentUnit\"] = \"UpdateParentUnit\";\n  PermissionValues[\"ViewMyCarts\"] = \"ViewMyCarts\";\n  PermissionValues[\"ViewMyOrders\"] = \"ViewMyOrders\";\n  PermissionValues[\"ViewMyQuoteRequests\"] = \"ViewMyQuoteRequests\";\n  PermissionValues[\"ViewMyQuotes\"] = \"ViewMyQuotes\";\n  PermissionValues[\"ViewMyShoppingLists\"] = \"ViewMyShoppingLists\";\n  PermissionValues[\"ViewOthersCarts\"] = \"ViewOthersCarts\";\n  PermissionValues[\"ViewOthersOrders\"] = \"ViewOthersOrders\";\n  PermissionValues[\"ViewOthersQuoteRequests\"] = \"ViewOthersQuoteRequests\";\n  PermissionValues[\"ViewOthersQuotes\"] = \"ViewOthersQuotes\";\n  PermissionValues[\"ViewOthersShoppingLists\"] = \"ViewOthersShoppingLists\";\n  return PermissionValues;\n}({});\n\n/**\n *\tAdding a Permission to an [AssociateRole](ctp:api:type:AssociateRole) generates an [AssociateRolePermissionAdded](ctp:api:type:AssociateRolePermissionAddedMessage) Message.\n *\n */\n\n/**\n *\tChanging the `buyerAssignable` value of an AssociateRole generates an [AssociateRoleBuyerAssignableChanged](ctp:api:type:AssociateRoleBuyerAssignableChangedMessage) Message.\n *\n */\n\n/**\n *\tRemoving a Permission from an [AssociateRole](ctp:api:type:AssociateRole) generates an [AssociateRolePermissionRemoved](ctp:api:type:AssociateRolePermissionRemovedMessage) Message.\n *\n */\n\n/**\n *\tUpdating the name of an [AssociateRole](ctp:api:type:AssociateRole) generates an [AssociateRoleNameSet](ctp:api:type:AssociateRoleNameSetMessage) Message.\n *\n */\n\n/**\n *\tUpdating the Permissions on an [AssociateRole](ctp:api:type:AssociateRole) generates an [AssociateRolePermissionsSet](ctp:api:type:AssociateRolePermissionsSetMessage) Message.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tDetermines whether an [AssociateRoleAssignment](ctp:api:type:AssociateRoleAssignment) can be inherited by child Business Units.\n *\n */\nlet AssociateRoleInheritanceModeValues = /*#__PURE__*/function (AssociateRoleInheritanceModeValues) {\n  AssociateRoleInheritanceModeValues[\"Disabled\"] = \"Disabled\";\n  AssociateRoleInheritanceModeValues[\"Enabled\"] = \"Enabled\";\n  return AssociateRoleInheritanceModeValues;\n}({});\n\n/**\n *\tGeneric type to model the fields that all types of Business Units have in common.\n *\n */\n\n/**\n *\tDetermines whether a Business Unit can inherit [Approval Rules](/projects/approval-rules) from a parent. Only Business Units of type `Division` can use `ExplicitAndFromParent`.\n *\n */\nlet BusinessUnitApprovalRuleModeValues = /*#__PURE__*/function (BusinessUnitApprovalRuleModeValues) {\n  BusinessUnitApprovalRuleModeValues[\"Explicit\"] = \"Explicit\";\n  BusinessUnitApprovalRuleModeValues[\"ExplicitAndFromParent\"] = \"ExplicitAndFromParent\";\n  return BusinessUnitApprovalRuleModeValues;\n}({});\n/**\n *\tDetermines whether a Business Unit can inherit Associates from a parent.\n *\n */\nlet BusinessUnitAssociateModeValues = /*#__PURE__*/function (BusinessUnitAssociateModeValues) {\n  BusinessUnitAssociateModeValues[\"Explicit\"] = \"Explicit\";\n  BusinessUnitAssociateModeValues[\"ExplicitAndFromParent\"] = \"ExplicitAndFromParent\";\n  return BusinessUnitAssociateModeValues;\n}({});\n\n/**\n *\tInformation about all roles and permissions of an Associate in a [BusinessUnit](ctp:api:type:BusinessUnit).\n *\n */\n\n/**\n *\tGeneric draft type to model those fields all Business Units have in common. The additional fields required for creating a [Company](ctp:api:type:Company) or [Division](ctp:api:type:Division) are represented on [CompanyDraft](ctp:api:type:CompanyDraft) and [DivisionDraft](ctp:api:type:DivisionDraft).\n *\n */\n\n/**\n *\t[KeyReference](ctp:api:type:KeyReference) to a [BusinessUnit](ctp:api:type:BusinessUnit).\n *\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [BusinessUnit](ctp:api:type:BusinessUnit).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [BusinessUnit](ctp:api:type:BusinessUnit).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [BusinessUnit](ctp:api:type:BusinessUnit). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tIndicates whether the Business Unit can be edited and used in [Carts](ctp:api:type:Cart), [Orders](ctp:api:type:Order), [Quote Requests](ctp:api:type:QuoteRequest), or [Quotes](ctp:api:type:Quote).\n *\n */\nlet BusinessUnitStatusValues = /*#__PURE__*/function (BusinessUnitStatusValues) {\n  BusinessUnitStatusValues[\"Active\"] = \"Active\";\n  BusinessUnitStatusValues[\"Inactive\"] = \"Inactive\";\n  return BusinessUnitStatusValues;\n}({});\n/**\n *\tDefines whether the Stores of the Business Unit are set directly on the Business Unit or are inherited from its parent unit.\n *\n */\nlet BusinessUnitStoreModeValues = /*#__PURE__*/function (BusinessUnitStoreModeValues) {\n  BusinessUnitStoreModeValues[\"Explicit\"] = \"Explicit\";\n  BusinessUnitStoreModeValues[\"FromParent\"] = \"FromParent\";\n  return BusinessUnitStoreModeValues;\n}({});\n/**\n *\tThe type of the Business Unit indicating its position in a hierarchy.\n *\n */\nlet BusinessUnitTypeValues = /*#__PURE__*/function (BusinessUnitTypeValues) {\n  BusinessUnitTypeValues[\"Company\"] = \"Company\";\n  BusinessUnitTypeValues[\"Division\"] = \"Division\";\n  return BusinessUnitTypeValues;\n}({});\n\n/**\n *\tBusiness Unit type to represent the top level of a business.\n *\tContains specific fields and values that differentiate a Company from the generic [BusinessUnit](ctp:api:type:BusinessUnit).\n *\n */\n\n/**\n *\tDraft type to represent the top level of a business. Contains the fields and values of the generic [BusinessUnitDraft](ctp:api:type:BusinessUnitDraft) that are used specifically for creating a [Company](ctp:api:type:Company).\n *\n */\n\n/**\n *\tBusiness Unit type to model divisions that are part of the [Company](ctp:api:type:Company) or a higher-order Division.\n *\tContains specific fields and values that differentiate a Division from the generic [BusinessUnit](ctp:api:type:BusinessUnit).\n *\n */\n\n/**\n *\tDraft type to model divisions that are part of a [Company](ctp:api:type:Company) or a higher-order [Division](ctp:api:type:Division).\n *\tContains the fields and values of the generic [BusinessUnitDraft](ctp:api:type:BusinessUnitDraft) that are used specifically for creating a Division.\n *\n */\n\n/**\n *\tAdding an address to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitAddressAdded](ctp:api:type:BusinessUnitAddressAddedMessage) Message.\n *\n */\n\n/**\n *\tAdding an Associate to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitAssociateAdded](ctp:api:type:BusinessUnitAssociateAddedMessage) Message.\n *\n */\n\n/**\n *\tAdding a billing address to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitBillingAddressAdded](ctp:api:type:BusinessUnitBillingAddressAddedMessage) Message.\n *\n */\n\n/**\n *\tAdding a shipping address to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitShippingAddressAdded](ctp:api:type:BusinessUnitShippingAddressAddedMessage) Message.\n *\n */\n\n/**\n *\tAdding a [Store](ctp:api:type:Store) to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitStoreAdded](ctp:api:type:BusinessUnitStoreAddedMessage) Message.\n *\tOnly applicable when `storeMode` is `Explicit`.\n *\n */\n\n/**\n *\tChanging the address on a Business Unit generates the [BusinessUnitAddressChanged](ctp:api:type:BusinessUnitAddressChangedMessage) Message.\n *\n */\n\n/**\n *\tUpdates [Approval Rules](/projects/approval-rules) inheritance behavior between Business Units.\n *\n *\tOnly Business Units of type `Division` can be changed to `ExplicitAndFromParent`.\n *\n *\tThis update action generates a [BusinessUnitApprovalRuleModeChanged](ctp:api:type:BusinessUnitApprovalRuleModeChangedMessage) Message.\n *\n */\n\n/**\n *\tUpdating the [Associate](ctp:api:type:Associate) on a [Business Unit](ctp:api:type:BusinessUnit) generates the [BusinessUnitAssociateChanged](ctp:api:type:BusinessUnitAssociateChangedMessage) Message.\n *\n */\n\n/**\n *\tOnly Business Units of type `Division` can be changed to `ExplicitAndFromParent`.\n *\tThis update action generates a [BusinessUnitAssociateModeChanged](ctp:api:type:BusinessUnitAssociateModeChangedMessage) Message.\n *\n */\n\n/**\n *\tUpdating the name on a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitNameChanged](ctp:api:type:BusinessUnitNameChangedMessage) Message.\n *\n */\n\n/**\n *\tThis action generates a [BusinessUnitParentChanged](ctp:api:type:BusinessUnitParentChangedMessage) Message.\n *\n */\n\n/**\n *\tChanging the status of a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitStatusChanged](ctp:api:type:BusinessUnitStatusChangedMessage) Message.\n *\n */\n\n/**\n *\tRemoving the address from a [Business Unit](ctp:api:type:BusinessUnit) generates the [BusinessUnitAddressRemoved](ctp:api:type:BusinessUnitAddressRemovedMessage) Message.\n *\n */\n\n/**\n *\tRemoving an [Associate](ctp:api:type:Associate) from a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitAssociateRemoved](ctp:api:type:BusinessUnitAssociateRemovedMessage) Message.\n *\n */\n\n/**\n *\tRemoving a billing address from a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitBillingAddressRemoved](ctp:api:type:BusinessUnitBillingAddressRemovedMessage) Message.\n *\n */\n\n/**\n *\tRemoving a shipping address from a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitShippingAddressRemoved](ctp:api:type:BusinessUnitShippingAddressRemovedMessage) Message.\n *\n */\n\n/**\n *\tRemoves a Store from the Business Unit.\n *\tNewly created [Carts](ctp:api:type:Cart) and [Orders](ctp:api:type:Order) can no longer reference the removed Store for the Business Unit.\n *\tWe recommend cleaning up unordered Carts that still have the Store assigned after calling this update action since those cannot be converted to Orders.\n *\tOrders created before the Store was removed remain unchanged.\n *\tGenerates a [BusinessUnitStoreRemoved](ctp:api:type:BusinessUnitStoreRemovedMessage) Message.\n *\tOnly applicable when `storeMode` is `Explicit`.\n *\n */\n\n/**\n *\tAdding a Custom Field to an Address of a Business Unit generates the [BusinessUnitAddressCustomFieldAdded](ctp:api:type:BusinessUnitAddressCustomFieldAddedMessage) Message, removing one generates the [BusinessUnitAddressCustomFieldRemoved](ctp:api:type:BusinessUnitAddressCustomFieldRemovedMessage) Message, and updating an existing one generates the [BusinessUnitAddressCustomFieldChanged](ctp:api:type:BusinessUnitAddressCustomFieldChangedMessage) Message.\n *\n */\n\n/**\n *\tAdding or updating a Custom Type on an Address of a Business Unit generates the [BusinessUnitAddressCustomTypeSet](ctp:api:type:BusinessUnitAddressCustomTypeSetMessage) Message, and removing one generates the [BusinessUnitAddressCustomTypeRemoved](ctp:api:type:BusinessUnitAddressCustomTypeRemovedMessage) Message.\n *\n */\n\n/**\n *\tChanges the Associates of a [Business Unit](ctp:api:type:BusinessUnit), generates a [BusinessUnitAssociatesSet](ctp:api:type:BusinessUnitAssociatesSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the contact email on a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitContactEmailSet](ctp:api:type:BusinessUnitContactEmailSetMessage) Message.\n *\n */\n\n/**\n *\tAdding a Custom Field to a Business Unit generates the [BusinessUnitCustomFieldAdded](ctp:api:type:BusinessUnitCustomFieldAddedMessage) Message, removing one generates the [BusinessUnitCustomFieldRemoved](ctp:api:type:BusinessUnitCustomFieldRemovedMessage) Message, and updating an existing one generates the [BusinessUnitCustomFieldChanged](ctp:api:type:BusinessUnitCustomFieldChangedMessage) Message.\n *\n */\n\n/**\n *\tAdding or updating a Custom Type on a Business Unit generates the [BusinessUnitCustomTypeSet](ctp:api:type:BusinessUnitCustomTypeSetMessage) Message, removing one generates the [BusinessUnitCustomTypeRemoved](ctp:api:type:BusinessUnitCustomTypeRemovedMessage) Message.\n *\n */\n\n/**\n *\tSetting the default billing address on a [Business Unit](ctp:api:type:BusinessUnit) generates the [BusinessUnitDefaultBillingAddressSet](ctp:api:type:BusinessUnitDefaultBillingAddressSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the default shipping address on a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitDefaultShippingAddressSet](ctp:api:type:BusinessUnitDefaultShippingAddressSetMessage) Message.\n *\n */\n\n/**\n *\tOnly Business Units of type `Division` can be have a store mode of `FromParent`. Changing the `storeMode` to `FromParent` empties the `stores` array on the BusinessUnit.\n *\tThis update action generates a [BusinessUnitStoreModeChanged](ctp:api:type:BusinessUnitStoreModeChangedMessage) Message.\n *\n */\n\n/**\n *\tSets the Stores of the Business Unit. Can only be set if the Business Unit `storeMode` is `Explicit`.\n *\t[Carts](ctp:api:type:Cart) and [Orders](ctp:api:type:Order) created after the Set Stores update must use the new Stores of\n *\tthe Business Unit and, if set, their [Product Selections](ctp:api:type:ProductSelection), and [Channels](ctp:api:type:Channel).\n *\tOrders created before the Set Stores update action remain unchanged.\n *\tSetting the Stores on a Business Unit generates a [BusinessUnitStoresSet](ctp:api:type:BusinessUnitStoresSetMessage) Message.\n *\n */\n\n/**\n *\tThis action generates a [BusinessUnitTypeSet](ctp:api:type:BusinessUnitTypeSetMessage) Message.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tIndicates who created the Cart.\n *\n */\nlet CartOriginValues = /*#__PURE__*/function (CartOriginValues) {\n  CartOriginValues[\"Customer\"] = \"Customer\";\n  CartOriginValues[\"Merchant\"] = \"Merchant\";\n  CartOriginValues[\"Quote\"] = \"Quote\";\n  return CartOriginValues;\n}({});\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [Cart](ctp:api:type:Cart).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [Cart](ctp:api:type:Cart).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Cart](ctp:api:type:Cart). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tIndicates the current status of a Cart.\n *\n */\nlet CartStateValues = /*#__PURE__*/function (CartStateValues) {\n  CartStateValues[\"Active\"] = \"Active\";\n  CartStateValues[\"Frozen\"] = \"Frozen\";\n  CartStateValues[\"Merged\"] = \"Merged\";\n  CartStateValues[\"Ordered\"] = \"Ordered\";\n  return CartStateValues;\n}({});\n\n/**\n *\tA generic item that can be added to the Cart but is not bound to a Product that can be used for discounts (negative money), vouchers, complex cart rules, additional services, or fees.\n *\tYou control the lifecycle of this item.\n *\n */\n\n/**\n *\tDetermines if Cart Discounts can be applied to a Custom Line Item in the Cart.\n *\n */\nlet CustomLineItemPriceModeValues = /*#__PURE__*/function (CustomLineItemPriceModeValues) {\n  CustomLineItemPriceModeValues[\"External\"] = \"External\";\n  CustomLineItemPriceModeValues[\"Standard\"] = \"Standard\";\n  return CustomLineItemPriceModeValues;\n}({});\n\n/**\n *\tRepresents a [CartDiscount](ctp:api:type:CartDiscount) that is only associated with a single Cart or Order.\n *\n */\n\n/**\n *\tRepresents a [CartDiscount](ctp:api:type:CartDiscount) that can only be associated with a single Cart or Order.\n *\n *\tFor an introduction to Direct Discounts and to understand how they work in Composable Commerce, see the [Direct Discounts overview](/pricing-and-discounts-overview#direct-discounts).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [DirectDiscount](ctp:api:type:DirectDiscount).\n *\n */\n\n/**\n *\tIndicates the state of a Discount Code in a Cart.\n *\n *\tIf an Order is created from a Cart with a state other than `MatchesCart`, a [DiscountCodeNonApplicable](ctp:api:type:DiscountCodeNonApplicableError) error is returned.\n *\n */\nlet DiscountCodeStateValues = /*#__PURE__*/function (DiscountCodeStateValues) {\n  DiscountCodeStateValues[\"ApplicationStoppedByPreviousDiscount\"] = \"ApplicationStoppedByPreviousDiscount\";\n  DiscountCodeStateValues[\"DoesNotMatchCart\"] = \"DoesNotMatchCart\";\n  DiscountCodeStateValues[\"MatchesCart\"] = \"MatchesCart\";\n  DiscountCodeStateValues[\"MaxApplicationReached\"] = \"MaxApplicationReached\";\n  DiscountCodeStateValues[\"NotActive\"] = \"NotActive\";\n  DiscountCodeStateValues[\"NotValid\"] = \"NotValid\";\n  return DiscountCodeStateValues;\n}({});\n\n/**\n *\tIndicates the best deal logic applies to a Cart or Order and indicates the discount type that offers the best deal.\n *\n */\n\n/**\n *\tCannot be used in [LineItemDraft](ctp:api:type:LineItemDraft) or [CustomLineItemDraft](ctp:api:type:CustomLineItemDraft).\n *\n *\tCan only be set by these update actions:\n *\n *\t- [Set LineItem TaxAmount](ctp:api:type:CartSetLineItemTaxAmountAction), [Set CustomLineItem TaxAmount](ctp:api:type:CartSetCustomLineItemTaxAmountAction), or [Set ShippingMethod TaxAmount](ctp:api:type:CartSetShippingMethodTaxAmountAction) on Carts\n *\t- [Set LineItem TaxAmount](ctp:api:type:StagedOrderSetLineItemTaxAmountAction), [Set CustomLineItem TaxAmount](ctp:api:type:StagedOrderSetCustomLineItemTaxAmountAction), or [Set ShippingMethod TaxAmount](ctp:api:type:StagedOrderSetShippingMethodTaxAmountAction) on Order Edits\n *\n */\n\n/**\n *\tControls calculation of taxed prices for Line Items, Custom Line Items, and Shipping Methods as explained in [Cart tax calculation](ctp:api:type:CartTaxCalculation).\n *\n */\n\n/**\n *\tIndicates how Line Items in a Cart are tracked.\n *\n */\nlet InventoryModeValues = /*#__PURE__*/function (InventoryModeValues) {\n  InventoryModeValues[\"None\"] = \"None\";\n  InventoryModeValues[\"ReserveOnOrder\"] = \"ReserveOnOrder\";\n  InventoryModeValues[\"TrackOnly\"] = \"TrackOnly\";\n  return InventoryModeValues;\n}({});\n\n/**\n *\tFor order creation and updates, the sum of the `targets` must match the quantity of the Line Items or Custom Line Items.\n *\n */\n\n/**\n *\tDetermines the address (as a reference to an address in `itemShippingAddresses`) and the quantity shipped to the address.\n *\n *\tIf multiple shipping addresses are present for a Line Item or Custom Line Item, sub-quantities must be specified.\n *\tAn array of addresses and sub-quantities is stored per Line Item or Custom Line Item.\n *\n */\n\n/**\n *\tThe representation of a [Line Item](/../api/carts-orders-overview#line-items) in a [Cart](ctp:api:type:Cart) or in an [Order](ctp:api:type:Order).\n *\n */\n\n/**\n *\tFor Product Variant identification, either the `productId` and `variantId`, or `sku` must be provided.\n *\n */\n\n/**\n *\tIndicates how a Line Item was added to a Cart.\n *\n */\nlet LineItemModeValues = /*#__PURE__*/function (LineItemModeValues) {\n  LineItemModeValues[\"GiftLineItem\"] = \"GiftLineItem\";\n  LineItemModeValues[\"Standard\"] = \"Standard\";\n  return LineItemModeValues;\n}({});\n/**\n *\tThis mode indicates how the price is set for the Line Item.\n *\n */\nlet LineItemPriceModeValues = /*#__PURE__*/function (LineItemPriceModeValues) {\n  LineItemPriceModeValues[\"ExternalPrice\"] = \"ExternalPrice\";\n  LineItemPriceModeValues[\"ExternalTotal\"] = \"ExternalTotal\";\n  LineItemPriceModeValues[\"Platform\"] = \"Platform\";\n  return LineItemPriceModeValues;\n}({});\n\n/**\n *\tUsed for [replicating an existing Cart](ctp:api:endpoint:/{projectKey}/carts/replicate:POST) or Order.\n *\n */\n\n/**\n *\tDetermines how monetary values are rounded.\n *\n */\nlet RoundingModeValues = /*#__PURE__*/function (RoundingModeValues) {\n  RoundingModeValues[\"HalfDown\"] = \"HalfDown\";\n  RoundingModeValues[\"HalfEven\"] = \"HalfEven\";\n  RoundingModeValues[\"HalfUp\"] = \"HalfUp\";\n  return RoundingModeValues;\n}({});\n\n/**\n *\tWraps all shipping-related information (such as address, rate, deliveries) per Shipping Method for Carts with multiple Shipping Methods.\n *\n */\n\n/**\n *\tDetermines whether the selected [ShippingMethod](ctp:api:type:ShippingMethod) is allowed for the Cart. For more information, see [Predicates](/shipping-delivery-overview#predicates).\n *\n */\nlet ShippingMethodStateValues = /*#__PURE__*/function (ShippingMethodStateValues) {\n  ShippingMethodStateValues[\"DoesNotMatchCart\"] = \"DoesNotMatchCart\";\n  ShippingMethodStateValues[\"MatchesCart\"] = \"MatchesCart\";\n  return ShippingMethodStateValues;\n}({});\nlet ShippingModeValues = /*#__PURE__*/function (ShippingModeValues) {\n  ShippingModeValues[\"Multiple\"] = \"Multiple\";\n  ShippingModeValues[\"Single\"] = \"Single\";\n  return ShippingModeValues;\n}({});\n\n/**\n *\tGeneric type holding specific ShippingRateInputDraft types.\n */\n\n/**\n *\tIndicates both Product Discounts and Cart Discounts apply to a Cart and Order.\n *\n */\n\n/**\n *\tDetermines in which [Tax calculation mode](/carts-orders-overview#tax-calculation-mode) taxed prices are calculated.\n *\n */\nlet TaxCalculationModeValues = /*#__PURE__*/function (TaxCalculationModeValues) {\n  TaxCalculationModeValues[\"LineItemLevel\"] = \"LineItemLevel\";\n  TaxCalculationModeValues[\"UnitPriceLevel\"] = \"UnitPriceLevel\";\n  return TaxCalculationModeValues;\n}({});\n/**\n *\tIndicates how taxes are set on the Cart.\n *\n */\nlet TaxModeValues = /*#__PURE__*/function (TaxModeValues) {\n  TaxModeValues[\"Disabled\"] = \"Disabled\";\n  TaxModeValues[\"External\"] = \"External\";\n  TaxModeValues[\"ExternalAmount\"] = \"ExternalAmount\";\n  TaxModeValues[\"Platform\"] = \"Platform\";\n  return TaxModeValues;\n}({});\n\n/**\n *\tThe tax portions are calculated from the [TaxRates](ctp:api:type:TaxRate).\n *\tIf a Tax Rate has [SubRates](ctp:api:type:SubRate), they are used and can be identified by name.\n *\tTax portions from Line Items with the same `rate` and `name` are accumulated to the same tax portion.\n *\n */\n\n/**\n *\tRepresents the portions that sum up to the `totalGross` field of a [TaxedPrice](ctp:api:type:TaxedPrice).\n *\n *\tThe portions are calculated from the [TaxRates](ctp:api:type:TaxRate).\n *\tIf a Tax Rate has [SubRates](ctp:api:type:SubRate), they are used and can be identified by name.\n *\tTax portions from Line Items with the same `rate` and `name` will be accumulated to the same tax portion.\n *\n */\n\n/**\n *\tIf the Cart already contains a [CustomLineItem](ctp:api:type:CustomLineItem) with the same `slug`, `name`, `money`, `taxCategory`, `state`,\n *\tand Custom Fields, then only the quantity of the existing Custom Line Item is increased.\n *\tIf [CustomLineItem](ctp:api:type:CustomLineItem) `shippingDetails` are set, they are merged with the `targets` that already exist on the\n *\t[ItemShippingDetails](ctp:api:type:ItemShippingDetails) of the Custom Line Item.\n *\tIn case of overlapping address keys the [ItemShippingTarget](ctp:api:type:ItemShippingTarget) `quantity` is summed up.\n *\n *\tIf the Cart already contains a Custom Line Item with the same slug that is otherwise not identical, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.\n *\n *\tIf the Tax Rate is not set, a [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError) error is returned.\n *\n */\n\n/**\n *\tTo add a custom Shipping Method (independent of the [ShippingMethods](ctp:api:type:ShippingMethod) managed through\n *\tthe [Shipping Methods API](/projects/shippingMethods)) to the Cart, it **must have** the `Multiple` [ShippingMode](ctp:api:type:ShippingMode).\n *\n */\n\n/**\n *\tAdds a [DiscountCode](ctp:api:type:DiscountCode) to the Cart to activate the related [Cart Discounts](/../api/projects/cartDiscounts).\n *\tAdding a Discount Code is only possible if no [DirectDiscount](ctp:api:type:DirectDiscount) has been applied to the Cart.\n *\tDiscount Codes can be added to [frozen Carts](ctp:api:type:FrozenCarts), but their [DiscountCodeState](ctp:api:type:DiscountCodeState) is then `DoesNotMatchCart`.\n *\n *\tThe maximum number of Discount Codes in a Cart is restricted by a [limit](/../api/limits#carts).\n *\n *\tSpecific Error Code: [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n *\n */\n\n/**\n *\tAdds an address to a Cart when shipping to multiple addresses is desired.\n *\n */\n\n/**\n *\tIf the Cart contains a [LineItem](ctp:api:type:LineItem) for a Product Variant with the same [LineItemMode](ctp:api:type:LineItemMode), [Custom Fields](/../api/projects/custom-fields), supply and distribution channel, then only the quantity of the existing Line Item is increased.\n *\tIf [LineItem](ctp:api:type:LineItem) `shippingDetails` is set, it is merged. All addresses will be present afterwards and, for address keys present in both shipping details, the quantity will be summed up.\n *\tA new Line Item is added when the `externalPrice` or `externalTotalPrice` is set in this update action.\n *\tThe [LineItem](ctp:api:type:LineItem) price is set as described in [Line Item price selection](/../api/pricing-and-discounts-overview#line-item-price-selection).\n *\n *\tIf the Tax Rate is not set, a [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError) error is returned.\n *\n *\tIf the Line Items do not have a Price according to the [Product](ctp:api:type:Product) `priceMode` value for a selected currency and/or country, Customer Group, or Channel, a [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError) error is returned.\n *\n *\tIf the Line Items are added to a Cart bound to a Store with active Product Selections, the selected Product Variant must be [available in that Store](/../api/projects/stores#products-available-in-store), otherwise an [InvalidInput](ctp:api:type:InvalidInputError) error is returned.\n *\n */\n\n/**\n *\tAdds a Shipping Method for a specified shipping address to a Cart with `Multiple` [ShippingMode](ctp:api:type:ShippingMode).\n *\n */\n\n/**\n *\tAdds all [LineItems](ctp:api:type:LineItem) of a [ShoppingList](ctp:api:type:ShoppingList) to the Cart.\n *\n */\n\n/**\n *\tTo override the shipping details, see [Set LineItem ShippingDetails](ctp:api:type:CartSetLineItemShippingDetailsAction).\n *\n */\n\n/**\n *\tWhen multiple shipping addresses are set for a Custom Line Item,\n *\tuse the [Add CustomLineItem](ctp:api:type:CartAddCustomLineItemAction) update action to change the shipping details.\n *\tSince it is not possible for the API to infer how the overall change in the Custom Line Item quantity should be distributed over the sub-quantities,\n *\tthe `shippingDetails` field is kept in its current state to avoid data loss.\n *\n *\tTo change the Custom Line Item quantity and shipping details together,\n *\tuse this update action in combination with the [Set CustomLineItem ShippingDetails](ctp:api:type:CartSetCustomLineItemShippingDetailsAction) update action\n *\tin a single Cart update command.\n *\n */\n\n/**\n *\tWhen multiple shipping addresses are set for a Line Item,\n *\tuse the [Remove LineItem](ctp:api:type:CartRemoveLineItemAction) and [Add LineItem](ctp:api:type:CartAddLineItemAction) update action\n *\tto change the shipping details.\n *\tSince it is not possible for the API to infer how the overall change in the Line Item quantity should be distributed over the sub-quantities,\n *\tthe `shippingDetails` field is kept in its current state to avoid data loss.\n *\n *\tTo change the Line Item quantity and shipping details together,\n *\tuse this update action in combination with the [Set LineItem ShippingDetails](ctp:api:type:CartSetLineItemShippingDetailsAction) update action\n *\tin a single Cart update command.\n *\n *\tThe [LineItem](ctp:api:type:LineItem) price is set as described in [Line Item price selection](/../api/pricing-and-discounts-overview#line-item-price-selection).\n *\n */\n\n/**\n *\tChanging the tax calculation mode leads to [recalculation of taxes](/../api/carts-orders-overview#cart-tax-calculation).\n *\n */\n\n/**\n *\t- When `External` [TaxMode](ctp:api:type:TaxMode) is changed to `Platform` or `Disabled`, all previously set external Tax Rates are removed.\n *\t- When set to `Platform`, Line Items, Custom Line Items, and Shipping Method require a Tax Category with a Tax Rate for the Cart's `shippingAddress`.\n *\n */\n\n/**\n *\tChanging the tax rounding mode leads to [recalculation of taxes](/../api/carts-orders-overview#cart-tax-calculation).\n *\n */\n\n/**\n *\tChanges the [CartState](ctp:api:type:CartState) from `Active` to `Frozen`. Results in a [Frozen Cart](ctp:api:type:FrozenCarts).\n *\tFails with [InvalidOperation](ctp:api:type:InvalidOperationError) error when the Cart is empty.\n *\n */\n\n/**\n *\tThis update action does not set any Cart field in particular, but it triggers several [Cart updates](/../api/carts-orders-overview#cart-updates)\n *\tto bring prices and discounts to the latest state. Those can become stale over time when no Cart updates have been performed for a while and\n *\tprices on related Products have changed in the meanwhile.\n *\n *\tIf the `priceMode` of the [Product](ctp:api:type:Product) related to a Line Item is of `Embedded` [ProductPriceMode](ctp:api:type:ProductPriceModeEnum),\n *\tthe updated `price` of that [LineItem](ctp:api:type:LineItem) may not correspond to a Price in the `variant.prices` anymore.\n *\n */\n\n/**\n *\tThis update action does not support specifying quantities, unlike the [Remove LineItem](ctp:api:type:CartRemoveLineItemAction) update action.\n *\n *\tIf `shippingDetails` must be partially removed, use the [Change CustomLineItem Quantity](ctp:api:type:CartChangeCustomLineItemQuantityAction) update action.\n *\n */\n\n/**\n *\tAn address can only be removed if it is not referenced in any [ItemShippingTarget](ctp:api:type:ItemShippingTarget) of the Cart.\n *\n */\n\n/**\n *\tThe [LineItem](ctp:api:type:LineItem) price is updated as described in [Line Item price selection](/../api/pricing-and-discounts-overview#line-item-price-selection).\n *\n */\n\n/**\n *\tRemoves a Shipping Method from a Cart that has the `Multiple` [ShippingMode](ctp:api:type:ShippingMode).\n *\n */\n\n/**\n *\tIf the Cart is already associated with a Customer, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.\n *\n */\n\n/**\n *\tUpdates the Business Unit on the Cart. The Cart must have an existing Business Unit assigned already.\n *\n */\n\n/**\n *\tCan be used if the Cart has the `ExternalAmount` [TaxMode](ctp:api:type:TaxMode). This update action adds the `taxedPrice` field to the Cart. It sets the `totalGross` amount, and Composable Commerce calculates the `totalNet` and `totalTax` values based on the provided `externalTotalGross`.\n *\tYou must use this update action after any price-affecting change occurs within the Cart.\n *\n */\n\n/**\n *\tSetting the country can lead to changes in the [LineItem](ctp:api:type:LineItem) prices.\n *\n */\n\n/**\n *\tCan be used if the Cart has the `ExternalAmount` [TaxMode](ctp:api:type:TaxMode).\n *\n */\n\n/**\n *\tCan be used if the Cart has the `External` [TaxMode](ctp:api:type:TaxMode).\n *\n */\n\n/**\n *\tTo set the Cart's custom Shipping Method (independent of the [ShippingMethods](ctp:api:type:ShippingMethod) managed through\n *\tthe [Shipping Methods API](/projects/shippingMethods)) the Cart must have\n *\tthe `Single` [ShippingMode](ctp:api:type:ShippingMode) and a `shippingAddress`.\n *\n *\tTo unset a custom Shipping Method on a Cart, use the [Set ShippingMethod](ctp:api:type:CartSetShippingMethodAction) update action\n *\twithout the `shippingMethod` field instead.\n *\n */\n\n/**\n *\tThis update action can only be used if a Customer is not assigned to the Cart.\n *\tIf a Customer is already assigned, the Cart uses the Customer Group of the assigned Customer.\n *\n *\tTo reflect the new Customer Group, this update action can result in [updates to the Cart](/api/carts-orders-overview#cart-updates). When this occurs, the following errors can be returned: [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError) and [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError).\n *\n */\n\n/**\n *\tSetting the Cart's `customerId` can lead to updates on all its [LineItem](ctp:api:type:LineItem) `prices`.\n *\n *\tIf the Customer with the specified `id` cannot be found, this update action returns a\n *\t[ReferencedResourceNotFound](ctp:api:type:ReferencedResourceNotFoundError) error.\n *\n */\n\n/**\n *\tNumber of days after which a Cart with `Active` [CartState](ctp:api:type:CartState) is deleted since its last modification.\n *\n *\tIf a [ChangeSubscription](ctp:api:type:ChangeSubscription) exists for Carts, a [ResourceDeletedDeliveryPayload](ctp:api:type:ResourceDeletedDeliveryPayload) is sent.\n *\n */\n\n/**\n *\tAdds a [DirectDiscount](ctp:api:type:DirectDiscount), but only if no [DiscountCode](ctp:api:type:DiscountCode) has been added to the Cart.\n *\tEither a Discount Code or a Direct Discount can exist on a Cart at the same time.\n *\n */\n\n/**\n *\tSetting a distribution channel for a [LineItem](ctp:api:type:LineItem) can lead to an updated `price` as described in [Line Item price selection](/../api/pricing-and-discounts-overview#line-item-price-selection).\n *\n */\n\n/**\n *\tSets the [LineItem](ctp:api:type:LineItem) `price` and changes the `priceMode` to `ExternalPrice` [LineItemPriceMode](ctp:api:type:LineItemPriceMode).\n *\n */\n\n/**\n *\tPerforming this action has no impact on inventory that should be reserved.\n *\n */\n\n/**\n *\tCan be used if the Cart has the `ExternalAmount` [TaxMode](ctp:api:type:TaxMode). This update action sets the `taxedPrice` and `taxRate` on a Line Item and must be used after any price-affecting change occurs.\n *\n */\n\n/**\n *\tCan be used if the Cart has the `External` [TaxMode](ctp:api:type:TaxMode).\n *\n */\n\n/**\n *\tSets the [LineItem](ctp:api:type:LineItem) `totalPrice` and `price`, and changes the `priceMode` to `ExternalTotal` [LineItemPriceMode](ctp:api:type:LineItemPriceMode).\n *\n */\n\n/**\n *\tSetting the shipping address also sets the [TaxRate](ctp:api:type:TaxRate) of Line Items and calculates the [TaxedPrice](ctp:api:type:TaxedPrice).\n *\n *\tIf a matching price cannot be found for the given shipping address during [Line Item price selection](/../api/pricing-and-discounts-overview#line-item-price-selection),\n *\ta [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError) error is returned.\n *\n *\tIf you want to allow shipping to states inside a country that are not explicitly covered by a TaxRate,\n *\tset the `countryTaxRateFallbackEnabled` field to `true` in the [CartsConfiguration](ctp:api:type:CartsConfiguration) by using\n *\tthe [Change CountryTaxRateFallbackEnabled](ctp:api:type:ProjectChangeCountryTaxRateFallbackEnabledAction) update action.\n *\n */\n\n/**\n *\tThis action sets, overwrites, or removes any existing Custom Type and Custom Fields for the Cart's `shippingMethod` or `shipping`.\n *\n */\n\n/**\n *\tTo set the Cart's Shipping Method the Cart must have the `Single` [ShippingMode](ctp:api:type:ShippingMode) and a `shippingAddress`.\n *\n */\n\n/**\n *\tA Shipping Method tax amount can be set if the Cart has the `ExternalAmount` [TaxMode](ctp:api:type:TaxMode).\n *\n */\n\n/**\n *\tA Shipping Method Tax Rate can be set if the Cart has the `External` [TaxMode](ctp:api:type:TaxMode).\n *\n */\n\n/**\n *\tInput used to select a [ShippingRatePriceTier](ctp:api:type:ShippingRatePriceTier).\n *\tIf no matching tier can be found, or the input is not set, the default price for the shipping rate is used.\n *\n */\n\n/**\n *\tChanges the [CartState](ctp:api:type:CartState) from `Frozen` to `Active`. Reactivates a [Frozen Cart](ctp:api:type:FrozenCarts).\n *\tThis action updates all prices in the Cart according to latest Prices on related Product Variants and Shipping Methods and by applying all discounts currently being active and applicable for the Cart.\n *\n */\n\n/**\n *\tUpdates an address in `itemShippingAddresses` by keeping the Address `key`.\n *\n */\n\n/**\n *\tThe scope controls which part of the product information is published.\n */\nlet ProductPublishScopeValues = /*#__PURE__*/function (ProductPublishScopeValues) {\n  ProductPublishScopeValues[\"All\"] = \"All\";\n  ProductPublishScopeValues[\"Prices\"] = \"Prices\";\n  return ProductPublishScopeValues;\n}({});\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [CartDiscount](ctp:api:type:CartDiscount).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [CartDiscount](ctp:api:type:CartDiscount).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [CartDiscount](ctp:api:type:CartDiscount). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tDiscount is applied to [CustomLineItems](ctp:api:type:CustomLineItem) matching the `predicate`.\n *\n */\n\n/**\n *\tDiscount is applied to [LineItems](ctp:api:type:LineItem) matching the `predicate`.\n *\n */\n\n/**\n *\tPattern targets can be used to model Buy and Get discounts.\n *\n *\tUnlike [CartDiscountLineItemsTarget](#cartdiscountlineitemstarget) and [CartDiscountCustomLineItemsTarget](#cartdiscountcustomlineitemstarget), it does not apply to a (Custom) Line Item as a whole, but to individual units of a (Custom) Line Item. The discounts can apply multiple times on the same cart, but each unit can be discounted only once.\n *\n */\n\n/**\n *\tDiscount is applied to the shipping costs of the [Cart](ctp:api:type:Cart).\n *\n */\n\n/**\n *\tDiscount is applied to the total price of the [Cart](ctp:api:type:Cart).\n *\n */\n\n/**\n *\tDiscounts the [CartDiscountTarget](ctp:api:type:CartDiscountTarget) by an absolute amount (not allowed for [MultiBuyLineItemsTarget](ctp:api:type:MultiBuyLineItemsTarget) and [MultiBuyCustomLineItemsTarget](ctp:api:type:MultiBuyCustomLineItemsTarget)).\n *\n */\n\n/**\n *\tSets the [DiscountedLineItemPrice](ctp:api:type:DiscountedLineItemPrice) of the [CartDiscountLineItemsTarget](ctp:api:type:CartDiscountLineItemsTarget) or [CartDiscountCustomLineItemsTarget](ctp:api:type:CartDiscountCustomLineItemsTarget) to the value specified in the `money` field, if it is lower than the current Line Item price for the same currency. If the Line Item price is already discounted to a price equal to or lower than the respective price in the `money` field, this Discount is not applied. If the `quantity` of the Line Item eligible for the Discount is greater than `1`, the fixed price discount is only applied to the Line Item portion for which the `money` value is lesser than their current price.\n *\n */\n\n/**\n *\tSets the [DiscountedLineItemPrice](ctp:api:type:DiscountedLineItemPrice) of the [CartDiscountLineItemsTarget](ctp:api:type:CartDiscountLineItemsTarget) or [CartDiscountCustomLineItemsTarget](ctp:api:type:CartDiscountCustomLineItemsTarget) to the value specified in the `money` field, if it is lower than the current Line Item price for the same currency. If the Line Item price is already discounted to a price equal to or lower than the respective price in the `money` field, this Discount is not applied.\n *\n */\n\n/**\n *\tCan only be used in a [CartDiscountDraft](ctp:api:type:CartDiscountDraft) with no `target` specified.\n *\tHence, this type can not be used in the [Change Value](ctp:api:type:CartDiscountChangeValueAction) update action.\n *\n */\n\n/**\n *\tDiscounts the [CartDiscountTarget](ctp:api:type:CartDiscountTarget) relative to its price.\n *\n */\n\n/**\n *\tThis mode determines how absolute Discounts are applied on Line Items or Custom Line Items.\n *\n */\nlet DiscountApplicationModeValues = /*#__PURE__*/function (DiscountApplicationModeValues) {\n  DiscountApplicationModeValues[\"EvenDistribution\"] = \"EvenDistribution\";\n  DiscountApplicationModeValues[\"IndividualApplication\"] = \"IndividualApplication\";\n  DiscountApplicationModeValues[\"ProportionateDistribution\"] = \"ProportionateDistribution\";\n  return DiscountApplicationModeValues;\n}({});\n\n/**\n *\tThis Discount target is similar to `MultiBuyLineItems`, but is applied on Custom Line Items instead of Line Items.\n *\n */\n\n/**\n *\tThe pattern component it used to define a set of units based on some criteria. The criteria depends on the type of component used.\n *\n */\n\n/**\n *\tDefines which matching items are to be discounted.\n *\n */\nlet SelectionModeValues = /*#__PURE__*/function (SelectionModeValues) {\n  SelectionModeValues[\"Cheapest\"] = \"Cheapest\";\n  SelectionModeValues[\"MostExpensive\"] = \"MostExpensive\";\n  return SelectionModeValues;\n}({});\n/**\n *\tDescribes how the Cart Discount interacts with other Discounts.\n *\n */\nlet StackingModeValues = /*#__PURE__*/function (StackingModeValues) {\n  StackingModeValues[\"Stacking\"] = \"Stacking\";\n  StackingModeValues[\"StopAfterThisDiscount\"] = \"StopAfterThisDiscount\";\n  return StackingModeValues;\n}({});\n\n/**\n *\tIf a referenced Store does not exist, a [ReferencedResourceNotFound](ctp:api:type:ReferencedResourceNotFoundError) error is returned.\n *\n *\tThis action generates a [CartDiscountStoreAdded](ctp:api:type:CartDiscountStoreAddedMessage) Message.\n *\n */\n\n/**\n *\tChanges the [CartDiscountValue](ctp:api:type:CartDiscountValue) for [relative](ctp:api:type:CartDiscountValueRelative), [absolute](ctp:api:type:CartDiscountValueAbsolute) and [fixed price](ctp:api:type:CartDiscountValueFixed) CartDiscounts.\n *\tChanging to [Gift Line Item](ctp:api:type:CartDiscountValueGiftLineItem) is not supported.\n *\n */\n\n/**\n *\tIf a referenced Store does not exist, a [ReferencedResourceNotFound](ctp:api:type:ReferencedResourceNotFoundError) error is returned.\n *\n *\tThis action generates a [CartDiscountStoreRemoved](ctp:api:type:CartDiscountStoreRemovedMessage) Message.\n *\n */\n\n/**\n *\tIf a referenced Store does not exist, a [ReferencedResourceNotFound](ctp:api:type:ReferencedResourceNotFoundError) error is returned.\n *\n *\tThis action generates a [CartDiscountStoresSet](ctp:api:type:CartDiscountStoresSetMessage) Message.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [Channel](ctp:api:type:Channel).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [Channel](ctp:api:type:Channel).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Channel](ctp:api:type:Channel). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tDescribes the purpose and type of the Channel. A Channel can have one or more roles.\n *\n */\nlet ChannelRoleEnumValues = /*#__PURE__*/function (ChannelRoleEnumValues) {\n  ChannelRoleEnumValues[\"InventorySupply\"] = \"InventorySupply\";\n  ChannelRoleEnumValues[\"OrderExport\"] = \"OrderExport\";\n  ChannelRoleEnumValues[\"OrderImport\"] = \"OrderImport\";\n  ChannelRoleEnumValues[\"Primary\"] = \"Primary\";\n  ChannelRoleEnumValues[\"ProductDistribution\"] = \"ProductDistribution\";\n  return ChannelRoleEnumValues;\n}({});\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tEach query endpoint returns a paged query response containing the actual resources matching the query predicate plus information about [pagination](#pagination).\n *\tThis documents the fields all query responses have in common, for specific response types, see the respective API reference pages.\n *\n */\n\n/**\n *\tDimensions of the Asset source specified by the number of pixels.\n *\n */\n\n/**\n *\tRepresentation of an [Asset](#asset) in a specific format, for example a video in a certain encoding, or an image in a certain resolution.\n *\n */\n\n/**\n *\tIndicates the source and method that indirectly created or modified the resource. This is present on resources created or updated after 1 April 2024.\n */\n\nlet AttributionSourceValues = /*#__PURE__*/function (AttributionSourceValues) {\n  AttributionSourceValues[\"Export\"] = \"Export\";\n  AttributionSourceValues[\"Import\"] = \"Import\";\n  return AttributionSourceValues;\n}({});\n\n/**\n *\tPolymorphic base type that represents a postal address and contact details.\n *\tDepending on the read or write action, it can be either [Address](ctp:api:type:Address) or [AddressDraft](ctp:api:type:AddressDraft) that\n *\tonly differ in the data type for the optional `custom` field.\n *\n */\n\n/**\n *\tAddress type returned by read methods.\n *\tOptionally, the `custom` field can be present in addition to the fields of a [BaseAddress](ctp:api:type:BaseAddress).\n *\n */\n\n/**\n *\tAddress type to be used on write methods.\n *\tOptionally, use the `custom` field in addition to the fields of a [BaseAddress](ctp:api:type:BaseAddress).\n *\n */\n\n/**\n *\tThese objects represent information about which [API Client](/../api/projects/api-clients) created or modified a resource. For more information, see [Client Logging](/../api/general-concepts#client-logging).\n *\n */\n\n/**\n *\tIDs and references that created the resource. This is present on resources created after 1 February 2019 except for [events not tracked](/general-concepts#events-tracked).\n */\n\n/**\n *\tGeoJSON Geometry represents a [Geometry Object](https://datatracker.ietf.org/doc/html/rfc7946#section-3.1) as defined in the GeoJSON standard.\n *\n */\n\n/**\n *\tA KeyReference represents a loose reference to another resource in the same Project identified by the resource's `key` field. If available, the `key` is immutable and mandatory. KeyReferences do not support [Reference Expansion](/general-concepts#reference-expansion).\n *\n */\n\n/**\n *\tIDs and references that last modified the resource. This is present on resources created or updated after 1 February 2019 except for [events not tracked](/general-concepts#events-tracked).\n */\n\n/**\n *\tJSON object where the keys are of type [Locale](ctp:api:type:Locale), and the values are the strings used for the corresponding language.\n *\n */\n\n/**\n *\tDraft object to store money in cent amounts for a specific currency.\n */\n\n/**\n *\tDetermines the type of money used.\n */\nlet MoneyTypeValues = /*#__PURE__*/function (MoneyTypeValues) {\n  MoneyTypeValues[\"CentPrecision\"] = \"centPrecision\";\n  MoneyTypeValues[\"HighPrecision\"] = \"highPrecision\";\n  return MoneyTypeValues;\n}({});\n\n/**\n *\tThe representation for prices embedded in [LineItems](ctp:api:type:LineItem) and in [ProductVariants](ctp:api:type:ProductVariant) when the [ProductPriceMode](ctp:api:type:ProductPriceModeEnum) is `Embedded`.\n *\tFor the `Standalone` ProductPriceMode refer to [StandalonePrice](ctp:api:type:StandalonePrice).\n */\n\n/**\n *\tThe draft representation for prices to be embedded into [ProductVariantDrafts](ctp:api:type:ProductVariantDraft) when the [ProductPriceMode](ctp:api:type:ProductPriceModeEnum) is `Embedded`. For the `Standalone` ProductPriceMode use [StandalonePriceDraft](ctp:api:type:StandalonePriceDraft).\n */\n\n/**\n *\tA Price tier is selected instead of the default Price when a certain quantity of the [ProductVariant](ctp:api:type:ProductVariant) is [added to a Cart](/projects/carts#add-lineitem) and ordered.\n *\t_For example: the Price can be lower if more than 10 items are ordered._\n *\tIf no Price tier is found for the Order quantity, the base Price is used.\n *\tA Price tier is applied for the entire quantity of a Product Variant put as [LineItem](/projects/carts#lineitem) in a Cart as soon as the minimum quantity for the Price tier is reached.\n *\tThe Price tier is applied per Line Item of the Product Variant. If, for example, the same Product Variant appears in the same Cart as several Line Items, (what can be achieved by different values of a Custom Field on the Line Items) for each Line Item the minimum quantity must be reached to get the Price tier.\n *\n */\n\n/**\n *\tSpecifies a Price tier that applies when the minimum quantity for the [LineItem](ctp:api:type:LineItem) of a ProductVariant with the related Price is reached in a Cart.\n *\n */\n\n/**\n *\tA Reference represents a loose reference to another resource in the same Project identified by its `id`. The `typeId` indicates the type of the referenced resource. Each resource type has its corresponding Reference type, like [ChannelReference](ctp:api:type:ChannelReference).  A referenced resource can be embedded through [Reference Expansion](/general-concepts#reference-expansion). The expanded reference is the value of an additional `obj` field then.\n *\n */\n\n/**\n *\tType of resource the value should reference. Supported resource type identifiers are:\n *\n */\nlet ReferenceTypeIdValues = /*#__PURE__*/function (ReferenceTypeIdValues) {\n  ReferenceTypeIdValues[\"ApprovalFlow\"] = \"approval-flow\";\n  ReferenceTypeIdValues[\"ApprovalRule\"] = \"approval-rule\";\n  ReferenceTypeIdValues[\"AssociateRole\"] = \"associate-role\";\n  ReferenceTypeIdValues[\"AttributeGroup\"] = \"attribute-group\";\n  ReferenceTypeIdValues[\"BusinessUnit\"] = \"business-unit\";\n  ReferenceTypeIdValues[\"Cart\"] = \"cart\";\n  ReferenceTypeIdValues[\"CartDiscount\"] = \"cart-discount\";\n  ReferenceTypeIdValues[\"Category\"] = \"category\";\n  ReferenceTypeIdValues[\"Channel\"] = \"channel\";\n  ReferenceTypeIdValues[\"Customer\"] = \"customer\";\n  ReferenceTypeIdValues[\"CustomerEmailToken\"] = \"customer-email-token\";\n  ReferenceTypeIdValues[\"CustomerGroup\"] = \"customer-group\";\n  ReferenceTypeIdValues[\"CustomerPasswordToken\"] = \"customer-password-token\";\n  ReferenceTypeIdValues[\"DirectDiscount\"] = \"direct-discount\";\n  ReferenceTypeIdValues[\"DiscountCode\"] = \"discount-code\";\n  ReferenceTypeIdValues[\"Extension\"] = \"extension\";\n  ReferenceTypeIdValues[\"InventoryEntry\"] = \"inventory-entry\";\n  ReferenceTypeIdValues[\"KeyValueDocument\"] = \"key-value-document\";\n  ReferenceTypeIdValues[\"Order\"] = \"order\";\n  ReferenceTypeIdValues[\"OrderEdit\"] = \"order-edit\";\n  ReferenceTypeIdValues[\"Payment\"] = \"payment\";\n  ReferenceTypeIdValues[\"Product\"] = \"product\";\n  ReferenceTypeIdValues[\"ProductDiscount\"] = \"product-discount\";\n  ReferenceTypeIdValues[\"ProductPrice\"] = \"product-price\";\n  ReferenceTypeIdValues[\"ProductSelection\"] = \"product-selection\";\n  ReferenceTypeIdValues[\"ProductTailoring\"] = \"product-tailoring\";\n  ReferenceTypeIdValues[\"ProductType\"] = \"product-type\";\n  ReferenceTypeIdValues[\"Quote\"] = \"quote\";\n  ReferenceTypeIdValues[\"QuoteRequest\"] = \"quote-request\";\n  ReferenceTypeIdValues[\"Review\"] = \"review\";\n  ReferenceTypeIdValues[\"ShippingMethod\"] = \"shipping-method\";\n  ReferenceTypeIdValues[\"ShoppingList\"] = \"shopping-list\";\n  ReferenceTypeIdValues[\"StagedQuote\"] = \"staged-quote\";\n  ReferenceTypeIdValues[\"StandalonePrice\"] = \"standalone-price\";\n  ReferenceTypeIdValues[\"State\"] = \"state\";\n  ReferenceTypeIdValues[\"Store\"] = \"store\";\n  ReferenceTypeIdValues[\"Subscription\"] = \"subscription\";\n  ReferenceTypeIdValues[\"TaxCategory\"] = \"tax-category\";\n  ReferenceTypeIdValues[\"Type\"] = \"type\";\n  ReferenceTypeIdValues[\"Zone\"] = \"zone\";\n  return ReferenceTypeIdValues;\n}({});\n\n/**\n *\tDraft type to create a [Reference](ctp:api:type:Reference) or a [KeyReference](ctp:api:type:KeyReference) to a resource. Provide either the `id` or (wherever supported) the `key` of the resource to reference, but depending on the API endpoint the response returns either a Reference or a KeyReference. For example, the field `parent` of a [CategoryDraft](ctp:api:type:CategoryDraft) takes a ResourceIdentifier for its value while the value of the corresponding field of a [Category](ctp:api:type:Category) is a Reference.\n *\n *\tEach resource type has its corresponding ResourceIdentifier, like [ChannelResourceIdentifier](ctp:api:type:ChannelResourceIdentifier).\n *\n */\n\n/**\n *\tScoped Price is contained in a [ProductVariant](ctp:api:type:ProductVariant) which is returned in response to a\n *\t[Product Projection Search](ctp:api:type:ProductProjectionSearchFilterScopedPrice) request when [Scoped Price Search](/../api/pricing-and-discounts-overview#scoped-price-search) is used.\n *\n */\n\n/**\n *\tBase polymorphic read-only money type that stores currency in cent precision or high precision, that is in sub-cents.\n *\n */\n\n/**\n *\tObject that stores money in cent amounts of a specific currency.\n */\n\n/**\n *\tObject that stores money as a fraction of the smallest indivisible unit of a specific currency.\n */\n\n/**\n *\tBase polymorphic money type containing common fields for [Money](ctp:api:type:Money) and [HighPrecisionMoneyDraft](ctp:api:type:HighPrecisionMoneyDraft).\n *\n *\t- To set money in cent precision, use [Money](ctp:api:type:Money).\n *\t- To set money in high precision, use [HighPrecisionMoneyDraft](ctp:api:type:HighPrecisionMoneyDraft).\n *\n */\n\n/**\n *\tThis draft type is the alternative to [Money](ctp:api:type:Money).\n *\n */\n\n/**\n *\tDraft object to store money as a fraction of the smallest indivisible unit for a specific currency.\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\nlet AnonymousCartSignInModeValues = /*#__PURE__*/function (AnonymousCartSignInModeValues) {\n  AnonymousCartSignInModeValues[\"MergeWithExistingCustomerCart\"] = \"MergeWithExistingCustomerCart\";\n  AnonymousCartSignInModeValues[\"UseAsNewActiveCustomerCart\"] = \"UseAsNewActiveCustomerCart\";\n  return AnonymousCartSignInModeValues;\n}({});\nlet AuthenticationModeValues = /*#__PURE__*/function (AuthenticationModeValues) {\n  AuthenticationModeValues[\"ExternalAuth\"] = \"ExternalAuth\";\n  AuthenticationModeValues[\"Password\"] = \"Password\";\n  return AuthenticationModeValues;\n}({});\n\n/**\n *\tIf `stores` is not empty, the Customer is specific to those Stores.\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [CustomerToken](ctp:api:type:CustomerToken) for email verification.\n *\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [Customer](ctp:api:type:Customer).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [CustomerToken](ctp:api:type:CustomerToken) for password reset.\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [Customer](ctp:api:type:Customer).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Customer](ctp:api:type:Customer). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tAdding an address to the Customer produces the [CustomerAddressAdded](ctp:api:type:CustomerAddressAddedMessage) Message.\n *\n */\n\n/**\n *\tAdds an Address from the `addresses` array to `billingAddressIds`. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tAssigns a Customer Group to a Customer. This action generates the [CustomerGroupAssignmentAdded](ctp:api:type:CustomerGroupAssignmentAddedMessage) Message.\n *\n */\n\n/**\n *\tAdds an Address from the `addresses` array to `shippingAddressIds`. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tAssociates the Customer with a Store.\n *\n */\n\n/**\n *\tChanging an address of the Customer produces the [CustomerAddressChanged](ctp:api:type:CustomerAddressChangedMessage) Message.\n *\n *\tEither `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tChanges the `email` of the Customer and sets the `isEmailVerified` property to `false`. This update action generates a [CustomerEmailChanged](ctp:api:type:CustomerEmailChangedMessage) Message.\n *\n */\n\n/**\n *\tRemoving an address from the Customer produces the [CustomerAddressRemoved](ctp:api:type:CustomerAddressRemovedMessage) Message.\n *\n *\tEither `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tRemoves a billing address from `billingAddressesIds`.\n *\tIf the billing address is the default billing address, the `defaultBillingAddressId` is unset. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tUnassigns a Customer Group from a Customer. This action generates the [CustomerGroupAssignmentRemoved](ctp:api:type:CustomerGroupAssignmentRemovedMessage) Message.\n *\n */\n\n/**\n *\tRemoves a shipping address from `shippingAddressesIds`.\n *\tIf the shipping address is the default shipping address, the `defaultShippingAddressId` is unset. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tRemoves the association to a Store from the Customer.\n *\tIf no more Stores are assigned, the Customer becomes a [global Customer](/../api/customers-overview#global-versus-store-specific-customers).\n *\n */\n\n/**\n *\tAdding a Custom Field to an Address of a Customer generates the [CustomerAddressCustomFieldAdded](ctp:api:type:CustomerAddressCustomFieldAddedMessage) Message, removing one generates the [CustomerAddressCustomFieldRemoved](ctp:api:type:CustomerAddressCustomFieldRemovedMessage) Message, and updating an existing one generates the [CustomerAddressCustomFieldChanged](ctp:api:type:CustomerAddressCustomFieldChangedMessage) Message.\n *\n */\n\n/**\n *\tAdding or updating a Custom Type on an Address of a Customer generates the [CustomerAddressCustomTypeSet](ctp:api:type:CustomerAddressCustomTypeSetMessage) Message, and removing one generates the [CustomerAddressCustomTypeRemoved](ctp:api:type:CustomerAddressCustomTypeRemovedMessage) Message.\n *\n */\n\n/**\n *\tSetting a company name produces the [CustomerCompanyNameSet](ctp:api:type:CustomerCompanyNameSetMessage) Message.\n *\n */\n\n/**\n *\tAdding a Custom Field to a Customer generates the [CustomerCustomFieldAdded](ctp:api:type:CustomerCustomFieldAddedMessage) Message, removing one generates the [CustomerCustomFieldRemoved](ctp:api:type:CustomerCustomFieldRemovedMessage) Message, and updating an existing one generates the [CustomerCustomFieldChanged](ctp:api:type:CustomerCustomFieldChangedMessage) Message.\n *\n */\n\n/**\n *\tAdding or updating a Custom Type on a Customer generates the [CustomerCustomTypeSet](ctp:api:type:CustomerCustomTypeSetMessage) Message, removing one generates the [CustomerCustomTypeRemoved](ctp:api:type:CustomerCustomTypeRemovedMessage) Message.\n *\n */\n\n/**\n *\tSetting the Customer Group of the Customer produces the [CustomerGroupSet](ctp:api:type:CustomerGroupSetMessage) Message.\n *\n *\tTo reflect the new Customer Group, this update action can result in [updates](/api/carts-orders-overview#cart-updates) to the most recently modified active Cart. When this occurs, the following errors can be returned: [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError) and [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError).\n *\n */\n\n/**\n *\tAssigns multiple Customer Groups to a Customer. This action generates the [CustomerGroupAssignmentsSetMessage](ctp:api:type:CustomerGroupAssignmentsSetMessage) Message.\n *\n */\n\n/**\n *\tSets a new ID that can be used to refer to a Customer in a human-reabable way (for use in emails, invoices, etc).\n *\n */\n\n/**\n *\tSetting the date of birth of the Customer produces the [CustomerDateOfBirthSet](ctp:api:type:CustomerDateOfBirthSetMessage) Message.\n *\n */\n\n/**\n *\tSets the default billing address from `addresses`.\n *\tThe action adds the `id` of the specified Address to the `billingAddressIds` if not contained already. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tSets the default shipping address from `addresses`.\n *\tThe action adds the `id` of the specified address to the `shippingAddressIds` if not contained already. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tSetting the first name of the Customer produces the [CustomerFirstNameSet](ctp:api:type:CustomerFirstNameSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the last name of the Customer produces the [CustomerLastNameSet](ctp:api:type:CustomerLastNameSetMessage) Message.\n *\n */\n\n/**\n *\tSets the Stores the Customer account is associated with.\n *\tIf no Stores are specified, the Customer becomes a [global Customer](/../api/customers-overview#global-versus-store-specific-customers).\n *\n */\n\n/**\n *\tSetting the title of the Customer produces the [CustomerTitleSet](ctp:api:type:CustomerTitleSetMessage) Message.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tAn Extension gets called during any of the following requests of an API call, but before the result is persisted.\n *\n */\nlet ExtensionActionValues = /*#__PURE__*/function (ExtensionActionValues) {\n  ExtensionActionValues[\"Create\"] = \"Create\";\n  ExtensionActionValues[\"Update\"] = \"Update\";\n  return ExtensionActionValues;\n}({});\n\n/**\n *\tGeneric type for destinations.\n */\n\n/**\n *\tWe recommend creating an Identify and Access Management (IAM) user with an `accessKey` and `accessSecret` pair, specifically for each Extension that only has the `lambda:InvokeFunction` permission on this function.\n *\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [Extension](ctp:api:type:Extension).\n *\n */\n\n/**\n *\tExtensions are available for:\n *\n */\nlet ExtensionResourceTypeIdValues = /*#__PURE__*/function (ExtensionResourceTypeIdValues) {\n  ExtensionResourceTypeIdValues[\"BusinessUnit\"] = \"business-unit\";\n  ExtensionResourceTypeIdValues[\"Cart\"] = \"cart\";\n  ExtensionResourceTypeIdValues[\"Customer\"] = \"customer\";\n  ExtensionResourceTypeIdValues[\"CustomerGroup\"] = \"customer-group\";\n  ExtensionResourceTypeIdValues[\"Order\"] = \"order\";\n  ExtensionResourceTypeIdValues[\"Payment\"] = \"payment\";\n  ExtensionResourceTypeIdValues[\"Quote\"] = \"quote\";\n  ExtensionResourceTypeIdValues[\"QuoteRequest\"] = \"quote-request\";\n  ExtensionResourceTypeIdValues[\"ShoppingList\"] = \"shopping-list\";\n  ExtensionResourceTypeIdValues[\"StagedQuote\"] = \"staged-quote\";\n  return ExtensionResourceTypeIdValues;\n}({});\n\n/**\n *\tFor GoogleCloudFunction destinations, you need to grant permissions to the `extensions@commercetools-platform.iam.gserviceaccount.com` service account to invoke your function. If your function's version is 1st gen, grant the service account the IAM role `Cloud Functions Invoker`. For version 2nd gen, assign the IAM role `Cloud Run Invoker` using the Cloud Run console.\n *\n */\n\n/**\n *\tWe recommend an encrypted `HTTPS` connection for production setups. However, we also accept unencrypted `HTTP` connections for development purposes. HTTP redirects will not be followed and cache headers will be ignored.\n *\n */\n\n/**\n *\tThe `Authorization` header will be set to the content of `headerValue`. The authentication scheme (such as `Basic` or `Bearer`) should be included in the `headerValue`.\n *\n *\tFor example, the `headerValue` for [Basic Authentication](https://datatracker.ietf.org/doc/html/rfc7617) should be set to `Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==`.\n *\n */\n\n/**\n *\tTo protect your Azure Function, set its `authLevel` to `function` and provide the function's key to be used inside the `x-functions-key` header. For more information, see the [Azure Functions documentation](https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-http-webhook#keys).\n *\n *\tTo protect the secret key from being exposed, remove the code parameter and secret key from the URL. For example, use `https://foo.azurewebsites.net/api/bar` instead of\n *\t`https://foo.azurewebsites.net/api/bar?code=secret`.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tThe `customerId` is determined by a [password flow token](/../api/authorization#password-flow) and\n *\tautomatically set on the resulting [Cart](ctp:api:type:Cart).\n *\tThe `anonymousId` is determined by a [token for an anonymous session](ctp:api:type:AnonymousSession) and\n *\tautomatically set on the resulting [Cart](ctp:api:type:Cart).\n *\n */\n\n/**\n *\tDraft type to represent the top level of a business.\n *\tContains the fields and values of the generic [MyBusinessUnitDraft](ctp:api:type:BusinessUnitDraft) that are used specifically for creating a [Company](ctp:api:type:Company).\n *\n */\n\n/**\n *\tDraft type to model divisions that are part of the [Company](ctp:api:type:Company) or a higher-order [Division](ctp:api:type:Division).\n *\tContains the fields and values of the generic [MyBusinessUnitDraft](ctp:api:type:MyBusinessUnitDraft) that are used specifically for creating a Division.\n *\n */\n\n/**\n *\tFor Product Variant identification, either the `productId` and `variantId`, or `sku` must be provided.\n *\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [MyPayment](ctp:api:type:MyPayment).\n *\n */\n\n/**\n *\t[QuoteStates](ctp:api:type:QuoteState) that can be set using the [Change My Quote State](ctp:api:type:MyQuoteChangeMyQuoteStateAction) update action.\n *\n */\nlet MyQuoteStateValues = /*#__PURE__*/function (MyQuoteStateValues) {\n  MyQuoteStateValues[\"Accepted\"] = \"Accepted\";\n  MyQuoteStateValues[\"Declined\"] = \"Declined\";\n  return MyQuoteStateValues;\n}({});\n\n/**\n *\tA [MyShoppingListDraft](ctp:api:type:MyShoppingListDraft) is the object submitted as payload to the [Create MyShoppingList request](ctp:api:endpoint:/{projectKey}/me/shopping-lists:POST).\n *\tThe `customer` field of [ShoppingList](ctp:api:type:ShoppingList) is automatically set with\n *\ta [password flow token](/authorization#password-flow).\n *\tThe `anonymousId` is automatically set with a [token for an anonymous session](/authorization#tokens-for-anonymous-sessions).\n *\tThe `key` and `slug` fields can not be set.\n *\n */\n\n/**\n *\tAdding an address to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitAddressAdded](ctp:api:type:BusinessUnitAddressAddedMessage) Message.\n *\n */\n\n/**\n *\tAdding a billing address to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitBillingAddressAdded](ctp:api:type:BusinessUnitBillingAddressAddedMessage) Message.\n *\n */\n\n/**\n *\tAdding a shipping address to a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitShippingAddressAdded](ctp:api:type:BusinessUnitShippingAddressAddedMessage) Message.\n *\n */\n\n/**\n *\tChanging the address on a Business Unit generates the [BusinessUnitAddressChanged](ctp:api:type:BusinessUnitAddressChangedMessage) Message.\n *\n */\n\n/**\n *\tUpdating the [Associate](ctp:api:type:Associate) on a [Business Unit](ctp:api:type:BusinessUnit) generates the [BusinessUnitAssociateChanged](ctp:api:type:BusinessUnitAssociateChangedMessage) Message.\n *\n */\n\n/**\n *\tUpdating the name on a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitNameChanged](ctp:api:type:BusinessUnitNameChangedMessage) Message.\n *\n */\n\n/**\n *\tChanging the parent of a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitParentChanged](ctp:api:type:BusinessUnitParentChangedMessage) Message.\n *\n */\n\n/**\n *\tRemoving the address from a [Business Unit](ctp:api:type:BusinessUnit) generates the [BusinessUnitAddressRemoved](ctp:api:type:BusinessUnitAddressRemovedMessage) Message.\n *\n */\n\n/**\n *\tRemoving an [Associate](ctp:api:type:Associate) from a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitAssociateRemoved](ctp:api:type:BusinessUnitAssociateRemovedMessage) Message.\n *\n */\n\n/**\n *\tRemoving a billing address from a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitBillingAddressRemoved](ctp:api:type:BusinessUnitBillingAddressRemovedMessage) Message.\n *\n */\n\n/**\n *\tRemoving a shipping address from a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitShippingAddressRemoved](ctp:api:type:BusinessUnitShippingAddressRemovedMessage) Message.\n *\n */\n\n/**\n *\tAdding a Custom Field to an Address of a Business Unit generates the [BusinessUnitAddressCustomFieldAdded](ctp:api:type:BusinessUnitAddressCustomFieldAddedMessage) Message, removing one generates the [BusinessUnitAddressCustomFieldRemoved](ctp:api:type:BusinessUnitAddressCustomFieldRemovedMessage) Message, and updating an existing one generates the [BusinessUnitAddressCustomFieldChanged](ctp:api:type:BusinessUnitAddressCustomFieldChangedMessage) Message.\n *\n */\n\n/**\n *\tAdding or updating a Custom Type to an Address of a Business Unit generates the [BusinessUnitAddressCustomTypeSet](ctp:api:type:BusinessUnitAddressCustomTypeSetMessage) Message, and removing one generates the [BusinessUnitAddressCustomTypeRemoved](ctp:api:type:BusinessUnitAddressCustomTypeRemovedMessage) Message.\n *\n */\n\n/**\n *\tSetting the contact email on a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitContactEmailSet](ctp:api:type:BusinessUnitContactEmailSetMessage) Message.\n *\n */\n\n/**\n *\tAdding a Custom Field to a Business Unit generates the [BusinessUnitCustomFieldAdded](ctp:api:type:BusinessUnitCustomFieldAddedMessage) Message, removing one generates the [BusinessUnitCustomFieldRemoved](ctp:api:type:BusinessUnitCustomFieldRemovedMessage) Message, and updating an existing one generates the [BusinessUnitCustomFieldChanged](ctp:api:type:BusinessUnitCustomFieldChangedMessage) Message.\n *\n */\n\n/**\n *\tAdding or updating a Custom Type on a Business Unit generates the [BusinessUnitCustomTypeSet](ctp:api:type:BusinessUnitCustomTypeSetMessage) Message, removing one generates the [BusinessUnitCustomTypeRemoved](ctp:api:type:BusinessUnitCustomTypeRemovedMessage) Message.\n *\n */\n\n/**\n *\tSetting the default billing address on a [Business Unit](ctp:api:type:BusinessUnit) generates the [BusinessUnitDefaultBillingAddressSet](ctp:api:type:BusinessUnitDefaultBillingAddressSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the default shipping address on a [Business Unit](ctp:api:type:BusinessUnit) generates a [BusinessUnitDefaultShippingAddressSet](ctp:api:type:BusinessUnitDefaultShippingAddressSetMessage) Message.\n *\n */\n\n/**\n *\tAdds a [DiscountCode](ctp:api:type:DiscountCode) to the Cart to activate the related [CartDiscounts](/../api/projects/cartDiscounts).\n *\tAdding a Discount Code is only possible if no [DirectDiscount](ctp:api:type:DirectDiscount) has been applied to the Cart.\n *\tDiscount Codes can be added to [frozen Carts](ctp:api:type:FrozenCarts), but their [DiscountCodeState](ctp:api:type:DiscountCodeState) is then `DoesNotMatchCart`.\n *\n *\tThe maximum number of Discount Codes in a Cart is restricted by a [limit](/../api/limits#carts).\n *\n *\tSpecific Error Code: [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError)\n *\n */\n\n/**\n *\tAdds an address to a Cart when shipping to multiple addresses is desired.\n *\n */\n\n/**\n *\tIf the Cart contains a [LineItem](ctp:api:type:LineItem) for a Product Variant with the same [LineItemMode](ctp:api:type:LineItemMode), [Custom Fields](/../api/projects/custom-fields), supply and distribution channel, then only the quantity of the existing Line Item is increased.\n *\tIf [LineItem](ctp:api:type:LineItem) `shippingDetails` is set, it is merged. All addresses will be present afterwards and, for address keys present in both shipping details, the quantity will be summed up.\n *\tThe [LineItem](ctp:api:type:LineItem) price is set as described in [Line Item price selection](/../api/pricing-and-discounts-overview#line-item-price-selection).\n *\n *\tIf the Tax Rate is not set, a [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError) error is returned.\n *\n *\tIf the Line Items do not have a Price according to the [Product](ctp:api:type:Product) `priceMode` value for a selected currency and/or country, Customer Group, or Channel, a [MatchingPriceNotFound](ctp:api:type:MatchingPriceNotFoundError) error is returned.\n *\n */\n\n/**\n *\tTo override the shipping details, see [Set LineItem ShippingDetails](ctp:api:type:MyCartSetLineItemShippingDetailsAction).\n *\n */\n\n/**\n *\tWhen multiple shipping addresses are set for a Line Item,\n *\tuse the [Remove LineItem](ctp:api:type:CartRemoveLineItemAction) and [Add LineItem](ctp:api:type:CartAddLineItemAction) update action\n *\tto change the shipping details.\n *\tSince it is not possible for the API to infer how the overall change in the Line Item quantity should be distributed over the sub-quantities,\n *\tthe `shippingDetails` field is kept in its current state to avoid data loss.\n *\n *\tTo change the Line Item quantity and shipping details together,\n *\tuse this update action in combination with the [Set LineItem ShippingDetails](ctp:api:type:CartSetLineItemShippingDetailsAction) update action\n *\tin a single Cart update command.\n *\n *\tWhen the action applies to [LineItems](ctp:api:type:LineItem) with `ExternalTotal` [LineItemPriceMode](ctp:api:type:LineItemPriceMode),\n *\tit will be changed to `ExternalPrice` and the existing `externalPrice` value, i.e. `LineItem.price`, will be retained.\n *\tThe LineItem total will be calculated by the system instead, so that the `externalTotalPrice` will be dropped.\n *\n */\n\n/**\n *\t- When `External` [TaxMode](ctp:api:type:TaxMode) is changed to `Platform` or `Disabled`, all previously set external Tax Rates are removed.\n *\t- When set to `Platform`, Line Items, Custom Line Items, and Shipping Method require a Tax Category with a Tax Rate for the Cart's `shippingAddress`.\n *\n */\n\n/**\n *\tThis update action does not set any Cart field in particular, but it triggers several [Cart updates](/../api/carts-orders-overview#cart-updates)\n *\tto bring prices and discounts to the latest state. Those can become stale over time when no Cart updates have been performed for a while and\n *\tprices on related Products have changed in the meanwhile.\n *\n *\tIf the `priceMode` of the [Product](ctp:api:type:Product) related to a Line Item is of `Embedded` [ProductPriceMode](ctp:api:type:ProductPriceModeEnum),\n *\tthe updated `price` of that [LineItem](ctp:api:type:LineItem) may not correspond to a Price in the `variant.prices` anymore.\n *\n */\n\n/**\n *\tAn address can only be removed if it is not referenced in any [ItemShippingTarget](ctp:api:type:ItemShippingTarget) of the Cart.\n *\n */\n\n/**\n *\tThe [LineItem](ctp:api:type:LineItem) price is updated as described in [Line Item price selection](/../api/pricing-and-discounts-overview#line-item-price-selection).\n *\n */\n\n/**\n *\tUpdates the Business Unit on the Cart. The Cart must have an existing Business Unit assigned already.\n *\n */\n\n/**\n *\tSetting the country can lead to changes in the [LineItem](ctp:api:type:LineItem) prices.\n *\n */\n\n/**\n *\tNumber of days after which a Cart with `Active` [CartState](ctp:api:type:CartState) is deleted since its last modification.\n *\n *\tIf a [ChangeSubscription](ctp:api:type:ChangeSubscription) exists for Carts, a [ResourceDeletedDeliveryPayload](ctp:api:type:ResourceDeletedDeliveryPayload) is sent.\n *\n */\n\n/**\n *\tSetting a distribution channel for a [LineItem](ctp:api:type:LineItem) can lead to an updated `price` as described in [Line Item price selection](/../api/pricing-and-discounts-overview#line-item-price-selection).\n *\n */\n\n/**\n *\tPerforming this action has no impact on inventory that should be reserved.\n *\n */\n\n/**\n *\tSetting the shipping address also sets the [TaxRate](ctp:api:type:TaxRate) of Line Items and calculates the [TaxedPrice](ctp:api:type:TaxedPrice).\n *\n *\tIf a matching price cannot be found for the given shipping address during [Line Item price selection](/../api/pricing-and-discounts-overview#line-item-price-selection),\n *\ta [MissingTaxRateForCountry](ctp:api:type:MissingTaxRateForCountryError) error is returned.\n *\n *\tIf you want to allow shipping to states inside a country that are not explicitly covered by a TaxRate,\n *\tset the `countryTaxRateFallbackEnabled` field to `true` in the [CartsConfiguration](ctp:api:type:CartsConfiguration) by using\n *\tthe [Change CountryTaxRateFallbackEnabled](ctp:api:type:ProjectChangeCountryTaxRateFallbackEnabledAction) update action.\n *\n */\n\n/**\n *\tTo set the Cart's Shipping Method the Cart must have the `Single` [ShippingMode](ctp:api:type:ShippingMode) and a `shippingAddress`.\n *\n */\n\n/**\n *\tUpdates an address in `itemShippingAddresses` by keeping the Address `key`.\n *\n */\n\n/**\n *\tAdding an address to the Customer produces the [CustomerAddressAdded](ctp:api:type:CustomerAddressAddedMessage) Message.\n *\n */\n\n/**\n *\tAdds an address from the `addresses` array to `billingAddressIds`. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tAdds an address from the `addresses` array to `shippingAddressIds`. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tChanging an address of the Customer produces the [CustomerAddressChanged](ctp:api:type:CustomerAddressChangedMessage) Message.\n *\n *\tEither `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tChanging the email of the Customer produces the [CustomerEmailChanged](ctp:api:type:CustomerEmailChangedMessage) Message.\n *\n */\n\n/**\n *\tRemoving an address of the Customer produces the [CustomerAddressRemoved](ctp:api:type:CustomerAddressRemovedMessage) Message.\n *\n *\tEither `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tRemoves an existing billing address from `billingAddressesIds`.\n *\tIf the billing address is the default billing address, the `defaultBillingAddressId` is unset. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tRemoves an existing shipping address from `shippingAddressesIds`.\n *\tIf the shipping address is the default shipping address, the `defaultShippingAddressId` is unset. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tSetting the `companyName` field on the Customer produces the [CustomerCompanyNameSet](ctp:api:type:CustomerCompanyNameSetMessage) Message.\n *\n */\n\n/**\n *\tAdding a Custom Field to a Customer generates the [CustomerCustomFieldAdded](ctp:api:type:CustomerCustomFieldAddedMessage) Message, removing one generates the [CustomerCustomFieldRemoved](ctp:api:type:CustomerCustomFieldRemovedMessage) Message, and updating an existing one generates the [CustomerCustomFieldChanged](ctp:api:type:CustomerCustomFieldChangedMessage) Message.\n *\n */\n\n/**\n *\tAdding or updating a Custom Type on a Customer generates the [CustomerCustomTypeSet](ctp:api:type:CustomerCustomTypeSetMessage) Message, removing one generates the [CustomerCustomTypeRemoved](ctp:api:type:CustomerCustomTypeRemovedMessage) Message.\n *\n */\n\n/**\n *\tSetting the date of birth of the Customer produces the [CustomerDateOfBirthSet](ctp:api:type:CustomerDateOfBirthSetMessage) Message.\n *\n */\n\n/**\n *\tSets the default billing address from `addresses`.\n *\tIf the address is not currently a billing address, it is added to `billingAddressIds`. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tSets the default shipping address from `addresses`.\n *\tIf the address is not currently a shipping address, it is added to `shippingAddressIds`. Either `addressId` or `addressKey` is required.\n *\n */\n\n/**\n *\tSetting the first name of the Customer produces the [CustomerFirstNameSet](ctp:api:type:CustomerFirstNameSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the last name of the Customer produces the [CustomerLastNameSet](ctp:api:type:CustomerLastNameSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the title of the Customer produces the [CustomerTitleSetMessage](ctp:api:type:CustomerTitleSetMessage).\n *\n */\n\n/**\n *\tAdding a Transaction to a Payment generates the [PaymentTransactionAdded](ctp:api:type:PaymentTransactionAddedMessage) Message.\n *\tOnce a Transaction is added to the Payment, it can no longer be updated or deleted using the My Payments API.\n *\n */\n\n/**\n *\tCan be used to update the Payment if a customer changes the [Cart](ctp:api:type:Cart), or adds or removes a [CartDiscount](ctp:api:type:CartDiscount) during checkout.\n *\n */\n\n/**\n *\tWhen accepting, declining, or renegotiating [B2B Quotes](/../api/associates-overview#b2b-resources), the Customer must have the `AcceptMyQuotes`, `DeclineMyQuotes`, or `RenegotiateMyQuotes` [Permission](ctp:api:type:Permission), respectively. If the required [Permission](/projects/associate-roles#permission) is missing, an [AssociateMissingPermission](/errors#associatemissingpermission) error is returned.\n */\n\n/**\n *\tTransitions the `quoteRequestState` of the Quote Request to `Cancelled`. Can only be used when the Quote Request is in state `Submitted`.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tPossible values for the `customType` property on [simple expressions](/../api/projects/order-search#simple-expressions) indicating the data type of the `field`.\n */\nlet OrderSearchCustomTypeValues = /*#__PURE__*/function (OrderSearchCustomTypeValues) {\n  OrderSearchCustomTypeValues[\"BooleanType\"] = \"BooleanType\";\n  OrderSearchCustomTypeValues[\"DateTimeType\"] = \"DateTimeType\";\n  OrderSearchCustomTypeValues[\"DateType\"] = \"DateType\";\n  OrderSearchCustomTypeValues[\"EnumType\"] = \"EnumType\";\n  OrderSearchCustomTypeValues[\"LocalizedEnumType\"] = \"LocalizedEnumType\";\n  OrderSearchCustomTypeValues[\"LocalizedStringType\"] = \"LocalizedStringType\";\n  OrderSearchCustomTypeValues[\"NumberType\"] = \"NumberType\";\n  OrderSearchCustomTypeValues[\"SetTypeDateTimeType\"] = \"SetType.DateTimeType\";\n  OrderSearchCustomTypeValues[\"SetTypeDateType\"] = \"SetType.DateType\";\n  OrderSearchCustomTypeValues[\"SetTypeEnumType\"] = \"SetType.EnumType\";\n  OrderSearchCustomTypeValues[\"SetTypeLocalizedEnumType\"] = \"SetType.LocalizedEnumType\";\n  OrderSearchCustomTypeValues[\"SetTypeLocalizedStringType\"] = \"SetType.LocalizedStringType\";\n  OrderSearchCustomTypeValues[\"SetTypeNumberType\"] = \"SetType.NumberType\";\n  OrderSearchCustomTypeValues[\"SetTypeStringType\"] = \"SetType.StringType\";\n  OrderSearchCustomTypeValues[\"SetTypeTimeType\"] = \"SetType.TimeType\";\n  OrderSearchCustomTypeValues[\"StringType\"] = \"StringType\";\n  OrderSearchCustomTypeValues[\"TimeType\"] = \"TimeType\";\n  return OrderSearchCustomTypeValues;\n}({});\nlet OrderSearchMatchTypeValues = /*#__PURE__*/function (OrderSearchMatchTypeValues) {\n  OrderSearchMatchTypeValues[\"All\"] = \"all\";\n  OrderSearchMatchTypeValues[\"Any\"] = \"any\";\n  return OrderSearchMatchTypeValues;\n}({});\nlet OrderSearchSortModeValues = /*#__PURE__*/function (OrderSearchSortModeValues) {\n  OrderSearchSortModeValues[\"Avg\"] = \"avg\";\n  OrderSearchSortModeValues[\"Max\"] = \"max\";\n  OrderSearchSortModeValues[\"Min\"] = \"min\";\n  OrderSearchSortModeValues[\"Sum\"] = \"sum\";\n  return OrderSearchSortModeValues;\n}({});\nlet OrderSearchSortOrderValues = /*#__PURE__*/function (OrderSearchSortOrderValues) {\n  OrderSearchSortOrderValues[\"Asc\"] = \"asc\";\n  OrderSearchSortOrderValues[\"Desc\"] = \"desc\";\n  return OrderSearchSortOrderValues;\n}({});\n\n/**\n *\tCustom Line Items contain generic user-defined items that are not linked to Products.\n *\n */\n\n/**\n *\tContains information on how items are shipped to Customers, for example, a delivery note.\n *\n */\n\n/**\n *\tRepresents a snapshot of a Product Variant at the time it was imported with the Order. The Product Variant can be specified by providing a `productId` and `variant.id`, or by providing a `variant.sku`.\n *\n */\n\n/**\n *\tA snapshot of an Order at the time it was imported.\n *\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [Order](ctp:api:type:Order).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to an [Order](ctp:api:type:Order).\n *\n */\n\n/**\n *\tIndicates the state of the Order.\n *\n */\nlet OrderStateValues = /*#__PURE__*/function (OrderStateValues) {\n  OrderStateValues[\"Cancelled\"] = \"Cancelled\";\n  OrderStateValues[\"Complete\"] = \"Complete\";\n  OrderStateValues[\"Confirmed\"] = \"Confirmed\";\n  OrderStateValues[\"Open\"] = \"Open\";\n  return OrderStateValues;\n}({});\n\n/**\n *\tInformation regarding the appearance, content, and shipment of a Parcel.\n *\n */\n\n/**\n *\tIndicates the payment status for the Order.\n *\n */\nlet PaymentStateValues = /*#__PURE__*/function (PaymentStateValues) {\n  PaymentStateValues[\"BalanceDue\"] = \"BalanceDue\";\n  PaymentStateValues[\"CreditOwed\"] = \"CreditOwed\";\n  PaymentStateValues[\"Failed\"] = \"Failed\";\n  PaymentStateValues[\"Paid\"] = \"Paid\";\n  PaymentStateValues[\"Pending\"] = \"Pending\";\n  return PaymentStateValues;\n}({});\n\n/**\n *\tContains the Product Variant to be used in the [LineItemImportDraft](ctp:api:type:LineItemImportDraft).\n *\n */\n\n/**\n *\tStores information about returns connected to an Order.\n *\n */\n\nlet ReturnPaymentStateValues = /*#__PURE__*/function (ReturnPaymentStateValues) {\n  ReturnPaymentStateValues[\"Initial\"] = \"Initial\";\n  ReturnPaymentStateValues[\"NonRefundable\"] = \"NonRefundable\";\n  ReturnPaymentStateValues[\"NotRefunded\"] = \"NotRefunded\";\n  ReturnPaymentStateValues[\"Refunded\"] = \"Refunded\";\n  return ReturnPaymentStateValues;\n}({});\nlet ReturnShipmentStateValues = /*#__PURE__*/function (ReturnShipmentStateValues) {\n  ReturnShipmentStateValues[\"Advised\"] = \"Advised\";\n  ReturnShipmentStateValues[\"BackInStock\"] = \"BackInStock\";\n  ReturnShipmentStateValues[\"Returned\"] = \"Returned\";\n  ReturnShipmentStateValues[\"Unusable\"] = \"Unusable\";\n  return ReturnShipmentStateValues;\n}({});\n/**\n *\tIndicates the shipment status of the Order.\n *\n */\nlet ShipmentStateValues = /*#__PURE__*/function (ShipmentStateValues) {\n  ShipmentStateValues[\"Backorder\"] = \"Backorder\";\n  ShipmentStateValues[\"Canceled\"] = \"Canceled\";\n  ShipmentStateValues[\"Delayed\"] = \"Delayed\";\n  ShipmentStateValues[\"Delivered\"] = \"Delivered\";\n  ShipmentStateValues[\"Partial\"] = \"Partial\";\n  ShipmentStateValues[\"Pending\"] = \"Pending\";\n  ShipmentStateValues[\"Ready\"] = \"Ready\";\n  ShipmentStateValues[\"Shipped\"] = \"Shipped\";\n  return ShipmentStateValues;\n}({});\n\n/**\n *\tBecomes the `shippingInfo` of the imported Order.\n *\n */\n\n/**\n *\tContains synchronization activity information of the Order (like export or import).\n *\n */\n\n/**\n *\tInformation that helps track a Parcel.\n *\n */\n\n/**\n *\tA [Delivery](ctp:api:type:Delivery) can only be added to an [Order](ctp:api:type:Order) if\n *\tits `shippingInfo` (for `shippingMode` = `Single`), or its `shipping` (for `shippingMode` = `Multiple`) exists.\n *\n *\tProduces the [Delivery Added](ctp:api:type:DeliveryAddedMessage) Message.\n *\n */\n\n/**\n *\tAdds an address to an Order when shipping to multiple addresses is desired.\n *\n */\n\n/**\n *\tTo add a Parcel, at least one [Delivery](ctp:api:type:Delivery) must exist.\n *\n *\tProduces the [Parcel Added To Delivery](ctp:api:type:ParcelAddedToDeliveryMessage) Message.\n *\n */\n\n/**\n *\tProduces the [Return Info Added](ctp:api:type:ReturnInfoAddedMessage) Message.\n *\n */\n\n/**\n *\tProduces the [Order State Changed](ctp:api:type:OrderStateChangedMessage) Message.\n *\n */\n\n/**\n *\tProduces the [Order Payment State Changed](ctp:api:type:OrderPaymentStateChangedMessage) Message.\n *\n */\n\n/**\n *\tProduces the [Order Shipment State Changed](ctp:api:type:OrderShipmentStateChangedMessage) Message.\n *\n */\n\n/**\n *\tThe import of States does not follow any predefined rules and should be only used if no transitions are defined.\n *\tThe `quantity` in the [ItemStates](ctp:api:type:ItemState) must match the sum of all Custom Line Item states' quantities.\n *\n */\n\n/**\n *\tThe import of States does not follow any predefined rules and should be only used if no transitions are defined.\n *\tThe `quantity` in the [ItemStates](ctp:api:type:ItemState) must match the sum of all Line Items states' quantities.\n *\n */\n\n/**\n *\tProduces the [DeliveryRemoved](ctp:api:type:DeliveryRemovedMessage) Message.\n *\n */\n\n/**\n *\tAn address can only be removed if it is not referenced in any [ItemShippingTarget](ctp:api:type:ItemShippingTarget) of the Cart.\n *\tIn such case, change the Line Item shipping address to a different `addressKey` first using the [Set LineItemShippingDetails](ctp:api:type:OrderSetLineItemShippingDetailsAction) update action, before you remove the obsolete address.\n *\n */\n\n/**\n *\tProduces the [ParcelRemovedFromDelivery](ctp:api:type:ParcelRemovedFromDeliveryMessage) Message.\n *\n */\n\n/**\n *\tThis action updates the `billingAddress` on the Order, but it does not change the billing address on the referenced [Cart](ctp:api:type:Cart) from which the Order is created.\n *\n *\tProduces the [Order Billing Address Set](ctp:api:type:OrderBillingAddressSetMessage) Message.\n *\n */\n\n/**\n *\tUpdates the Business Unit on the Order. Setting the Order's `businessUnit` does not recalculate prices or discounts on the Order.\n *\n *\tProduces the [OrderBusinessUnitSet](ctp:api:type:OrderBusinessUnitSetMessage) Message.\n *\n */\n\n/**\n *\tThis action updates the `customerEmail` on the Order, but it does not change the Customer email on the [Cart](ctp:api:type:Cart) the Order has been created from.\n *\n *\tProduces the [Order Customer Email Set](ctp:api:type:OrderCustomerEmailSetMessage) Message.\n *\n */\n\n/**\n *\tSetting the Order's `customerId` does not recalculate prices or discounts on the Order.\n *\tIf the Customer belongs to a Customer Group, `customerGroup` on the [Order](ctp:api:type:Order) is updated automatically.\n *\n *\tProduces the [OrderCustomerSet](ctp:api:type:OrderCustomerSetMessage) Message.\n *\n */\n\n/**\n *\tProduces the [DeliveryAddressSet](ctp:api:type:DeliveryAddressSetMessage) Message.\n *\n */\n\n/**\n *\tProduces the [Delivery Items Updated](ctp:api:type:DeliveryItemsUpdatedMessage) Message.\n *\n */\n\n/**\n *\tProduces the [ParcelItemsUpdated](ctp:api:type:ParcelItemsUpdatedMessage) Message.\n *\n */\n\n/**\n *\tProduces the [ParcelMeasurementsUpdated](ctp:api:type:ParcelMeasurementsUpdatedMessage) Message.\n *\n */\n\n/**\n *\tProduces the [ParcelTrackingDataUpdated](ctp:api:type:ParcelTrackingDataUpdatedMessage) Message.\n *\n */\n\n/**\n *\tProduces the [PurchaseOrderNumberSet](ctp:api:type:OrderPurchaseOrderNumberSetMessage) Message.\n *\n */\n\n/**\n *\tProduces the [Return Info Set](ctp:api:type:ReturnInfoSetMessage) Message.\n *\n */\n\n/**\n *\tTo set a [ReturnPaymentState](ctp:api:type:ReturnPaymentState), the [Order](ctp:api:type:Order) `returnInfo` must have at least one [ReturnItem](ctp:api:type:ReturnItem).\n *\n */\n\n/**\n *\tTo set a `ReturnShipmentState`, the [Order](ctp:api:type:Order) `returnInfo` must have at least one [ReturnItem](ctp:api:type:ReturnItem).\n *\n *\tProduces the [Order Return Shipment State Changed](ctp:api:type:OrderReturnShipmentStateChangedMessage) Message.\n *\n */\n\n/**\n *\tThis action updates the `shippingAddress` on the Order, but it does not change the shipping address on the referenced [Cart](ctp:api:type:Cart) from which the Order is created.\n *\tAlso, it does not recalculate the Cart as taxes may not fit to the shipping address anymore.\n *\n *\tProduces the [Order Shipping Address Set](ctp:api:type:OrderShippingAddressSetMessage) Message.\n *\n */\n\n/**\n *\tThis action sets, overwrites, or removes any existing Custom Type and Custom Fields for the Order's `shippingMethod` or `shipping`.\n *\n */\n\n/**\n *\tSets the [Store](ctp:api:type:Store) the Order is assigned to.\n *\tIt should be used to migrate Orders to a new Store.\n *\tNo validations are performed (such as that the Customer is allowed to create Orders in the Store).\n *\n *\tProduces the [Order Store Set](ctp:api:type:OrderStoreSetMessage) Message.\n *\tReturns a `400` error if `store` references the same Store the Order is currently assigned to, including if you try to remove the value when no Store is currently assigned.\n *\n */\n\n/**\n *\tProduces the [Custom Line Item State Transition](ctp:api:type:CustomLineItemStateTransitionMessage) Message.\n *\n */\n\n/**\n *\tProduces the [Line Item State Transition](ctp:api:type:LineItemStateTransitionMessage) Message.\n *\n */\n\n/**\n *\tIf the existing [State](ctp:api:type:State) has set `transitions`, there must be a direct transition to the new State.\n *\tIf `transitions` is not set, no validation is performed.\n *\n *\tThis update action produces the [Order State Transition](ctp:api:type:OrderStateTransitionMessage) Message.\n *\n */\n\n/**\n *\tUpdates an address in `itemShippingAddresses` by keeping the Address `key`.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [Payment](ctp:api:type:Payment).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [Payment](ctp:api:type:Payment).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) of a [Payment](ctp:api:type:Payment). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tRepresents a financial transaction typically created as a result of a notification from the payment service.\n *\n */\n\n/**\n *\tTransactions can be in one of the following States:\n *\n */\nlet TransactionStateValues = /*#__PURE__*/function (TransactionStateValues) {\n  TransactionStateValues[\"Failure\"] = \"Failure\";\n  TransactionStateValues[\"Initial\"] = \"Initial\";\n  TransactionStateValues[\"Pending\"] = \"Pending\";\n  TransactionStateValues[\"Success\"] = \"Success\";\n  return TransactionStateValues;\n}({});\nlet TransactionTypeValues = /*#__PURE__*/function (TransactionTypeValues) {\n  TransactionTypeValues[\"Authorization\"] = \"Authorization\";\n  TransactionTypeValues[\"CancelAuthorization\"] = \"CancelAuthorization\";\n  TransactionTypeValues[\"Charge\"] = \"Charge\";\n  TransactionTypeValues[\"Chargeback\"] = \"Chargeback\";\n  TransactionTypeValues[\"Refund\"] = \"Refund\";\n  return TransactionTypeValues;\n}({});\n\n/**\n *\tAdding a Payment interaction generates the [PaymentInteractionAdded](ctp:api:type:PaymentInteractionAddedMessage) Message.\n *\n */\n\n/**\n *\tAdding a Transaction to a Payment generates the [PaymentTransactionAdded](ctp:api:type:PaymentTransactionAddedMessage) Message.\n *\n */\n\n/**\n *\tCan be used to update the Payment if a customer changes the [Cart](ctp:api:type:Cart), or adds or removes a [CartDiscount](ctp:api:type:CartDiscount) during checkout.\n *\n */\n\n/**\n *\tChanging the [TransactionState](ctp:api:type:TransactionState) generates the [PaymentTransactionStateChanged](ctp:api:type:PaymentTransactionStateChangedMessage) Message.\n *\n */\n\n/**\n *\tIf the Payment is already associated with a Customer, an [InvalidOperation](ctp:api:type:InvalidOperationError) error is returned.\n *\n */\n\n/**\n *\tProduces the [PaymentStatusInterfaceCodeSet](ctp:api:type:PaymentStatusInterfaceCodeSetMessage) Message.\n */\n\n/**\n *\tIf the Payment has no current [State](ctp:api:type:State), `initial` must be `true` for the new State.\n *\tIf the existing State has transitions set, the new State must be a valid transition.\n *\tIf the existing State has no transitions set, no validations are performed when transitioning to the new State.\n *\n *\tTransitioning the State of a Payment produces the [PaymentStatusStateTransition](ctp:api:type:PaymentStatusStateTransitionMessage) Message.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tJSON object where the key is a [Category](ctp:api:type:Category) `id` and the value is an order hint.\n *\tAllows controlling the order of Products and how they appear in Categories. Products with no order hint have an order score below `0`. Order hints are non-unique.\n *\tIf a subset of Products have the same value for order hint in a specific category, the behavior is undetermined.\n */\n\nlet FacetTypesValues = /*#__PURE__*/function (FacetTypesValues) {\n  FacetTypesValues[\"Filter\"] = \"filter\";\n  FacetTypesValues[\"Range\"] = \"range\";\n  FacetTypesValues[\"Terms\"] = \"terms\";\n  return FacetTypesValues;\n}({});\n\n/**\n *\tAn abstract sellable good with a set of Attributes defined by a Product Type.\n *\tProducts themselves are not sellable. Instead, they act as a parent structure for Product Variants.\n *\tEach Product must have at least one Product Variant, which is called the Master Variant.\n *\tA single Product representation contains the _current_ and the _staged_ representation of its product data.\n *\n */\n\n/**\n *\tContains the `current` and `staged` [ProductData](ctp:api:type:ProductData).\n *\n */\n\n/**\n *\tContains all the data of a Product and its Product Variants.\n *\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [Product](ctp:api:type:Product).\n *\n */\n\n/**\n *\tThis mode determines the type of Prices used for [price selection](/../api/pricing-and-discounts-overview#price-selection) by Line Items and Products.\n *\tFor more information about the difference between the Prices, see [Pricing](/../api/pricing-and-discounts-overview).\n *\n */\nlet ProductPriceModeEnumValues = /*#__PURE__*/function (ProductPriceModeEnumValues) {\n  ProductPriceModeEnumValues[\"Embedded\"] = \"Embedded\";\n  ProductPriceModeEnumValues[\"Standalone\"] = \"Standalone\";\n  return ProductPriceModeEnumValues;\n}({});\n\n/**\n *\tThe response returned to a [Product Projection Search](/../api/projects/products-search#product-projection-search) request.\n *\tThe object contains the [query results](/../api/projects/products-search#query-results) with Product Projections where at least one ProductVariant matches the search query, as well as the [facet results](/../api/projects/products-search#facet-results), if requested.\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [Product](ctp:api:type:Product).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Product](ctp:api:type:Product). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tA concrete sellable good for which inventory can be tracked. Product Variants are generally mapped to specific SKUs.\n *\n */\n\n/**\n *\tThe [InventoryEntry](ctp:api:type:InventoryEntry) information of the Product Variant. If there is a supply [Channel](ctp:api:type:Channel) for the InventoryEntry, then `channels` is returned. If not, then `isOnStock`, `restockableInDays`, and `availableQuantity` are returned.\n *\n */\n\n/**\n *\tJSON object where the key is a supply [Channel](ctp:api:type:Channel) `id` and the value is the [ProductVariantChannelAvailability](ctp:api:type:ProductVariantChannelAvailability) of the [InventoryEntry](ctp:api:type:InventoryEntry).\n *\n */\n\n/**\n *\tCreates a Product Variant when included in the `masterVariant` and `variants` fields of the [ProductDraft](ctp:api:type:ProductDraft).\n *\n */\n\n/**\n *\tSearch keywords are JSON objects primarily used by [Product Suggestions](/projects/products-suggestions), but are also considered for a [full text search](/projects/products-search#full-text-search).\n *\tThe keys are of type [Locale](ctp:api:type:Locale), and the values are an array of [SearchKeyword](ctp:api:type:SearchKeyword).\n *\n */\n\n/**\n *\tDefine arbitrary tokens that are used to match the input.\n *\n */\n\n/**\n *\tData type to which the facet is applied.\n *\n */\nlet TermFacetResultTypeValues = /*#__PURE__*/function (TermFacetResultTypeValues) {\n  TermFacetResultTypeValues[\"Boolean\"] = \"boolean\";\n  TermFacetResultTypeValues[\"Date\"] = \"date\";\n  TermFacetResultTypeValues[\"Datetime\"] = \"datetime\";\n  TermFacetResultTypeValues[\"Number\"] = \"number\";\n  TermFacetResultTypeValues[\"Text\"] = \"text\";\n  TermFacetResultTypeValues[\"Time\"] = \"time\";\n  return TermFacetResultTypeValues;\n}({});\n\n/**\n *\tCreates tokens by splitting the `text` field in [SearchKeyword](ctp:api:type:SearchKeyword) by whitespaces.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required. Produces the [ProductImageAdded](/projects/messages/product-catalog-messages#product-image-added) Message.\n *\n */\n\n/**\n *\tAdds the given Price to the `prices` array of the [ProductVariant](ctp:api:type:ProductVariant).\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tProduces the [ProductAddedToCategory](/projects/messages/product-catalog-messages#product-added-to-category) Message.\n */\n\n/**\n *\tEither `variantId` or `sku` is required. The Asset to update must be specified using either `assetId` or `assetKey`.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tAssigns the specified Product Variant to the `masterVariant` and removes the same from `variants` at the same time. The current Master Variant becomes part of the `variants` array.\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tProduces the [ProductSlugChanged](ctp:api:type:ProductSlugChangedMessage) Message.\n */\n\n/**\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tPublishes product data from the Product's staged projection to its current projection.\n *\tProduces the [ProductPublished](ctp:api:type:ProductPublishedMessage) Message.\n */\n\n/**\n *\tEither `variantId` or `sku` is required. The Asset to remove must be specified using either `assetId` or `assetKey`.\n *\n */\n\n/**\n *\tProduces the [ProductRemovedFromCategory](ctp:api:type:ProductRemovedFromCategoryMessage) Message.\n */\n\n/**\n *\tRemoves a Product image and deletes it from the Content Delivery Network (CDN) if it had been [uploaded to our CDN](/../api/projects/products#upload-product-image).\n *\tExternal images will not be deleted.\n *\tThe API deletes the removed image from the CDN in an [eventual consistent](/../api/general-concepts#eventual-consistency) way.\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tEither `id` or `sku` is required.\n *\tProduces the [ProductVariantDeleted](ctp:api:type:ProductVariantDeletedMessage) Message.\n *\tIf the Product Variant to remove is part of a [ProductSelectionAssignment](ctp:api:type:ProductSelectionAssignment)\n *\tits SKU will be automatically removed from the respective [ProductVariantSelection](ctp:api:type:ProductVariantSelection).\n *\n */\n\n/**\n *\tReverts the staged version of a Product to the current version. Produces the [ProductRevertedStagedChanges](ctp:api:type:ProductRevertedStagedChangesMessage) Message.\n *\n */\n\n/**\n *\tReverts the staged version of a ProductVariant to the current version.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required. The [Asset](ctp:api:type:Asset) to update must be specified using either `assetId` or `assetKey`.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required. The [Asset](ctp:api:type:Asset) to update must be specified using either `assetId` or `assetKey`.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required. The [Asset](ctp:api:type:Asset) to update must be specified using either `assetId` or `assetKey`.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required. The [Asset](ctp:api:type:Asset) to update must be specified using either `assetId` or `assetKey`.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required. The Asset to update must be specified using either `assetId` or `assetKey`.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tAdds, removes, or changes a Product Attribute in all Product Variants at the same time.\n *\tThis action is useful for setting values for Attributes with the [Constraint](ctp:api:type:AttributeConstraintEnum) `SameForAll`.\n */\n\n/**\n *\tProduces the [ProductPriceExternalDiscountSet](ctp:api:type:ProductPriceExternalDiscountSetMessage) Message.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tSets the key of an [Embedded Price](ctp:api:type:Price). Produces the [ProductPriceKeySet](ctp:api:type:ProductPriceKeySetMessage) Message.\n *\n */\n\n/**\n *\tControls whether the Prices of a Product Variant are embedded into the Product or standalone.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tEither `variantId` or `sku` is required.\n *\n */\n\n/**\n *\tSKU cannot be changed or removed if it is associated with an [InventoryEntry](ctp:api:type:InventoryEntry).\n *\tIf the SKU to set or unset is part of a [ProductSelectionAssignment](ctp:api:type:ProductSelectionAssignment)\n *\tit will be automatically added or removed from the respective [ProductVariantSelection](ctp:api:type:ProductVariantSelection).\n *\n */\n\n/**\n *\tCannot be staged. Published Products are immediately updated.\n *\n */\n\n/**\n *\tIf the existing [State](ctp:api:type:State) has set `transitions`, there must be a direct transition to the new State. If `transitions` is not set, no validation is performed. Produces the [ProductStateTransition](ctp:api:type:ProductStateTransitionMessage) Message.\n *\n */\n\n/**\n *\tRemoves the current [projection](/../api/projects/productProjections#current--staged) of the Product. The staged projection is unaffected. To retrieve unpublished Products, the `staged` parameter must be set to `false` when [querying](ctp:api:endpoint:/{projectKey}/product-projections:GET)/[searching](/projects/products-search#product-projection-search) Product Projections. Produces the [ProductUnpublished](ctp:api:type:ProductUnpublishedMessage) Message.\n *\n *\tWhen a Product is unpublished, any associated Line Items already present in a Cart remain unaffected and can still be ordered. To prevent this, do the following:\n *\n *\t- If the Product uses Embedded Prices, [remove the Embedded Prices](ctp:api:type:ProductRemovePriceAction) from the unpublished Product.\n *\t- If the Product uses Standalone Prices, [inactivate](ctp:api:type:StandalonePriceChangeActiveAction) or [delete](/projects/standalone-prices#delete-standaloneprice) the Standalone Prices.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tThe query parameters used for [data integration with Product Projection parameters](/../api/projects/product-search#with-product-projection-parameters).\n *\n */\n\nlet ProductSearchFacetCountLevelEnumValues = /*#__PURE__*/function (ProductSearchFacetCountLevelEnumValues) {\n  ProductSearchFacetCountLevelEnumValues[\"Products\"] = \"products\";\n  ProductSearchFacetCountLevelEnumValues[\"Variants\"] = \"variants\";\n  return ProductSearchFacetCountLevelEnumValues;\n}({});\nlet ProductSearchFacetDistinctBucketSortByValues = /*#__PURE__*/function (ProductSearchFacetDistinctBucketSortByValues) {\n  ProductSearchFacetDistinctBucketSortByValues[\"Count\"] = \"count\";\n  ProductSearchFacetDistinctBucketSortByValues[\"Key\"] = \"key\";\n  return ProductSearchFacetDistinctBucketSortByValues;\n}({});\n\n/**\n *\tValues for `from` and `to` must be a number or [DateTime](ctp:api:type:DateTime).\n */\n\n/**\n *\tResult of a [distinct facet](/../api/projects/product-search#distinct-facets) or a [ranges facet](/../api/projects/product-search#ranges-facets).\n *\n */\n\n/**\n *\tResult of a [count facet](/../api/projects/product-search#count-facets).\n *\n */\n\nlet ProductSearchFacetScopeEnumValues = /*#__PURE__*/function (ProductSearchFacetScopeEnumValues) {\n  ProductSearchFacetScopeEnumValues[\"All\"] = \"all\";\n  ProductSearchFacetScopeEnumValues[\"Query\"] = \"query\";\n  return ProductSearchFacetScopeEnumValues;\n}({});\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/general-concepts#pagedqueryresult) containing an array of [AssignedProductSelection](ctp:api:type:AssignedProductSelection).\n *\n */\n\n/**\n *\n *\tGiven the mode of Product Selection, this assignment refers to, it may contain:\n *\n *\t- `variantSelection` field for a Product Selection with `Individual` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).\n *\t- `variantExclusion` field for a Product Selection with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).\n */\n\n/**\n *\tProduct Selections can have the following modes:\n *\n */\nlet ProductSelectionModeValues = /*#__PURE__*/function (ProductSelectionModeValues) {\n  ProductSelectionModeValues[\"Individual\"] = \"Individual\";\n  ProductSelectionModeValues[\"IndividualExclusion\"] = \"IndividualExclusion\";\n  return ProductSelectionModeValues;\n}({});\n\n/**\n *\t[PagedQueryResult](/general-concepts#pagedqueryresult) containing an array of [ProductSelection](ctp:api:type:ProductSelection).\n *\n */\n\n/**\n *\t[PagedQueryResult](/general-concepts#pagedqueryresult) containing an array of [AssignedProductReference](ctp:api:type:AssignedProductReference).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [ProductSelection](ctp:api:type:ProductSelection).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [ProductSelection](ctp:api:type:ProductSelection). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tOnly Product Variants with the explicitly listed SKUs are part of a Product Selection with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).\n *\n */\n\n/**\n *\tPolymorphic base type for Product Variant Selections. The actual type is determined by the `type` field.\n *\n */\n\n/**\n *\tAll Product Variants except the explicitly stated SKUs are part of the Product Selection.\n *\n */\n\n/**\n *\tOnly Product Variants with explicitly stated SKUs are part of the Product Selection.\n *\n */\n\nlet ProductVariantSelectionTypeEnumValues = /*#__PURE__*/function (ProductVariantSelectionTypeEnumValues) {\n  ProductVariantSelectionTypeEnumValues[\"Exclusion\"] = \"exclusion\";\n  ProductVariantSelectionTypeEnumValues[\"IncludeAllExcept\"] = \"includeAllExcept\";\n  ProductVariantSelectionTypeEnumValues[\"IncludeOnly\"] = \"includeOnly\";\n  ProductVariantSelectionTypeEnumValues[\"Inclusion\"] = \"inclusion\";\n  return ProductVariantSelectionTypeEnumValues;\n}({});\n\n/**\n *\t[PagedQueryResult](/general-concepts#pagedqueryresult) containing an array of [ProductSelectionAssignment](ctp:api:type:ProductSelectionAssignment).\n *\n */\n\n/**\n *\tAdds a Product to the Product Selection.\n *\n *\tIf the specified Product is already assigned to the Product Selection, but the existing Product Selection has a different Product Variant Selection, a [ProductPresentWithDifferentVariantSelection](ctp:api:type:ProductPresentWithDifferentVariantSelectionError) error is returned.\n *\n */\n\n/**\n *\tExcludes a Product from a Product Selection with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).\n *\n *\tIf the specified Product is already assigned to the Product Selection, but the existing Product Selection has a different Product Variant Exclusion, a [ProductPresentWithDifferentVariantSelection](ctp:api:type:ProductPresentWithDifferentVariantSelectionError) error is returned.\n *\n */\n\n/**\n *\tUpdates the Product Variant Exclusion of an existing [Product Selection Assignment](ctp:api:type:ProductSelectionAssignment).\n *\tA [ProductVariantExclusion](ctp:api:type:ProductVariantExclusion) can only be set if the [Product](ctp:api:type:Product) has already been excluded from the [Product Selection](ctp:api:type:ProductSelection) with `IndividualExclusion` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).\n *\n *\tIf the specified Product is not assigned to the Product Selection, a [ProductAssignmentMissing](ctp:api:type:ProductAssignmentMissingError) error is returned.\n *\n */\n\n/**\n *\tUpdates the Product Variant Selection of an existing [Product Selection Assignment](ctp:api:type:ProductSelectionAssignment).\n *\tA [ProductVariantSelection](ctp:api:type:ProductVariantSelection) can only be set if the [Product](ctp:api:type:Product) has already been included in the Product Selection with `Individual` [ProductSelectionMode](ctp:api:type:ProductSelectionMode).\n *\n *\tIf the specified Product is not assigned to the Product Selection, a [ProductAssignmentMissing](ctp:api:type:ProductAssignmentMissingError) error is returned.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tSpecifies how an Attribute (or a set of Attributes) should be validated across all variants of a Product:\n *\n */\nlet AttributeConstraintEnumValues = /*#__PURE__*/function (AttributeConstraintEnumValues) {\n  AttributeConstraintEnumValues[\"CombinationUnique\"] = \"CombinationUnique\";\n  AttributeConstraintEnumValues[\"None\"] = \"None\";\n  AttributeConstraintEnumValues[\"SameForAll\"] = \"SameForAll\";\n  AttributeConstraintEnumValues[\"Unique\"] = \"Unique\";\n  return AttributeConstraintEnumValues;\n}({});\nlet AttributeConstraintEnumDraftValues = /*#__PURE__*/function (AttributeConstraintEnumDraftValues) {\n  AttributeConstraintEnumDraftValues[\"None\"] = \"None\";\n  return AttributeConstraintEnumDraftValues;\n}({});\n\n/**\n *\tDescribes a Product Attribute and allows you to define meta-information associated with the Attribute (like whether it should be searchable, or its constraints).\n *\n */\n\n/**\n *\tSpecify the Attribute to be created with the [ProductTypeDraft](ctp:api:type:ProductTypeDraft).\n *\n */\n\n/**\n *\tA localized enum value must be unique within the enum, else a [DuplicateEnumValues](ctp:api:type:DuplicateEnumValuesError) error is returned.\n *\n */\n\n/**\n *\tA plain enum value must be unique within the enum, else a [DuplicateEnumValues](ctp:api:type:DuplicateEnumValuesError) error is returned.\n *\n */\n\n/**\n *\tName of the resource type that the value should reference. Supported resource type identifiers:\n *\n */\nlet AttributeReferenceTypeIdValues = /*#__PURE__*/function (AttributeReferenceTypeIdValues) {\n  AttributeReferenceTypeIdValues[\"AssociateRole\"] = \"associate-role\";\n  AttributeReferenceTypeIdValues[\"BusinessUnit\"] = \"business-unit\";\n  AttributeReferenceTypeIdValues[\"Cart\"] = \"cart\";\n  AttributeReferenceTypeIdValues[\"CartDiscount\"] = \"cart-discount\";\n  AttributeReferenceTypeIdValues[\"Category\"] = \"category\";\n  AttributeReferenceTypeIdValues[\"Channel\"] = \"channel\";\n  AttributeReferenceTypeIdValues[\"Customer\"] = \"customer\";\n  AttributeReferenceTypeIdValues[\"CustomerGroup\"] = \"customer-group\";\n  AttributeReferenceTypeIdValues[\"KeyValueDocument\"] = \"key-value-document\";\n  AttributeReferenceTypeIdValues[\"Order\"] = \"order\";\n  AttributeReferenceTypeIdValues[\"Product\"] = \"product\";\n  AttributeReferenceTypeIdValues[\"ProductType\"] = \"product-type\";\n  AttributeReferenceTypeIdValues[\"Review\"] = \"review\";\n  AttributeReferenceTypeIdValues[\"ShippingMethod\"] = \"shipping-method\";\n  AttributeReferenceTypeIdValues[\"State\"] = \"state\";\n  AttributeReferenceTypeIdValues[\"Zone\"] = \"zone\";\n  return AttributeReferenceTypeIdValues;\n}({});\n\n/**\n *\tUmbrella type for specific attribute types discriminated by property `name`.\n */\n\n/**\n *\tAttribute type for boolean values. Valid values for the Attribute are `true` and `false`.\n *\n */\n\n/**\n *\tAttribute type for [DateTime](ctp:api:type:DateTime) type values.\n *\n */\n\n/**\n *\tAttribute type for [Date](ctp:api:type:Date) type values.\n *\n */\n\n/**\n *\tAttribute type for plain enum values. Useful for predefined language-agnostic values selectable in drop downs when only one value should be selected. Use [AttributeSetType](ctp:api:type:AttributeSetType) of AttributeEnumType instead if multiple values can be selected from the list.\n *\n */\n\n/**\n *\tAttribute type for [LocalizedString](ctp:api:type:LocalizedString) type values.\n *\n */\n\n/**\n *\tAttribute type for localized enum values. Useful for predefined language-specific values selectable in drop-down menus if only one value can be selected. Use [AttributeSetType](ctp:api:type:AttributeSetType) of AttributeLocalizedEnumValue instead if multiple values can be selected.\n *\n */\n\n/**\n *\tAttribute type for [Money](ctp:api:type:Money) type values.\n *\n */\n\n/**\n *\tAttribute type for nesting Attributes based on some existing ProductType. It does not support `isSearchable` and is not supported in queries. The only supported AttributeConstraint is `None`.\n *\n */\n\n/**\n *\tAttribute type for numeric values.\n *\n */\n\n/**\n *\tAttribute type for [Reference](ctp:api:type:Reference) type values.\n *\n */\n\n/**\n *\tAttributeType that defines a set (without duplicate elements) with values of the given `elementType`. It does not support `isRequired`. Since this type itself is an AttributeType, it is possible to construct an AttributeSetType of an AttributeSetType of any AttributeType, and to continue with this iteration until terminating with any non-AttributeSetType. In case the AttributeSetType iteration terminates with an [AttributeNestedType](ctp:api:type:AttributeNestedType), the iteration can have 5 steps at maximum.\n *\n */\n\n/**\n *\tAttribute type for plain text string values.\n *\n */\n\n/**\n *\tAttribute type for [Time](ctp:api:type:Time) type values.\n *\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [ProductType](ctp:api:type:ProductType).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [ProductType](ctp:api:type:ProductType).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [ProductType](ctp:api:type:ProductType). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tA text input hint is a string with one of the following values:\n *\n */\nlet TextInputHintValues = /*#__PURE__*/function (TextInputHintValues) {\n  TextInputHintValues[\"MultiLine\"] = \"MultiLine\";\n  TextInputHintValues[\"SingleLine\"] = \"SingleLine\";\n  return TextInputHintValues;\n}({});\n\n/**\n *\tAdds a localizable enum to the values of [AttributeLocalizedEnumType](ctp:api:type:AttributeLocalizedEnumType). It can update an AttributeLocalizedEnumType AttributeDefinition or an [AttributeSetType](ctp:api:type:AttributeSetType) of AttributeLocalizedEnumType AttributeDefinition.\n *\n */\n\n/**\n *\tAdds an enum to the values of [AttributeEnumType](ctp:api:type:AttributeEnumType) AttributeDefinition, or [AttributeSetType](ctp:api:type:AttributeSetType) of AttributeEnumType AttributeDefinition.\n *\n */\n\n/**\n *\tUpdates the `attributeConstraint` of an [AttributeDefinition](ctp:api:type:AttributeDefinition). For now only following changes are supported: `SameForAll` to `None` and `Unique` to `None`.\n *\n */\n\n/**\n *\tRenames an AttributeDefinition and also renames all corresponding Attributes on all [Products](/projects/products) with this ProductType. The renaming of the Attributes is [eventually consistent](/general-concepts#eventual-consistency).\n *\n *\tIf the AttributeDefinition name to be changed does not exist, an [AttributeNameDoesNotExist](ctp:api:type:AttributeNameDoesNotExistError) error is returned.\n *\n */\n\n/**\n *\tUpdates the key of a single enum `value` in an [AttributeEnumType](ctp:api:type:AttributeEnumType) AttributeDefinition, [AttributeLocalizedEnumType](ctp:api:type:AttributeLocalizedEnumType) AttributeDefinition, [AttributeSetType](ctp:api:type:AttributeSetType) of AttributeEnumType AttributeDefinition, or AttributeSetType of AttributeLocalizedEnumType AttributeDefinition.\n *\n *\tIf the AttributeDefinition does not contain an enum with the referenced key, a [EnumKeyDoesNotExist](ctp:api:type:EnumKeyDoesNotExistError) error is returned.\n *\n *\tAll Products will be updated to the new key in an [eventually consistent](/general-concepts#eventual-consistency) way.\n *\n */\n\n/**\n *\tUpdates the `inputHint` of an [AttributeDefinition](ctp:api:type:AttributeDefinition).\n *\n */\n\n/**\n *\tFollowing this update the Products are reindexed asynchronously to reflect this change on the search endpoint. When enabling search on an existing Attribute type definition, the constraint regarding the maximum size of a searchable Attribute will not be enforced. Instead, Product AttributeDefinitions exceeding this limit will be treated as not searchable and will not be available for full-text search.\n *\n */\n\n/**\n *\tUpdates the label of a single enum `value` in an [AttributeLocalizedEnumType](ctp:api:type:AttributeLocalizedEnumType) AttributeDefinition, or [AttributeSetType](ctp:api:type:AttributeSetType) of AttributeLocalizedEnumType AttributeDefinition.\n *\n *\tAll Products will be updated to the new label in an [eventually consistent](/general-concepts#eventual-consistency) way.\n *\n */\n\n/**\n *\tUpdates the order of localized enum `values` in an [AttributeLocalizedEnumType](ctp:api:type:AttributeLocalizedEnumType) AttributeDefinition. It can update an AttributeLocalizedEnumType AttributeDefinition or an [AttributeSetType](ctp:api:type:AttributeSetType) of AttributeLocalizedEnumType AttributeDefinition.\n *\n */\n\n/**\n *\tUpdates the label of a single enum `value` in an [AttributeEnumType](ctp:api:type:AttributeEnumType) AttributeDefinition, or [AttributeSetType](ctp:api:type:AttributeSetType) of AttributeEnumType AttributeDefinition.\n *\n *\tAll Products will be updated to the new label in an [eventually consistent](/general-concepts#eventual-consistency) way.\n *\n */\n\n/**\n *\tUpdates the order of enum `values` in an [AttributeEnumType](ctp:api:type:AttributeEnumType) AttributeDefinition. It can update an AttributeEnumType AttributeDefinition or an [AttributeSetType](ctp:api:type:AttributeSetType) of AttributeEnumType AttributeDefinition.\n *\n */\n\n/**\n *\tRemoves an AttributeDefinition and also deletes all corresponding Attributes on all [Products](/projects/products) with this ProductType. The removal of the Attributes is [eventually consistent](/general-concepts#eventual-consistency).\n *\n *\tThe `CombinationUnique` constraint is not checked when an Attribute is removed, and uniqueness violations may occur when you remove an Attribute with a `CombinationUnique` constraint.\n *\n */\n\n/**\n *\tRemoves enum values from an AttributeDefinition of [AttributeEnumType](ctp:api:type:AttributeEnumType), [AttributeLocalizedEnumType](ctp:api:type:AttributeLocalizedEnumType), [AttributeSetType](ctp:api:type:AttributeSetType) of AttributeEnumType, or AttributeSetType of AttributeLocalizedEnumType.\n *\n *\tIf the Attribute is **not** required, the Attributes of all Products using those enum keys will also be removed in an [eventually consistent](/general-concepts#eventual-consistency) way. If the Attribute is required, the operation returns an [EnumValueIsUsed](ctp:api:type:EnumValueIsUsedError) error.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tThe current indexing status of Business Unit Search.\n *\n */\nlet BusinessUnitIndexingStatusValues = /*#__PURE__*/function (BusinessUnitIndexingStatusValues) {\n  BusinessUnitIndexingStatusValues[\"Failed\"] = \"Failed\";\n  BusinessUnitIndexingStatusValues[\"Indexing\"] = \"Indexing\";\n  BusinessUnitIndexingStatusValues[\"Ready\"] = \"Ready\";\n  BusinessUnitIndexingStatusValues[\"Scheduled\"] = \"Scheduled\";\n  return BusinessUnitIndexingStatusValues;\n}({});\n/**\n *\tThe current indexing status of Customer Search.\n *\n */\nlet CustomerIndexingStatusValues = /*#__PURE__*/function (CustomerIndexingStatusValues) {\n  CustomerIndexingStatusValues[\"Failed\"] = \"Failed\";\n  CustomerIndexingStatusValues[\"Indexing\"] = \"Indexing\";\n  CustomerIndexingStatusValues[\"Ready\"] = \"Ready\";\n  CustomerIndexingStatusValues[\"Scheduled\"] = \"Scheduled\";\n  return CustomerIndexingStatusValues;\n}({});\n/**\n *\tDefault value for [Business Unit Status](ctp:api:type:BusinessUnitStatus) configured though [Project settings](/../api/projects/project#change-my-business-unit-status-on-creation).\n */\nlet BusinessUnitConfigurationStatusValues = /*#__PURE__*/function (BusinessUnitConfigurationStatusValues) {\n  BusinessUnitConfigurationStatusValues[\"Active\"] = \"Active\";\n  BusinessUnitConfigurationStatusValues[\"Inactive\"] = \"Inactive\";\n  return BusinessUnitConfigurationStatusValues;\n}({});\n/**\n *\tSpecifies the status of the [Business Unit Search](/../api/projects/business-unit-search) index.\n *\tYou can change the status using the [Change Business Unit Search Status](ctp:api:type:ProjectChangeBusinessUnitSearchStatusAction) update action.\n *\n */\nlet BusinessUnitSearchStatusValues = /*#__PURE__*/function (BusinessUnitSearchStatusValues) {\n  BusinessUnitSearchStatusValues[\"Activated\"] = \"Activated\";\n  BusinessUnitSearchStatusValues[\"Deactivated\"] = \"Deactivated\";\n  return BusinessUnitSearchStatusValues;\n}({});\n/**\n *\tSpecifies the status of the [Customer Search](/../api/projects/customer-search) index.\n *\tYou can change the status using the [Change Customer Search Status](ctp:api:type:ProjectChangeCustomerSearchStatusAction) update action.\n *\n */\nlet CustomerSearchStatusValues = /*#__PURE__*/function (CustomerSearchStatusValues) {\n  CustomerSearchStatusValues[\"Activated\"] = \"Activated\";\n  CustomerSearchStatusValues[\"Deactivated\"] = \"Deactivated\";\n  return CustomerSearchStatusValues;\n}({});\n\n/**\n *\tRepresents a RFC 7662 compliant [OAuth 2.0 Token Introspection](https://datatracker.ietf.org/doc/html/rfc7662) endpoint. For more information, see [Requesting an access token using an external OAuth 2.0 server](/../api/authorization#request-an-access-token-using-an-external-oauth-server).\n *\n *\tYou can only configure **one** external OAuth 2.0 endpoint per Project. To authenticate using multiple external services (such as social network logins), use a middle layer authentication service.\n *\n */\n\n/**\n *\tSpecifies the status of the [Order Search](/../api/projects/order-search) index.\n */\nlet OrderSearchStatusValues = /*#__PURE__*/function (OrderSearchStatusValues) {\n  OrderSearchStatusValues[\"Activated\"] = \"Activated\";\n  OrderSearchStatusValues[\"Deactivated\"] = \"Deactivated\";\n  return OrderSearchStatusValues;\n}({});\nlet ProductSearchIndexingModeValues = /*#__PURE__*/function (ProductSearchIndexingModeValues) {\n  ProductSearchIndexingModeValues[\"ProductProjectionsSearch\"] = \"ProductProjectionsSearch\";\n  ProductSearchIndexingModeValues[\"ProductsSearch\"] = \"ProductsSearch\";\n  return ProductSearchIndexingModeValues;\n}({});\n\n/**\n *\tControls indexing of resources to be provided on high performance read-only search endpoints.\n *\n */\n\n/**\n *\tStatus of resource indexing.\n */\nlet SearchIndexingConfigurationStatusValues = /*#__PURE__*/function (SearchIndexingConfigurationStatusValues) {\n  SearchIndexingConfigurationStatusValues[\"Activated\"] = \"Activated\";\n  SearchIndexingConfigurationStatusValues[\"Deactivated\"] = \"Deactivated\";\n  SearchIndexingConfigurationStatusValues[\"Indexing\"] = \"Indexing\";\n  return SearchIndexingConfigurationStatusValues;\n}({});\n\n/**\n *\tThe [ShippingRate](ctp:api:type:ShippingRate) maps to an abstract Cart categorization expressed by strings (for example, `Light`, `Medium`, or `Heavy`).\n *\tOnly keys defined in the `values` array can be used to create a tier or to set a value of the `shippingRateInput` on the [Cart](ctp:api:type:Cart).\n *\tKeys must be unique.\n *\n */\n\n/**\n *\tThe [ShippingRate](ctp:api:type:ShippingRate) maps to an abstract [Cart](ctp:api:type:Cart) categorization expressed by integers (such as shipping scores or weight ranges).\n *\n */\n\n/**\n *\tThe [ShippingRate](ctp:api:type:ShippingRate) maps to the value of the Cart and is used to select a tier.\n *\tThe value of the [Cart](ctp:api:type:Cart) is the sum of all Line Item totals and Custom Line Item totals (via the `totalPrice` field) after any Product Discounts and Cart Discounts have been applied.\n *\tIf chosen, it is not possible to set a value for the `shippingRateInput` on the [Cart](ctp:api:type:Cart).\n *\n */\n\n/**\n *\tRemoving a language used by a [Store](ctp:api:type:Store) returns a [LanguageUsedInStores](ctp:api:type:LanguageUsedInStoresError) error.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [Quote](ctp:api:type:Quote).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [Quote](ctp:api:type:Quote).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [Quote](ctp:api:type:Quote).\n *\n */\n\n/**\n *\tPredefined states tracking the status of the Quote.\n *\n */\nlet QuoteStateValues = /*#__PURE__*/function (QuoteStateValues) {\n  QuoteStateValues[\"Accepted\"] = \"Accepted\";\n  QuoteStateValues[\"Declined\"] = \"Declined\";\n  QuoteStateValues[\"DeclinedForRenegotiation\"] = \"DeclinedForRenegotiation\";\n  QuoteStateValues[\"Pending\"] = \"Pending\";\n  QuoteStateValues[\"RenegotiationAddressed\"] = \"RenegotiationAddressed\";\n  QuoteStateValues[\"Withdrawn\"] = \"Withdrawn\";\n  return QuoteStateValues;\n}({});\n\n/**\n *\tChanges the owner of a Quote to a different Customer.\n *\tCustomer Group is not updated.\n *\tThis update action produces the [Quote Customer Changed](ctp:api:type:QuoteCustomerChangedMessage) Message.\n *\n */\n\n/**\n *\tRepresents the Buyer requesting renegotiation for a Quote. Valid for Quotes in a `Pending` [state](ctp:api:type:QuoteState).\n *\n */\n\n/**\n *\tIf the existing [State](ctp:api:type:State) has set `transitions`, there must be a direct transition to the new State. If `transitions` is not set, no validation is performed. This update action produces the [Quote State Transition](ctp:api:type:QuoteStateTransitionMessage) Message.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [QuoteRequest](ctp:api:type:QuoteRequest).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [QuoteRequest](ctp:api:type:QuoteRequest).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [QuoteRequest](ctp:api:type:QuoteRequest).\n *\n */\n\n/**\n *\tPredefined states tracking the status of the Quote Request in the negotiation process.\n *\n */\nlet QuoteRequestStateValues = /*#__PURE__*/function (QuoteRequestStateValues) {\n  QuoteRequestStateValues[\"Accepted\"] = \"Accepted\";\n  QuoteRequestStateValues[\"Cancelled\"] = \"Cancelled\";\n  QuoteRequestStateValues[\"Closed\"] = \"Closed\";\n  QuoteRequestStateValues[\"Rejected\"] = \"Rejected\";\n  QuoteRequestStateValues[\"Submitted\"] = \"Submitted\";\n  return QuoteRequestStateValues;\n}({});\n\n/**\n *\tChanges the owner of a Quote Request to a different Customer.\n *\tCustomer Group is not updated.\n *\tThis update action produces the [Quote Request Customer Changed](ctp:api:type:QuoteRequestCustomerChangedMessage) Message.\n *\n */\n\n/**\n *\tTransitions the Quote Request to a different state.\n *\tA Buyer is only allowed to cancel a Quote Request when it is in `Submitted` state.\n *\n */\n\n/**\n *\tIf the existing [State](ctp:api:type:State) has set `transitions`, there must be a direct transition to the new State. If `transitions` is not set, no validation is performed. This update action produces the [Quote Request State Transition](ctp:api:type:QuoteRequestStateTransitionMessage) Message.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tPossible values for the `fieldType` property on [simple expressions](/../api/search-query-language#simple-expressions) indicating the data type of the `field`.\n */\nlet SearchFieldTypeValues = /*#__PURE__*/function (SearchFieldTypeValues) {\n  SearchFieldTypeValues[\"Boolean\"] = \"boolean\";\n  SearchFieldTypeValues[\"Date\"] = \"date\";\n  SearchFieldTypeValues[\"Datetime\"] = \"datetime\";\n  SearchFieldTypeValues[\"Enum\"] = \"enum\";\n  SearchFieldTypeValues[\"Lenum\"] = \"lenum\";\n  SearchFieldTypeValues[\"Ltext\"] = \"ltext\";\n  SearchFieldTypeValues[\"Money\"] = \"money\";\n  SearchFieldTypeValues[\"Number\"] = \"number\";\n  SearchFieldTypeValues[\"Reference\"] = \"reference\";\n  SearchFieldTypeValues[\"SetBoolean\"] = \"set_boolean\";\n  SearchFieldTypeValues[\"SetDate\"] = \"set_date\";\n  SearchFieldTypeValues[\"SetDatetime\"] = \"set_datetime\";\n  SearchFieldTypeValues[\"SetEnum\"] = \"set_enum\";\n  SearchFieldTypeValues[\"SetLenum\"] = \"set_lenum\";\n  SearchFieldTypeValues[\"SetLtext\"] = \"set_ltext\";\n  SearchFieldTypeValues[\"SetMoney\"] = \"set_money\";\n  SearchFieldTypeValues[\"SetNumber\"] = \"set_number\";\n  SearchFieldTypeValues[\"SetReference\"] = \"set_reference\";\n  SearchFieldTypeValues[\"SetText\"] = \"set_text\";\n  SearchFieldTypeValues[\"SetTime\"] = \"set_time\";\n  SearchFieldTypeValues[\"Text\"] = \"text\";\n  SearchFieldTypeValues[\"Time\"] = \"time\";\n  return SearchFieldTypeValues;\n}({});\nlet SearchMatchTypeValues = /*#__PURE__*/function (SearchMatchTypeValues) {\n  SearchMatchTypeValues[\"All\"] = \"all\";\n  SearchMatchTypeValues[\"Any\"] = \"any\";\n  return SearchMatchTypeValues;\n}({});\n/**\n *\tFor set-type fields, only a single value of the set is taken into account for sorting.\n *\tThe sort mode determines whether the minimum or maximum value, or a calculated statistical value should be used as sorting value.\n *\n */\nlet SearchSortModeValues = /*#__PURE__*/function (SearchSortModeValues) {\n  SearchSortModeValues[\"Avg\"] = \"avg\";\n  SearchSortModeValues[\"Max\"] = \"max\";\n  SearchSortModeValues[\"Min\"] = \"min\";\n  SearchSortModeValues[\"Sum\"] = \"sum\";\n  return SearchSortModeValues;\n}({});\nlet SearchSortOrderValues = /*#__PURE__*/function (SearchSortOrderValues) {\n  SearchSortOrderValues[\"Asc\"] = \"asc\";\n  SearchSortOrderValues[\"Desc\"] = \"desc\";\n  return SearchSortOrderValues;\n}({});\n\n/**\n *\tSorting parameters provided with a Search request.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/general-concepts#pagedqueryresult) with `results` containing an array of [ShippingMethod](ctp:api:type:ShippingMethod).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [ShippingMethod](ctp:api:type:ShippingMethod).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [ShippingMethod](ctp:api:type:ShippingMethod). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tThe [ShippingRate](ctp:api:type:ShippingRate) maps to an abstract Cart categorization expressed by strings (for example, `Light`, `Medium`, or `Heavy`).\n *\n */\n\n/**\n *\tThe [ShippingRate](ctp:api:type:ShippingRate) maps to an abstract Cart categorization expressed by integers (such as shipping scores or weight ranges).\n *\tEither `price` or `priceFunction` is required.\n *\n */\n\n/**\n *\n *\tThe [ShippingRate](ctp:api:type:ShippingRate) maps to the value of the Cart and is used to select a tier.\n *\tThe value of the [Cart](ctp:api:type:Cart) is the sum of all Line Item totals and Custom Line Item totals (via the `totalPrice` field) after any Product Discounts and Cart Discounts have been applied.\n *\tIf chosen, it is not possible to set a value for the `shippingRateInput` on the [Cart](ctp:api:type:Cart).\n *\tTiers contain the `centAmount` (a value of `100` in the currency `USD` corresponds to `$ 1.00`), and start at `1`.'\n *\n */\n\nlet ShippingRateTierTypeValues = /*#__PURE__*/function (ShippingRateTierTypeValues) {\n  ShippingRateTierTypeValues[\"CartClassification\"] = \"CartClassification\";\n  ShippingRateTierTypeValues[\"CartScore\"] = \"CartScore\";\n  ShippingRateTierTypeValues[\"CartValue\"] = \"CartValue\";\n  return ShippingRateTierTypeValues;\n}({});\n\n/**\n *\tDefines shipping rates in different currencies for a specific [Zone](ctp:api:type:Zone).\n *\n */\n\n/**\n *\tThis action sets, overwrites, or removes any existing [Custom Field](/projects/custom-fields) for an existing ShippingMethod.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with results containing an array of [StagedQuote](ctp:api:type:StagedQuote).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [StagedQuote](ctp:api:type:StagedQuote).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [StagedQuote](ctp:api:type:StagedQuote).\n *\n */\n\n/**\n *\tPredefined states tracking the status of the Staged Quote.\n *\n */\nlet StagedQuoteStateValues = /*#__PURE__*/function (StagedQuoteStateValues) {\n  StagedQuoteStateValues[\"Closed\"] = \"Closed\";\n  StagedQuoteStateValues[\"InProgress\"] = \"InProgress\";\n  StagedQuoteStateValues[\"Sent\"] = \"Sent\";\n  return StagedQuoteStateValues;\n}({});\n\n/**\n *\tIf the existing [State](ctp:api:type:State) has set `transitions`, there must be a direct transition to the new State. If `transitions` is not set, no validation is performed. This update action produces the [Staged Quote State Transition](ctp:api:type:StagedQuoteStateTransitionMessage) Message.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [State](ctp:api:type:State).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [State](ctp:api:type:State).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) to a [State](ctp:api:type:State). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tFor some resource types, a State can fulfill the following predefined roles:\n *\n */\nlet StateRoleEnumValues = /*#__PURE__*/function (StateRoleEnumValues) {\n  StateRoleEnumValues[\"Return\"] = \"Return\";\n  StateRoleEnumValues[\"ReviewIncludedInStatistics\"] = \"ReviewIncludedInStatistics\";\n  return StateRoleEnumValues;\n}({});\n/**\n *\tResource or object type the State can be assigned to.\n *\n */\nlet StateTypeEnumValues = /*#__PURE__*/function (StateTypeEnumValues) {\n  StateTypeEnumValues[\"LineItemState\"] = \"LineItemState\";\n  StateTypeEnumValues[\"OrderState\"] = \"OrderState\";\n  StateTypeEnumValues[\"PaymentState\"] = \"PaymentState\";\n  StateTypeEnumValues[\"ProductState\"] = \"ProductState\";\n  StateTypeEnumValues[\"QuoteRequestState\"] = \"QuoteRequestState\";\n  StateTypeEnumValues[\"QuoteState\"] = \"QuoteState\";\n  StateTypeEnumValues[\"ReviewState\"] = \"ReviewState\";\n  StateTypeEnumValues[\"StagedQuoteState\"] = \"StagedQuoteState\";\n  return StateTypeEnumValues;\n}({});\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tDefines the method of authentication for AWS SQS and SNS Destinations.\n */\nlet AwsAuthenticationModeValues = /*#__PURE__*/function (AwsAuthenticationModeValues) {\n  AwsAuthenticationModeValues[\"Credentials\"] = \"Credentials\";\n  AwsAuthenticationModeValues[\"Iam\"] = \"IAM\";\n  return AwsAuthenticationModeValues;\n}({});\n\n/**\n *\tNotification about changes to a resource. The payload format differs for resource [creation](ctp:api:type:ResourceCreatedDeliveryPayload),\n *\t[update](ctp:api:type:ResourceUpdatedDeliveryPayload),\n *\tand [deletion](ctp:api:type:ResourceDeletedDeliveryPayload).\n *\n */\n\n/**\n *\tResource types supported by [ChangeSubscriptions](ctp:api:type:ChangeSubscription):\n *\n */\nlet ChangeSubscriptionResourceTypeIdValues = /*#__PURE__*/function (ChangeSubscriptionResourceTypeIdValues) {\n  ChangeSubscriptionResourceTypeIdValues[\"ApprovalFlow\"] = \"approval-flow\";\n  ChangeSubscriptionResourceTypeIdValues[\"ApprovalRule\"] = \"approval-rule\";\n  ChangeSubscriptionResourceTypeIdValues[\"AssociateRole\"] = \"associate-role\";\n  ChangeSubscriptionResourceTypeIdValues[\"AttributeGroup\"] = \"attribute-group\";\n  ChangeSubscriptionResourceTypeIdValues[\"BusinessUnit\"] = \"business-unit\";\n  ChangeSubscriptionResourceTypeIdValues[\"Cart\"] = \"cart\";\n  ChangeSubscriptionResourceTypeIdValues[\"CartDiscount\"] = \"cart-discount\";\n  ChangeSubscriptionResourceTypeIdValues[\"Category\"] = \"category\";\n  ChangeSubscriptionResourceTypeIdValues[\"Channel\"] = \"channel\";\n  ChangeSubscriptionResourceTypeIdValues[\"Customer\"] = \"customer\";\n  ChangeSubscriptionResourceTypeIdValues[\"CustomerEmailToken\"] = \"customer-email-token\";\n  ChangeSubscriptionResourceTypeIdValues[\"CustomerGroup\"] = \"customer-group\";\n  ChangeSubscriptionResourceTypeIdValues[\"CustomerPasswordToken\"] = \"customer-password-token\";\n  ChangeSubscriptionResourceTypeIdValues[\"DiscountCode\"] = \"discount-code\";\n  ChangeSubscriptionResourceTypeIdValues[\"Extension\"] = \"extension\";\n  ChangeSubscriptionResourceTypeIdValues[\"InventoryEntry\"] = \"inventory-entry\";\n  ChangeSubscriptionResourceTypeIdValues[\"KeyValueDocument\"] = \"key-value-document\";\n  ChangeSubscriptionResourceTypeIdValues[\"Order\"] = \"order\";\n  ChangeSubscriptionResourceTypeIdValues[\"OrderEdit\"] = \"order-edit\";\n  ChangeSubscriptionResourceTypeIdValues[\"Payment\"] = \"payment\";\n  ChangeSubscriptionResourceTypeIdValues[\"Product\"] = \"product\";\n  ChangeSubscriptionResourceTypeIdValues[\"ProductDiscount\"] = \"product-discount\";\n  ChangeSubscriptionResourceTypeIdValues[\"ProductSelection\"] = \"product-selection\";\n  ChangeSubscriptionResourceTypeIdValues[\"ProductTailoring\"] = \"product-tailoring\";\n  ChangeSubscriptionResourceTypeIdValues[\"ProductType\"] = \"product-type\";\n  ChangeSubscriptionResourceTypeIdValues[\"Quote\"] = \"quote\";\n  ChangeSubscriptionResourceTypeIdValues[\"QuoteRequest\"] = \"quote-request\";\n  ChangeSubscriptionResourceTypeIdValues[\"Review\"] = \"review\";\n  ChangeSubscriptionResourceTypeIdValues[\"ShippingMethod\"] = \"shipping-method\";\n  ChangeSubscriptionResourceTypeIdValues[\"ShoppingList\"] = \"shopping-list\";\n  ChangeSubscriptionResourceTypeIdValues[\"StagedQuote\"] = \"staged-quote\";\n  ChangeSubscriptionResourceTypeIdValues[\"StandalonePrice\"] = \"standalone-price\";\n  ChangeSubscriptionResourceTypeIdValues[\"State\"] = \"state\";\n  ChangeSubscriptionResourceTypeIdValues[\"Store\"] = \"store\";\n  ChangeSubscriptionResourceTypeIdValues[\"Subscription\"] = \"subscription\";\n  ChangeSubscriptionResourceTypeIdValues[\"TaxCategory\"] = \"tax-category\";\n  ChangeSubscriptionResourceTypeIdValues[\"Type\"] = \"type\";\n  ChangeSubscriptionResourceTypeIdValues[\"Zone\"] = \"zone\";\n  return ChangeSubscriptionResourceTypeIdValues;\n}({});\n\n/**\n *\tThe [CloudEventsFormat](ctp:api:type:CloudEventsFormat) represents event data in a way that conforms to a common specification. The payload can be found inside the `data` field.\n *\n */\n\n/**\n *\tThe CloudEventsFormat can be used with any [Destination](#destination-1), and the payload is delivered in the `JSON Event Format`. [AzureEventGridDestination](ctp:api:type:AzureEventGridDestination) offers native support to filter and route CloudEvents.\n *\n */\n\n/**\n *\t[Azure Event Grid](https://azure.microsoft.com/en-us/products/event-grid/) can be used to push notifications to Azure Functions, HTTP endpoints (webhooks), and several other Azure tools. Event Grid can only be used with the [CloudEventsFormat](ctp:api:type:CloudEventsFormat).\n *\tTo set up a Subscription with Azure Event Grid, first create a topic in the [Azure Portal](https://azure.microsoft.com/en-us/get-started/azure-portal/). To allow Composable Commerce to push notifications to your topic, provide an [access key](https://docs.microsoft.com/en-us/azure/event-grid/get-access-keys).\n *\n */\n\n/**\n *\t[Azure Service Bus](https://azure.microsoft.com/en-us/products/service-bus/) can be used as a pull-queue with [Queues](https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions#queues), or to fan-out notifications with [Topics and Subscriptions](https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions).\n *\tTo set up a Subscription with Azure Service Bus, first create a queue/topic in the [Azure Portal](https://azure.microsoft.com/en-us/get-started/azure-portal/) with a Shared Access Policy including the `Send` permission.\n *\n */\n\n/**\n *\tThis destination can be used to push notifications to [Confluent Cloud](https://www.confluent.io/confluent-cloud/).\n *\tTo set up a Subscription of this type, first, create a topic in Confluent Cloud.\n *\tThen, to allow Composable Commerce to push notifications to your topic, generate [API keys](https://docs.confluent.io/cloud/current/access-management/authenticate/api-keys/api-keys.html) for your topic, and create the Subscription destination using the generated credentials.\n *\n *\tThe Composable Commerce producer uses the following values: `SASL_SSL` for`security.protocol`, `PLAIN` for`sasl.mechanism`, and the default value (1048576) for `max.request.size`.\n *\n */\n\n/**\n *\t[AWS EventBridge](https://aws.amazon.com/eventbridge/) can be used to push events and messages to a serverless event bus that can forward them to AWS SQS, SNS, Lambda, and other AWS services based on forwarding rules.\n *\tOnce the Subscription is created, an equivalent \"partner event source\" is created in AWS EventBridge. This event source must be associated with an event bus for the Subscription setup to be complete.\n *\n */\n\n/**\n *\tFor EventSubscription, the format of the payload is custom for each specific notification.\n *\n */\n\n/**\n *\tResource types supported by [EventSubscriptions](ctp:api:type:EventSubscription).\n *\n */\nlet EventSubscriptionResourceTypeIdValues = /*#__PURE__*/function (EventSubscriptionResourceTypeIdValues) {\n  EventSubscriptionResourceTypeIdValues[\"ImportApi\"] = \"import-api\";\n  return EventSubscriptionResourceTypeIdValues;\n}({});\n/**\n *\tType of events supported by [EventSubscriptions](ctp:api:type:EventSubscription).\n *\n */\nlet EventTypeValues = /*#__PURE__*/function (EventTypeValues) {\n  EventTypeValues[\"ImportContainerCreated\"] = \"ImportContainerCreated\";\n  EventTypeValues[\"ImportContainerDeleted\"] = \"ImportContainerDeleted\";\n  EventTypeValues[\"ImportOperationRejected\"] = \"ImportOperationRejected\";\n  EventTypeValues[\"ImportUnresolved\"] = \"ImportUnresolved\";\n  EventTypeValues[\"ImportValidationFailed\"] = \"ImportValidationFailed\";\n  EventTypeValues[\"ImportWaitForMasterVariant\"] = \"ImportWaitForMasterVariant\";\n  return EventTypeValues;\n}({});\n\n/**\n *\tDestination for [Google Cloud Pub/Sub](https://cloud.google.com/pubsub/) that can be used\n *\tfor [Pull subscriptions](https://cloud.google.com/pubsub/docs/pull) as well as for [Push subscriptions](https://cloud.google.com/pubsub/docs/push).\n *\tThe `topic` must give the `pubsub.topics.publish` permission to the service account `subscriptions@commercetools-platform.iam.gserviceaccount.com`.\n *\tIf used with the [CloudEventsFormat](#cloudeventsformat), the notification conforms to the [PubSub Protocol Binding](https://github.com/google/knative-gcp/blob/master/docs/spec/pubsub-protocol-binding.md) of the [Structured Content Mode](https://github.com/google/knative-gcp/blob/master/docs/spec/pubsub-protocol-binding.md#32-structured-content-mode).\n *\n */\n\n/**\n *\tMessages will be delivered even if the Messages Query HTTP API [is not enabled](/../api/projects/messages#enable-querying-messages-via-the-api).\n *\n *\tFor MessageSubscriptions, the format of the payload is [MessageDeliveryPayload](ctp:api:type:MessageDeliveryPayload).\n *\n */\n\n/**\n *\tResource types supported by [MessageSubscriptions](ctp:api:type:MessageSubscription):\n *\n */\nlet MessageSubscriptionResourceTypeIdValues = /*#__PURE__*/function (MessageSubscriptionResourceTypeIdValues) {\n  MessageSubscriptionResourceTypeIdValues[\"ApprovalFlow\"] = \"approval-flow\";\n  MessageSubscriptionResourceTypeIdValues[\"ApprovalRule\"] = \"approval-rule\";\n  MessageSubscriptionResourceTypeIdValues[\"AssociateRole\"] = \"associate-role\";\n  MessageSubscriptionResourceTypeIdValues[\"BusinessUnit\"] = \"business-unit\";\n  MessageSubscriptionResourceTypeIdValues[\"Category\"] = \"category\";\n  MessageSubscriptionResourceTypeIdValues[\"Customer\"] = \"customer\";\n  MessageSubscriptionResourceTypeIdValues[\"CustomerEmailToken\"] = \"customer-email-token\";\n  MessageSubscriptionResourceTypeIdValues[\"CustomerGroup\"] = \"customer-group\";\n  MessageSubscriptionResourceTypeIdValues[\"CustomerPasswordToken\"] = \"customer-password-token\";\n  MessageSubscriptionResourceTypeIdValues[\"InventoryEntry\"] = \"inventory-entry\";\n  MessageSubscriptionResourceTypeIdValues[\"Order\"] = \"order\";\n  MessageSubscriptionResourceTypeIdValues[\"Payment\"] = \"payment\";\n  MessageSubscriptionResourceTypeIdValues[\"Product\"] = \"product\";\n  MessageSubscriptionResourceTypeIdValues[\"ProductSelection\"] = \"product-selection\";\n  MessageSubscriptionResourceTypeIdValues[\"ProductTailoring\"] = \"product-tailoring\";\n  MessageSubscriptionResourceTypeIdValues[\"Quote\"] = \"quote\";\n  MessageSubscriptionResourceTypeIdValues[\"QuoteRequest\"] = \"quote-request\";\n  MessageSubscriptionResourceTypeIdValues[\"Review\"] = \"review\";\n  MessageSubscriptionResourceTypeIdValues[\"ShoppingList\"] = \"shopping-list\";\n  MessageSubscriptionResourceTypeIdValues[\"StagedQuote\"] = \"staged-quote\";\n  MessageSubscriptionResourceTypeIdValues[\"StandalonePrice\"] = \"standalone-price\";\n  MessageSubscriptionResourceTypeIdValues[\"Store\"] = \"store\";\n  return MessageSubscriptionResourceTypeIdValues;\n}({});\n\n/**\n *\tThe PlatformFormat uses constructs that are similar to the ones used in the REST API, for example, on the [Messages Query HTTP API](/../api/projects/messages).\n *\n */\n\n/**\n *\t[AWS SNS](https://aws.amazon.com/sns/) can be used to push messages to AWS Lambda, HTTP endpoints (webhooks), or fan-out messages to SQS queues. The SQS queue must be a [Standard](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/standard-queues.html) queue type.\n *\n *\tWe recommend setting `authenticationMode` to `IAM`, to avoid unnecessary key management. For IAM authentication and before creating the Subscription, give permissions to the following user account: `arn:aws:iam::362576667341:user/subscriptions`. Otherwise, a test notification will not be sent.\n *\n *\tIf you prefer to use `Credentials` for authentication, we recommend [creating an IAM user](https://docs.aws.amazon.com/sns/latest/dg/sns-setting-up.html#create-iam-user) with an `accessKey` and `accessSecret` pair specifically for each Subscription.\n *\n *\tThe IAM user should only have the `sns:Publish` permission on this topic.\n *\n */\n\n/**\n *\t[AWS SQS](https://aws.amazon.com/sqs/) is a pull-queue on AWS.\n *\tThe queue must be a [Standard](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/standard-queues.html) queue type with a `MaximumMessageSize` of `256 KB`.\n *\n *\tWe recommend setting `authenticationMode` to `IAM`, to avoid unnecessary key management. For IAM authentication and before creating the Subscription, give permissions to the following user account: `arn:aws:iam::362576667341:user/subscriptions`. Otherwise, a test message will not be sent.\n *\n *\tIf you prefer to use `Credentials` for authentication, we recommend [creating an IAM user](https://docs.aws.amazon.com/sns/latest/dg/sns-setting-up.html#create-iam-user) with an `accessKey` and `accessSecret` pair specifically for each Subscription.\n *\n *\tThe IAM user should only have the `sqs:SendMessage` permission on this queue.\n *\n */\n\n/**\n *\tEither `messages` or `changes` must be set.\n *\n */\n\n/**\n *\tThe health status of the Subscription that indicates whether notifications are being delivered.\n *\n */\nlet SubscriptionHealthStatusValues = /*#__PURE__*/function (SubscriptionHealthStatusValues) {\n  SubscriptionHealthStatusValues[\"ConfigurationError\"] = \"ConfigurationError\";\n  SubscriptionHealthStatusValues[\"ConfigurationErrorDeliveryStopped\"] = \"ConfigurationErrorDeliveryStopped\";\n  SubscriptionHealthStatusValues[\"Healthy\"] = \"Healthy\";\n  SubscriptionHealthStatusValues[\"ManuallySuspended\"] = \"ManuallySuspended\";\n  SubscriptionHealthStatusValues[\"TemporaryError\"] = \"TemporaryError\";\n  return SubscriptionHealthStatusValues;\n}({});\n\n/**\n *\tAll payloads for the [PlatformFormat](ctp:api:type:PlatformFormat) share these common fields.\n *\n */\n\n/**\n *\tAll payloads for the [PlatformFormat](ctp:api:type:PlatformFormat) share these common fields.\n *\n */\n\n/**\n *\tThis payload is sent for an [EventSubscription](ctp:api:type:EventSubscription).\n *\n */\n\n/**\n *\tThis payload is sent for a [MessageSubscription](ctp:api:type:MessageSubscription).\n *\n */\n\n/**\n *\tThis payload is sent for a [ChangeSubscription](ctp:api:type:ChangeSubscription) when a resource is created.\n *\n */\n\n/**\n *\tThis payload is sent for a [ChangeSubscription](ctp:api:type:ChangeSubscription) when a resource is deleted.\n *\n */\n\n/**\n *\tThis payload is sent for a [ChangeSubscription](ctp:api:type:ChangeSubscription) when a resource is updated. This includes updates by a background process, like a change in product availability.\n *\n */\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [Subscription](ctp:api:type:Subscription).\n *\n */\n\n/**\n *\tA test notification is sent to ensure the correct configuration of the Destination. If the notification cannot be delivered, the update will fail. The payload of the test notification is of type [ResourceCreated](ctp:api:type:ResourceCreatedDeliveryPayload) for the `resourceTypeId` `subscription`. The `status` will change to [Healthy](ctp:api:type:SubscriptionHealthStatus), if it isn't already.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate raml_file_path -o output_path -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\n/**\n *\tDefines an allowed value of a [CustomFieldEnumType](ctp:api:type:CustomFieldEnumType) field.\n *\n */\n\n/**\n *\tDefines an allowed value of a [CustomFieldLocalizedEnumType](ctp:api:type:CustomFieldLocalizedEnumType) field.\n *\n */\n\n/**\n *\tDefines which resource type a [CustomFieldReferenceType](ctp:api:type:CustomFieldReferenceType) can reference.\n *\n */\nlet CustomFieldReferenceValueValues = /*#__PURE__*/function (CustomFieldReferenceValueValues) {\n  CustomFieldReferenceValueValues[\"ApprovalFlow\"] = \"approval-flow\";\n  CustomFieldReferenceValueValues[\"ApprovalRule\"] = \"approval-rule\";\n  CustomFieldReferenceValueValues[\"AssociateRole\"] = \"associate-role\";\n  CustomFieldReferenceValueValues[\"BusinessUnit\"] = \"business-unit\";\n  CustomFieldReferenceValueValues[\"Cart\"] = \"cart\";\n  CustomFieldReferenceValueValues[\"CartDiscount\"] = \"cart-discount\";\n  CustomFieldReferenceValueValues[\"Category\"] = \"category\";\n  CustomFieldReferenceValueValues[\"Channel\"] = \"channel\";\n  CustomFieldReferenceValueValues[\"Customer\"] = \"customer\";\n  CustomFieldReferenceValueValues[\"CustomerGroup\"] = \"customer-group\";\n  CustomFieldReferenceValueValues[\"KeyValueDocument\"] = \"key-value-document\";\n  CustomFieldReferenceValueValues[\"Order\"] = \"order\";\n  CustomFieldReferenceValueValues[\"Product\"] = \"product\";\n  CustomFieldReferenceValueValues[\"ProductType\"] = \"product-type\";\n  CustomFieldReferenceValueValues[\"Review\"] = \"review\";\n  CustomFieldReferenceValueValues[\"ShippingMethod\"] = \"shipping-method\";\n  CustomFieldReferenceValueValues[\"State\"] = \"state\";\n  CustomFieldReferenceValueValues[\"Zone\"] = \"zone\";\n  return CustomFieldReferenceValueValues;\n}({});\n\n/**\n *\tServes as value of the `custom` field on a resource or data type customized with a [Type](ctp:api:type:Type).\n *\n */\n\n/**\n *\tThe representation used when creating or updating a [customizable data type](/../api/projects/types#resourcetypeid) with Custom Fields.\n *\n */\n\n/**\n *\tDefines a [Custom Field](/../api/projects/custom-fields) and its meta-information.\n *\tThis FieldDefinition is similar to an [AttributeDefinition](ctp:api:type:AttributeDefinition) of [Product Types](/../api/projects/productTypes).\n *\n */\n\n/**\n *\tField type for Boolean values.\n *\n */\n\n/**\n *\tField type for [DateTime](ctp:api:type:DateTime) values.\n *\n */\n\n/**\n *\tField type for [Date](ctp:api:type:Date) values.\n *\n */\n\n/**\n *\tField type for enum values.\n *\n */\n\n/**\n *\tField type for localized enum values.\n *\n */\n\n/**\n *\tField type for [LocalizedString](ctp:api:type:LocalizedString) values.\n *\n */\n\n/**\n *\tField type for [CentPrecisionMoney](ctp:api:type:CentPrecisionMoney) values.\n *\n */\n\n/**\n *\tField type for number values.\n *\n */\n\n/**\n *\tField type for [Reference](ctp:api:type:Reference) values.\n *\n */\n\n/**\n *\tValues of a SetType Custom Field are sets of values of the specified `elementType` (without duplicate elements).\n *\n */\n\n/**\n *\tField type for string values.\n *\n */\n\n/**\n *\tField type for [Time](ctp:api:type:Time) values.\n *\n */\n\n/**\n *\tWith Types, you can model your own Custom Fields on the following resources and data types.\n *\n */\nlet ResourceTypeIdValues = /*#__PURE__*/function (ResourceTypeIdValues) {\n  ResourceTypeIdValues[\"Address\"] = \"address\";\n  ResourceTypeIdValues[\"ApprovalFlow\"] = \"approval-flow\";\n  ResourceTypeIdValues[\"ApprovalRule\"] = \"approval-rule\";\n  ResourceTypeIdValues[\"Asset\"] = \"asset\";\n  ResourceTypeIdValues[\"AssociateRole\"] = \"associate-role\";\n  ResourceTypeIdValues[\"BusinessUnit\"] = \"business-unit\";\n  ResourceTypeIdValues[\"CartDiscount\"] = \"cart-discount\";\n  ResourceTypeIdValues[\"Category\"] = \"category\";\n  ResourceTypeIdValues[\"Channel\"] = \"channel\";\n  ResourceTypeIdValues[\"CustomLineItem\"] = \"custom-line-item\";\n  ResourceTypeIdValues[\"Customer\"] = \"customer\";\n  ResourceTypeIdValues[\"CustomerGroup\"] = \"customer-group\";\n  ResourceTypeIdValues[\"DiscountCode\"] = \"discount-code\";\n  ResourceTypeIdValues[\"InventoryEntry\"] = \"inventory-entry\";\n  ResourceTypeIdValues[\"LineItem\"] = \"line-item\";\n  ResourceTypeIdValues[\"Order\"] = \"order\";\n  ResourceTypeIdValues[\"OrderDelivery\"] = \"order-delivery\";\n  ResourceTypeIdValues[\"OrderEdit\"] = \"order-edit\";\n  ResourceTypeIdValues[\"OrderParcel\"] = \"order-parcel\";\n  ResourceTypeIdValues[\"OrderReturnItem\"] = \"order-return-item\";\n  ResourceTypeIdValues[\"Payment\"] = \"payment\";\n  ResourceTypeIdValues[\"PaymentInterfaceInteraction\"] = \"payment-interface-interaction\";\n  ResourceTypeIdValues[\"ProductPrice\"] = \"product-price\";\n  ResourceTypeIdValues[\"ProductSelection\"] = \"product-selection\";\n  ResourceTypeIdValues[\"ProductTailoring\"] = \"product-tailoring\";\n  ResourceTypeIdValues[\"Quote\"] = \"quote\";\n  ResourceTypeIdValues[\"Review\"] = \"review\";\n  ResourceTypeIdValues[\"Shipping\"] = \"shipping\";\n  ResourceTypeIdValues[\"ShippingMethod\"] = \"shipping-method\";\n  ResourceTypeIdValues[\"ShoppingList\"] = \"shopping-list\";\n  ResourceTypeIdValues[\"ShoppingListTextLineItem\"] = \"shopping-list-text-line-item\";\n  ResourceTypeIdValues[\"StandalonePrice\"] = \"standalone-price\";\n  ResourceTypeIdValues[\"Store\"] = \"store\";\n  ResourceTypeIdValues[\"Transaction\"] = \"transaction\";\n  return ResourceTypeIdValues;\n}({});\n\n/**\n *\t[PagedQueryResult](/../api/general-concepts#pagedqueryresult) with `results` containing an array of [Types](ctp:api:type:Type).\n *\n */\n\n/**\n *\t[Reference](ctp:api:type:Reference) to a [Type](ctp:api:type:Type).\n *\n */\n\n/**\n *\t[ResourceIdentifier](ctp:api:type:ResourceIdentifier) of a [Type](ctp:api:type:Type). Either `id` or `key` is required. If both are set, an [InvalidJsonInput](/../api/errors#invalidjsoninput) error is returned.\n *\n */\n\n/**\n *\tProvides a visual representation type for this field. It is only relevant for string-based field types like [CustomFieldStringType](ctp:api:type:CustomFieldStringType) and [CustomFieldLocalizedStringType](ctp:api:type:CustomFieldLocalizedStringType). Following values are supported:\n *\n */\nlet TypeTextInputHintValues = /*#__PURE__*/function (TypeTextInputHintValues) {\n  TypeTextInputHintValues[\"MultiLine\"] = \"MultiLine\";\n  TypeTextInputHintValues[\"SingleLine\"] = \"SingleLine\";\n  return TypeTextInputHintValues;\n}({});\n\n/**\n *\tAdds a value to an [EnumType](ctp:api:type:CustomFieldEnumType).\n *\tThis update action can be used to update an [EnumType](ctp:api:type:CustomFieldEnumType) FieldDefinition and a [SetType](ctp:api:type:CustomFieldSetType) FieldDefinition of [EnumType](ctp:api:type:CustomFieldEnumType).\n *\n */\n\n/**\n *\tDefines a new field for a Type. Adding new required fields to a Type that is already referenced by existing entities can put those entities in a temporarily inconsistent state.\n *\n *\tIf a Type that is already in use requires new fields, we recommend making them optional (`required` set to `false`) whenever possible. Alternatively, any new required fields should be added one at a time followed by an update to all the resources using the Type. This prevents validation errors caused by an entity missing more than one required custom field.\n *\n */\n\n/**\n *\tAdds a value to a [LocalizedEnumType](ctp:api:type:CustomFieldLocalizedEnumType).\n *\tThis update action can be used to update a [LocalizedEnumType](ctp:api:type:CustomFieldLocalizedEnumType) FieldDefinition and a [SetType](ctp:api:type:CustomFieldSetType) FieldDefinition of [CustomFieldLocalizedEnumType](ctp:api:type:CustomFieldLocalizedEnumType).\n *\n */\n\n/**\n *\tChanges the `label` of an [EnumValue](ctp:api:type:CustomFieldEnumValue) of an [EnumType](ctp:api:type:CustomFieldEnumType) FieldDefinition.\n *\n */\n\n/**\n *\tChanges the order of [EnumValues](ctp:api:type:CustomFieldEnumValue) in an [EnumType](ctp:api:type:CustomFieldEnumType) FieldDefinition.\n *\tThis update action can be used to update an [EnumType](ctp:api:type:CustomFieldEnumType) FieldDefinition and a [SetType](ctp:api:type:CustomFieldSetType) FieldDefinition of [EnumType](ctp:api:type:CustomFieldEnumType).\n *\n */\n\n/**\n *\tChanges the `inputHint` of [CustomFieldStringType](ctp:api:type:CustomFieldStringType) [FieldDefinition](ctp:api:type:FieldDefinition), a [CustomFieldLocalizedStringType](ctp:api:type:CustomFieldLocalizedStringType) [FieldDefinition](ctp:api:type:FieldDefinition), and [CustomFieldSetType](ctp:api:type:CustomFieldSetType) [FieldDefinition](ctp:api:type:FieldDefinition) of these string-based FieldTypes.\n *\n */\n\n/**\n *\tChanges the `label` of a [LocalizedEnumValue](ctp:api:type:CustomFieldLocalizedEnumValue) of a [LocalizedEnumType](ctp:api:type:CustomFieldLocalizedEnumType) FieldDefinition.\n *\n */\n\n/**\n *\tChanges the order of [LocalizedEnumValues](ctp:api:type:CustomFieldLocalizedEnumValue) in a [LocalizedEnumType](ctp:api:type:CustomFieldLocalizedEnumType) FieldDefinition.\n *\tThis update action can be used to update a [LocalizedEnumType](ctp:api:type:CustomFieldLocalizedEnumType) FieldDefinition and a [SetType](ctp:api:type:CustomFieldSetType) of [LocalizedEnumType](ctp:api:type:CustomFieldLocalizedEnumType) FieldDefinitions.\n *\n */\n\n/**\n * Code generated by [commercetools RMF-Codegen](https://github.com/commercetools/rmf-codegen). DO NOT EDIT.\n * Please don't change this file manually but run `rmf-codegen generate <raml_file_path> -o <output_path> -t typescript_client` to update it.\n * For more information about the commercetools platform APIs, visit https://docs.commercetools.com/.\n */\n\nconst createExecutorFromMiddlewares = (executor, midds) => {\n  if (!midds || midds.length == 0) {\n    return executor;\n  }\n  const reduced = midds.reduce(reduceMiddleware);\n  return middlewareToExecutor(reduced, executor);\n};\nfunction reduceMiddleware(middleware1, middleware2) {\n  return (request, executor) => middleware1(request, middlewareToExecutor(middleware2, executor));\n}\nfunction middlewareToExecutor(middleware, executor) {\n  return request => middleware(request, executor);\n}\n\nfunction createApiBuilderFromCtpClient(ctpClient, baseUri) {\n  return new ApiRoot({\n    executeRequest: ctpClient.execute,\n    baseUri: baseUri\n  });\n}\n\nexport { AnonymousCartSignInModeValues, ApiRequest, ApiRoot, ApprovalFlowStatusValues, ApprovalRuleStatusValues, AssociateRoleInheritanceModeValues, AttributeConstraintEnumDraftValues, AttributeConstraintEnumValues, AttributeReferenceTypeIdValues, AttributionSourceValues, AuthenticationModeValues, AwsAuthenticationModeValues, BusinessUnitApprovalRuleModeValues, BusinessUnitAssociateModeValues, BusinessUnitConfigurationStatusValues, BusinessUnitIndexingStatusValues, BusinessUnitSearchStatusValues, BusinessUnitStatusValues, BusinessUnitStoreModeValues, BusinessUnitTypeValues, ByProjectKeyApiClientsByIDRequestBuilder, ByProjectKeyApiClientsRequestBuilder, ByProjectKeyAsAssociateByAssociateIdBusinessUnitsByIDRequestBuilder, ByProjectKeyAsAssociateByAssociateIdBusinessUnitsKeyByKeyRequestBuilder, ByProjectKeyAsAssociateByAssociateIdBusinessUnitsRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalFlowsByIDRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalFlowsRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesByIDRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesKeyByKeyRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsByIDRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsKeyByKeyRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsReplicateRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersByIDRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersOrderNumberByOrderNumberRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersQuotesRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsByIDRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsKeyByKeyRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesByIDRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesKeyByKeyRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsByIDRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsKeyByKeyRequestBuilder, ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsRequestBuilder, ByProjectKeyAsAssociateByAssociateIdRequestBuilder, ByProjectKeyAsAssociateRequestBuilder, ByProjectKeyAssociateRolesByIDRequestBuilder, ByProjectKeyAssociateRolesKeyByKeyRequestBuilder, ByProjectKeyAssociateRolesRequestBuilder, ByProjectKeyAttributeGroupsByIDRequestBuilder, ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder, ByProjectKeyAttributeGroupsRequestBuilder, ByProjectKeyBusinessUnitsByBusinessUnitIdAssociatesByAssociateIdRequestBuilder, ByProjectKeyBusinessUnitsByIDRequestBuilder, ByProjectKeyBusinessUnitsKeyByKeyAssociatesByAssociateIdRequestBuilder, ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder, ByProjectKeyBusinessUnitsRequestBuilder, ByProjectKeyBusinessUnitsSearchIndexingStatusRequestBuilder, ByProjectKeyBusinessUnitsSearchRequestBuilder, ByProjectKeyCartDiscountsByIDRequestBuilder, ByProjectKeyCartDiscountsKeyByKeyRequestBuilder, ByProjectKeyCartDiscountsRequestBuilder, ByProjectKeyCartsByIDRequestBuilder, ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder, ByProjectKeyCartsKeyByKeyRequestBuilder, ByProjectKeyCartsReplicateRequestBuilder, ByProjectKeyCartsRequestBuilder, ByProjectKeyCategoriesByIDRequestBuilder, ByProjectKeyCategoriesKeyByKeyRequestBuilder, ByProjectKeyCategoriesRequestBuilder, ByProjectKeyChannelsByIDRequestBuilder, ByProjectKeyChannelsKeyByKeyRequestBuilder, ByProjectKeyChannelsRequestBuilder, ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder, ByProjectKeyCustomObjectsByContainerRequestBuilder, ByProjectKeyCustomObjectsRequestBuilder, ByProjectKeyCustomerGroupsByIDRequestBuilder, ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder, ByProjectKeyCustomerGroupsRequestBuilder, ByProjectKeyCustomersByIDRequestBuilder, ByProjectKeyCustomersEmailConfirmRequestBuilder, ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder, ByProjectKeyCustomersEmailTokenRequestBuilder, ByProjectKeyCustomersKeyByKeyRequestBuilder, ByProjectKeyCustomersPasswordRequestBuilder, ByProjectKeyCustomersPasswordResetRequestBuilder, ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder, ByProjectKeyCustomersPasswordTokenRequestBuilder, ByProjectKeyCustomersRequestBuilder, ByProjectKeyCustomersSearchIndexingStatusRequestBuilder, ByProjectKeyCustomersSearchRequestBuilder, ByProjectKeyDiscountCodesByIDRequestBuilder, ByProjectKeyDiscountCodesKeyByKeyRequestBuilder, ByProjectKeyDiscountCodesRequestBuilder, ByProjectKeyExtensionsByIDRequestBuilder, ByProjectKeyExtensionsKeyByKeyRequestBuilder, ByProjectKeyExtensionsRequestBuilder, ByProjectKeyGraphqlRequestBuilder, ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder, ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder, ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsByBusinessUnitIdAssociatesByAssociateIdRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsKeyByKeyAssociatesByAssociateIdRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsKeyByKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCartDiscountsByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCartDiscountsKeyByKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCartDiscountsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyOrdersQuotesRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductTailoringRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringImagesRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyProductTailoringImagesRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyProductTailoringRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyProductsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsKeyByKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyQuotesByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyQuotesKeyByKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyQuotesRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyStagedQuotesByIDRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyStagedQuotesKeyByKeyRequestBuilder, ByProjectKeyInStoreKeyByStoreKeyStagedQuotesRequestBuilder, ByProjectKeyInventoryByIDRequestBuilder, ByProjectKeyInventoryKeyByKeyRequestBuilder, ByProjectKeyInventoryRequestBuilder, ByProjectKeyLoginRequestBuilder, ByProjectKeyMeActiveCartRequestBuilder, ByProjectKeyMeBusinessUnitsByIDRequestBuilder, ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder, ByProjectKeyMeBusinessUnitsRequestBuilder, ByProjectKeyMeCartsByIDRequestBuilder, ByProjectKeyMeCartsReplicateRequestBuilder, ByProjectKeyMeCartsRequestBuilder, ByProjectKeyMeEmailConfirmRequestBuilder, ByProjectKeyMeLoginRequestBuilder, ByProjectKeyMeOrdersByIDRequestBuilder, ByProjectKeyMeOrdersQuotesRequestBuilder, ByProjectKeyMeOrdersRequestBuilder, ByProjectKeyMePasswordRequestBuilder, ByProjectKeyMePasswordResetRequestBuilder, ByProjectKeyMePaymentsByIDRequestBuilder, ByProjectKeyMePaymentsRequestBuilder, ByProjectKeyMeQuoteRequestsByIDRequestBuilder, ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder, ByProjectKeyMeQuoteRequestsRequestBuilder, ByProjectKeyMeQuotesByIDRequestBuilder, ByProjectKeyMeQuotesKeyByKeyRequestBuilder, ByProjectKeyMeQuotesRequestBuilder, ByProjectKeyMeRequestBuilder, ByProjectKeyMeShoppingListsByIDRequestBuilder, ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder, ByProjectKeyMeShoppingListsRequestBuilder, ByProjectKeyMeSignupRequestBuilder, ByProjectKeyMessagesByIDRequestBuilder, ByProjectKeyMessagesRequestBuilder, ByProjectKeyOrdersByIDRequestBuilder, ByProjectKeyOrdersEditsByIDApplyRequestBuilder, ByProjectKeyOrdersEditsByIDRequestBuilder, ByProjectKeyOrdersEditsKeyByKeyRequestBuilder, ByProjectKeyOrdersEditsRequestBuilder, ByProjectKeyOrdersImportRequestBuilder, ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder, ByProjectKeyOrdersQuotesRequestBuilder, ByProjectKeyOrdersRequestBuilder, ByProjectKeyOrdersSearchRequestBuilder, ByProjectKeyPaymentsByIDRequestBuilder, ByProjectKeyPaymentsKeyByKeyRequestBuilder, ByProjectKeyPaymentsRequestBuilder, ByProjectKeyProductDiscountsByIDRequestBuilder, ByProjectKeyProductDiscountsKeyByKeyRequestBuilder, ByProjectKeyProductDiscountsMatchingRequestBuilder, ByProjectKeyProductDiscountsRequestBuilder, ByProjectKeyProductProjectionsByIDRequestBuilder, ByProjectKeyProductProjectionsKeyByKeyRequestBuilder, ByProjectKeyProductProjectionsRequestBuilder, ByProjectKeyProductProjectionsSearchRequestBuilder, ByProjectKeyProductProjectionsSuggestRequestBuilder, ByProjectKeyProductSelectionsByIDProductsRequestBuilder, ByProjectKeyProductSelectionsByIDRequestBuilder, ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder, ByProjectKeyProductSelectionsKeyByKeyRequestBuilder, ByProjectKeyProductSelectionsRequestBuilder, ByProjectKeyProductTailoringByIDRequestBuilder, ByProjectKeyProductTailoringKeyByKeyRequestBuilder, ByProjectKeyProductTailoringRequestBuilder, ByProjectKeyProductTypesByIDRequestBuilder, ByProjectKeyProductTypesKeyByKeyRequestBuilder, ByProjectKeyProductTypesRequestBuilder, ByProjectKeyProductsByIDImagesRequestBuilder, ByProjectKeyProductsByIDProductSelectionsRequestBuilder, ByProjectKeyProductsByIDRequestBuilder, ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder, ByProjectKeyProductsKeyByKeyRequestBuilder, ByProjectKeyProductsRequestBuilder, ByProjectKeyProductsSearchRequestBuilder, ByProjectKeyQuoteRequestsByIDRequestBuilder, ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder, ByProjectKeyQuoteRequestsRequestBuilder, ByProjectKeyQuotesByIDRequestBuilder, ByProjectKeyQuotesKeyByKeyRequestBuilder, ByProjectKeyQuotesRequestBuilder, ByProjectKeyRequestBuilder, ByProjectKeyReviewsByIDRequestBuilder, ByProjectKeyReviewsKeyByKeyRequestBuilder, ByProjectKeyReviewsRequestBuilder, ByProjectKeyShippingMethodsByIDRequestBuilder, ByProjectKeyShippingMethodsKeyByKeyRequestBuilder, ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder, ByProjectKeyShippingMethodsMatchingCartRequestBuilder, ByProjectKeyShippingMethodsMatchingLocationRequestBuilder, ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder, ByProjectKeyShippingMethodsRequestBuilder, ByProjectKeyShoppingListsByIDRequestBuilder, ByProjectKeyShoppingListsKeyByKeyRequestBuilder, ByProjectKeyShoppingListsRequestBuilder, ByProjectKeyStagedQuotesByIDRequestBuilder, ByProjectKeyStagedQuotesKeyByKeyRequestBuilder, ByProjectKeyStagedQuotesRequestBuilder, ByProjectKeyStandalonePricesByIDRequestBuilder, ByProjectKeyStandalonePricesKeyByKeyRequestBuilder, ByProjectKeyStandalonePricesRequestBuilder, ByProjectKeyStatesByIDRequestBuilder, ByProjectKeyStatesKeyByKeyRequestBuilder, ByProjectKeyStatesRequestBuilder, ByProjectKeyStoresByIDRequestBuilder, ByProjectKeyStoresKeyByKeyRequestBuilder, ByProjectKeyStoresRequestBuilder, ByProjectKeySubscriptionsByIDHealthRequestBuilder, ByProjectKeySubscriptionsByIDRequestBuilder, ByProjectKeySubscriptionsKeyByKeyRequestBuilder, ByProjectKeySubscriptionsRequestBuilder, ByProjectKeyTaxCategoriesByIDRequestBuilder, ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder, ByProjectKeyTaxCategoriesRequestBuilder, ByProjectKeyTypesByIDRequestBuilder, ByProjectKeyTypesKeyByKeyRequestBuilder, ByProjectKeyTypesRequestBuilder, ByProjectKeyZonesByIDRequestBuilder, ByProjectKeyZonesKeyByKeyRequestBuilder, ByProjectKeyZonesRequestBuilder, CartOriginValues, CartStateValues, ChangeSubscriptionResourceTypeIdValues, ChannelRoleEnumValues, CustomFieldReferenceValueValues, CustomLineItemPriceModeValues, CustomerIndexingStatusValues, CustomerSearchStatusValues, DiscountApplicationModeValues, DiscountCodeStateValues, EventSubscriptionResourceTypeIdValues, EventTypeValues, ExtensionActionValues, ExtensionResourceTypeIdValues, FacetTypesValues, InventoryModeValues, LineItemModeValues, LineItemPriceModeValues, MessageSubscriptionResourceTypeIdValues, MoneyTypeValues, MyQuoteStateValues, OrderSearchCustomTypeValues, OrderSearchMatchTypeValues, OrderSearchSortModeValues, OrderSearchSortOrderValues, OrderSearchStatusValues, OrderStateValues, PaymentStateValues, PermissionValues, ProductPriceModeEnumValues, ProductPublishScopeValues, ProductSearchFacetCountLevelEnumValues, ProductSearchFacetDistinctBucketSortByValues, ProductSearchFacetScopeEnumValues, ProductSearchIndexingModeValues, ProductSelectionModeValues, ProductVariantSelectionTypeEnumValues, QuoteRequestStateValues, QuoteStateValues, ReferenceTypeIdValues, ResourceTypeIdValues, ReturnPaymentStateValues, ReturnShipmentStateValues, RoundingModeValues, SearchFieldTypeValues, SearchIndexingConfigurationStatusValues, SearchMatchTypeValues, SearchSortModeValues, SearchSortOrderValues, SelectionModeValues, ShipmentStateValues, ShippingMethodStateValues, ShippingModeValues, ShippingRateTierTypeValues, StackingModeValues, StagedQuoteStateValues, StateRoleEnumValues, StateTypeEnumValues, SubscriptionHealthStatusValues, TaxCalculationModeValues, TaxModeValues, TermFacetResultTypeValues, TextInputHintValues, TransactionStateValues, TransactionTypeValues, TypeTextInputHintValues, buildRelativeUri, createApiBuilderFromCtpClient, createExecutorFromMiddlewares };\n","import { createClient, type Middleware } from '@commercetools/sdk-client-v2'; // Import Middleware type\nimport { createAuthMiddlewareForClientCredentialsFlow } from '@commercetools/sdk-middleware-auth';\nimport { createHttpMiddleware } from '@commercetools/sdk-middleware-http';\nimport {\n  createApiBuilderFromCtpClient,\n  ByProjectKeyRequestBuilder,\n} from '@commercetools/platform-sdk';\nexport function createCommercetoolsClient() {\n  const projectKey = import.meta.env.VITE_CTP_PROJECT_KEY;\n  const clientId = import.meta.env.VITE_CTP_CLIENT_ID;\n  const clientSecret = import.meta.env.VITE_CTP_CLIENT_SECRET;\n  const authUrl = import.meta.env.VITE_CTP_AUTH_URL;\n  const apiUrl = import.meta.env.VITE_CTP_API_URL;\n  const scopesString = import.meta.env.VITE_CTP_SCOPES;\n  let scopes: string[] | undefined;\n  if (scopesString && projectKey) {\n    scopes = scopesString\n      .split(' ')\n      .map((scope: string) => scope.replace('{projectKey}', projectKey));\n  }\n\n  if (\n    !projectKey ||\n    !clientId ||\n    !clientSecret ||\n    !authUrl ||\n    !apiUrl ||\n    !scopes\n  ) {\n    const missingVars = [\n      !projectKey && 'VITE_CTP_PROJECT_KEY',\n      !clientId && 'VITE_CTP_CLIENT_ID',\n      !clientSecret && 'VITE_CTP_CLIENT_SECRET',\n      !authUrl && 'VITE_CTP_AUTH_URL',\n      !apiUrl && 'VITE_CTP_API_URL',\n      !scopes && 'VITE_CTP_SCOPES',\n    ]\n      .filter(Boolean)\n      .join(', ');\n    throw new Error(\n      `Missing required Commercetools environment variables: ${missingVars}. Ensure they are HAVE IT in your .env file.`\n    );\n  }\n\n  const authMiddleware = createAuthMiddlewareForClientCredentialsFlow({\n    host: authUrl,\n    projectKey,\n    credentials: {\n      clientId,\n      clientSecret,\n    },\n    scopes,\n  });\n\n  const httpMiddleware = createHttpMiddleware({\n    host: apiUrl,\n  });\n\n  const client = createClient({\n    // Cast middleware results to Middleware type\n    middlewares: [authMiddleware as Middleware, httpMiddleware as Middleware],\n  });\n\n  return client;\n}\n\nexport function createApiClient() {\n  const client = createCommercetoolsClient();\n  const projectKey = import.meta.env.VITE_CTP_PROJECT_KEY;\n\n  if (!projectKey) {\n    throw new Error(\n      'Missing required Commercetools environment variable: VITE_CTP_PROJECT_KEY. Ensure it is defined in your .env file and prefixed with VITE_.'\n    );\n  }\n\n  const apiRoot = createApiBuilderFromCtpClient(client).withProjectKey({\n    projectKey,\n  });\n  return apiRoot;\n}\n\n// project info\nexport async function getProject(apiRoot: ByProjectKeyRequestBuilder) {\n  try {\n    const project = await apiRoot.get().execute();\n    console.log('Project Info:', project.body);\n    return project.body;\n  } catch (error) {\n    console.error('Error fetching project info:', error);\n    throw error;\n  }\n}\n\n// list of products\nexport async function getProducts(apiRoot: ByProjectKeyRequestBuilder) {\n  try {\n    const products = await apiRoot.products().get().execute();\n    console.log('Products:', products.body.results);\n    return products.body.results;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n}\n\n// list of categories\nexport async function getCategories(apiRoot: ByProjectKeyRequestBuilder) {\n  try {\n    const categories = await apiRoot.categories().get().execute();\n    console.log('Categories:', categories.body.results);\n    return categories.body.results;\n  } catch (error) {\n    console.error('Error fetching categories:', error);\n    throw error;\n  }\n}\n\n// published products\nexport async function getPublishedProducts(\n  apiRoot: ByProjectKeyRequestBuilder\n) {\n  try {\n    const products = await apiRoot\n      .productProjections()\n      .get({\n        queryArgs: {\n          staged: false,\n        },\n      })\n      .execute();\n    console.log('Published Products:', products.body.results);\n    return products.body.results;\n  } catch (error) {\n    console.error('Error fetching published products:', error);\n    throw error;\n  }\n}\n\n// my orders\nexport async function getMyOrders(apiRoot: ByProjectKeyRequestBuilder) {\n  try {\n    const orders = await apiRoot.me().orders().get().execute();\n    console.log('My Orders:', orders.body.results);\n    return orders.body.results;\n  } catch (error) {\n    console.error('Error fetching my orders:', error);\n    throw error;\n  }\n}\n\n// list of customers ----\nexport async function getCustomers(apiRoot: ByProjectKeyRequestBuilder) {\n  try {\n    const customers = await apiRoot.customers().get().execute();\n    console.log('Customers:', customers.body.results);\n    return customers.body.results;\n  } catch (error) {\n    console.error('Error fetching customers:', error);\n    throw error;\n  }\n}\n","import { createEl } from '../../../utils/elementUtils';\n\nfunction createButton(\n  text: string,\n  parent: HTMLElement,\n  addClasses: string[] = [],\n  type = 'button'\n): HTMLButtonElement {\n  return createEl({\n    tag: 'button',\n    parent,\n    text,\n    classes: ['button', 'border', 'p-2', 'rounded-xl', ...addClasses],\n    attributes: { type },\n  }) as HTMLButtonElement;\n}\n\nexport default createButton;\n","import {\n  createApiClient,\n  getCategories,\n  getPublishedProducts,\n  getMyOrders,\n} from '../../utils/apiCommerse';\nimport createButton from '../ui/button/button';\n\nexport function createCommerceTestComponent(container: HTMLElement): void {\n  const apiRoot = createApiClient();\n\n  const componentDiv = document.createElement('div');\n  componentDiv.classList.add(\n    'commerce-test-component',\n    'p-4',\n    'border',\n    'rounded',\n    'shadow'\n  );\n\n  const title = document.createElement('h2');\n  title.textContent = 'Commercetools API Test';\n  title.classList.add('text-xl', 'font-bold', 'mb-2');\n  componentDiv.appendChild(title);\n\n  const note = document.createElement('p');\n  note.textContent =\n    'Note: This API client has various scopes including view_categories and view_published_products. The \"my_\" scopes require customer authentication.';\n  note.classList.add('text-sm', 'text-gray-600', 'mb-4');\n  componentDiv.appendChild(note);\n\n  const buttonContainer = document.createElement('div');\n  buttonContainer.classList.add('flex', 'space-x-2', 'mb-4');\n\n  const resultsDiv = document.createElement('div');\n  resultsDiv.id = 'api-results';\n  resultsDiv.classList.add(\n    'mt-4',\n    'p-2',\n    'border',\n    'bg-gray-100',\n    'min-h-[100px]',\n    'overflow-auto'\n  );\n  resultsDiv.textContent = 'Click a button to see API results...';\n\n  const displayResults = (data: unknown) => {\n    resultsDiv.textContent = JSON.stringify(data, null, 2);\n  };\n\n  const displayError = (error: unknown) => {\n    resultsDiv.textContent = `Error: ${error instanceof Error ? error.message : String(error)}`;\n    resultsDiv.classList.add('text-red-600');\n  };\n\n  const clearErrorStyle = () => {\n    resultsDiv.classList.remove('text-red-600');\n  };\n\n  const projectButton = createButton(\n    'Get Project Info (Requires view_project_settings scope)',\n    buttonContainer\n  ); // TODO\n  projectButton.disabled = true;\n  projectButton.classList.add('border', 'opacity-50', 'cursor-not-allowed');\n  projectButton.title =\n    'This API client does not have the view_project_settings scope';\n\n  const categoriesButton = createButton('Get Categories', buttonContainer);\n  categoriesButton.addEventListener('click', async () => {\n    clearErrorStyle();\n    resultsDiv.textContent = 'Fetching categories...';\n    try {\n      const data = await getCategories(apiRoot);\n      displayResults(data);\n    } catch (error) {\n      displayError(error);\n    }\n  });\n\n  const publishedProductsButton = createButton(\n    'Get Published Products',\n    buttonContainer\n  );\n  publishedProductsButton.addEventListener('click', async () => {\n    clearErrorStyle();\n    resultsDiv.textContent = 'Fetching published products...';\n    try {\n      const data = await getPublishedProducts(apiRoot);\n      displayResults(data);\n    } catch (error) {\n      displayError(error);\n    }\n  });\n\n  const myOrdersButton = createButton(\n    'Get My Orders (Requires customer auth)',\n    buttonContainer\n  );\n  myOrdersButton.addEventListener('click', async () => {\n    clearErrorStyle();\n    resultsDiv.textContent = 'Fetching my orders...';\n    try {\n      const data = await getMyOrders(apiRoot);\n      displayResults(data);\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('access token')) {\n        displayError(\n          'This endpoint requires customer authentication. The manage_my_orders scope works only with customer tokens, not with client credentials.'\n        );\n      } else {\n        displayError(error);\n      }\n    }\n  });\n\n  // TODO disabled for now\n  const productsButton = createButton('Get All Products', buttonContainer);\n  productsButton.disabled = true;\n  productsButton.classList.add('opacity-50', 'cursor-not-allowed');\n  productsButton.title = 'Requires manage_products scope';\n\n  const customersButton = createButton('Get Customers', buttonContainer);\n  customersButton.disabled = true;\n  customersButton.classList.add('opacity-50', 'cursor-not-allowed');\n  customersButton.title = 'Requires manage_customers scope';\n\n  componentDiv.appendChild(buttonContainer);\n  componentDiv.appendChild(resultsDiv);\n\n  container.appendChild(componentDiv);\n}\n","import { Buffer } from 'buffer/';\ninterface WindowWithBuffer extends Window {\n  Buffer: typeof Buffer;\n}\n\n(window as unknown as WindowWithBuffer).Buffer = Buffer;\nimport '@styles/global.scss';\nimport '@styles/tailwind.css';\n\nimport svgSpriteElement from './sources/svg-sprite';\nimport createFooter from './components/layout/footer/footer';\n// import createButton from './components/ui/button/button';\nimport { createCommerceTestComponent } from './components/test/CommerceTest';\nimport { body } from './utils/elementUtils';\n\nsvgSpriteElement();\n\nconst container = document.createElement('div');\ncontainer.className = 'max-w-4xl mx-auto p-4';\nbody.appendChild(container);\n\nconst h1 = document.createElement('h1');\nh1.textContent = 'E-commerce App';\nh1.className =\n  'font-mono text-3xl font-bold text-blue-600 bg-yellow-200 p-4 m-4 rounded-lg';\ncontainer.appendChild(h1);\n\nconst p = document.createElement('p');\np.textContent = 'Here is CommerceTools tester';\np.className =\n  'font-serif text-lg text-center italic text-gray-500 bg-gray-100 p-2 m-4 rounded';\ncontainer.appendChild(p);\n\n// Add the Commercetools test component\ncreateCommerceTestComponent(container);\ncreateFooter(body);\n\nexport {};\n"],"names":["base64Js","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","code","i","len","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","extraBytes","parts","maxChunkLength","len2","ieee754","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","value","c","rt","base64","require$$0","require$$1","customInspectSymbol","exports","Buffer","SlowBuffer","K_MAX_LENGTH","typedArraySupport","proto","createBuffer","length","buf","arg","encodingOrOffset","allocUnsafe","from","fromString","fromArrayView","isInstance","fromArrayBuffer","valueOf","b","fromObject","assertSize","size","alloc","fill","encoding","checked","string","actual","fromArrayLike","array","arrayView","copy","byteOffset","obj","numberIsNaN","a","x","y","list","pos","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","str","max","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","read","foundIndex","found","j","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","ret","out","hexSliceLookupTable","bytes","newBuf","checkOffset","ext","noAssert","mul","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","checkInt","min","maxBytes","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","limit","sub","checkIEEE754","writeFloat","littleEndian","writeDouble","targetStart","errors","E","sym","getMessage","Base","name","range","input","msg","received","addNumericalSeparator","checkBounds","type","INVALID_BASE64_RE","base64clean","units","leadSurrogate","byteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","body","createEl","options","tag","text","classes","attributes","parent","children","element","key","createSvgUse","idSvgSymbol","elClass","svg","use","svgSprite","svgSpriteElement","svgElement","createFooter","footer","footerContainer","footerLinkGithub","svgGithub","footerLinkRSS","svgRSS","isDefined","clean","_","urlParser","url","object","data","urlStringifier","params","v","parseURLString","parser","stringifyURLString","stringifier","METHODS","validate","funcName","request","_options","PAGE_LIMIT","compose","funcs","func","args","process$1","processOpt","opt","resolve","reject","_path","_queryString","path","queryString","requestQuery","query","hasFirstPageBeenProcessed","itemsToGet","processPage","lastId","acc","originalQueryString","enhancedQuery","enhancedQueryString","enhancedRequest","payload","createClient","results","resultsLength","result","accumulated","newLastId","error","resolver","rq","rs","resObj","buildRequestForClientCredentialsFlow","clientId","clientSecret","scope","basicAuth","oauthUri","buildRequestForPasswordFlow","user","pKey","username","password","scopeStr","buildRequestForRefreshTokenFlow","buildRequestForAnonymousSessionFlow","mergeAuthHeader","token","req","calculateExpirationTime","expiresIn","executeRequest","fetcher","tokenCache","requestState","pendingTasks","response","tokenCacheKey","_res","refreshToken","expirationTime","executionQueue","task","requestWithAuth","authMiddlewareBase","next","userOptions","tokenObj","store","initVal","TokenCacheOption","createAuthMiddlewareForAnonymousSessionFlow$1","buildTokenCacheKey","createAuthMiddlewareForClientCredentialsFlow$1","createAuthMiddlewareWithExistingToken$1","authorization","force","createAuthMiddlewareForPasswordFlow$1","createAuthMiddlewareForRefreshTokenFlow$1","authMiddlewares","createAuthMiddlewareForPasswordFlow","createAuthMiddlewareForAnonymousSessionFlow","createAuthMiddlewareForClientCredentialsFlow","createAuthMiddlewareForRefreshTokenFlow","createAuthMiddlewareWithExistingToken","_typeof","o","_toPrimitive","t","r","_toPropertyKey","_defineProperty","ownKeys","_objectSpread2","_objectWithoutPropertiesLoose","_objectWithoutProperties","defineError","statusCode","message","meta","NetworkError","_len","_key","HttpError","_len2","_key2","BadRequest","_len3","_key3","Unauthorized","_len4","_key4","Forbidden","_len5","_key5","NotFound","_len6","_key6","ConcurrentModification","_len7","_key7","InternalServerError","_len8","_key8","ServiceUnavailable","_len9","_key9","getErrorByCode","parseHeaders","headers","map","_excluded","createError","_ref","rest","errorMessage","ResponseError","calcDelayDuration","retryCount","retryDelay","maxRetries","backoff","maxDelay","maskAuthData","maskSensitiveHeaderData","createHttpMiddleware","_ref2","host","credentialsMode","includeResponseHeaders","includeOriginalRequest","_ref2$maskSensitiveHe","enableRetry","timeout","_ref2$retryConfig","_ref2$retryConfig2","_ref2$retryConfig2$ma","_ref2$retryConfig2$ba","_ref2$retryConfig2$re","_ref2$retryConfig2$ma2","_ref2$retryConfig2$re2","retryOnAbort","_ref2$retryConfig2$re3","retryCodes","_abortController","getAbortController","fetchFunction","abortController","requestHeader","fetchOptions","executeFetch","timer","parsedResponse","err","_options$credentials","_ref$retryConfig","_ref$retryConfig2","_ref$retryConfig2$ret","_ref$retryConfig2$max","_ref$retryConfig2$bac","_ref$retryConfig2$max2","signal","errorResponse","_error","_ref3","retryConfig","stringify","cleanObject","values","formatQueryString","variableMap","buildRelativeUri","commonRequest","pathMap","uri","param","resQuery","ApiRequest","requestExecutor","ByProjectKeyInStoreKeyByStoreKeyMeActiveCartRequestBuilder","methodArgs","ByProjectKeyMeActiveCartRequestBuilder","ByProjectKeyApiClientsByIDRequestBuilder","ByProjectKeyApiClientsRequestBuilder","childPathArgs","ByProjectKeyAsAssociateByAssociateIdBusinessUnitsByIDRequestBuilder","ByProjectKeyAsAssociateByAssociateIdBusinessUnitsKeyByKeyRequestBuilder","ByProjectKeyAsAssociateByAssociateIdBusinessUnitsRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalFlowsByIDRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalFlowsRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesByIDRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesKeyByKeyRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyApprovalRulesRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsReplicateRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsByIDRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsKeyByKeyRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyCartsRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersQuotesRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersByIDRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersOrderNumberByOrderNumberRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyOrdersRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsByIDRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsKeyByKeyRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuoteRequestsRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesByIDRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesKeyByKeyRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyQuotesRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsByIDRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsKeyByKeyRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyShoppingListsRequestBuilder","ByProjectKeyAsAssociateByAssociateIdInBusinessUnitKeyByBusinessUnitKeyRequestBuilder","ByProjectKeyAsAssociateByAssociateIdRequestBuilder","ByProjectKeyAsAssociateRequestBuilder","ByProjectKeyAssociateRolesByIDRequestBuilder","ByProjectKeyAssociateRolesKeyByKeyRequestBuilder","ByProjectKeyAssociateRolesRequestBuilder","ByProjectKeyAttributeGroupsByIDRequestBuilder","ByProjectKeyAttributeGroupsKeyByKeyRequestBuilder","ByProjectKeyAttributeGroupsRequestBuilder","ByProjectKeyBusinessUnitsByBusinessUnitIdAssociatesByAssociateIdRequestBuilder","ByProjectKeyBusinessUnitsKeyByKeyAssociatesByAssociateIdRequestBuilder","ByProjectKeyBusinessUnitsSearchIndexingStatusRequestBuilder","ByProjectKeyBusinessUnitsSearchRequestBuilder","ByProjectKeyBusinessUnitsByIDRequestBuilder","ByProjectKeyBusinessUnitsKeyByKeyRequestBuilder","ByProjectKeyBusinessUnitsRequestBuilder","ByProjectKeyCartDiscountsByIDRequestBuilder","ByProjectKeyCartDiscountsKeyByKeyRequestBuilder","ByProjectKeyCartDiscountsRequestBuilder","ByProjectKeyCartsReplicateRequestBuilder","ByProjectKeyCartsByIDRequestBuilder","ByProjectKeyCartsCustomerIdByCustomerIdRequestBuilder","ByProjectKeyCartsKeyByKeyRequestBuilder","ByProjectKeyCartsRequestBuilder","ByProjectKeyCategoriesByIDRequestBuilder","ByProjectKeyCategoriesKeyByKeyRequestBuilder","ByProjectKeyCategoriesRequestBuilder","ByProjectKeyChannelsByIDRequestBuilder","ByProjectKeyChannelsKeyByKeyRequestBuilder","ByProjectKeyChannelsRequestBuilder","ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder","ByProjectKeyCustomObjectsByContainerRequestBuilder","ByProjectKeyCustomObjectsRequestBuilder","ByProjectKeyCustomerGroupsByIDRequestBuilder","ByProjectKeyCustomerGroupsKeyByKeyRequestBuilder","ByProjectKeyCustomerGroupsRequestBuilder","ByProjectKeyCustomersEmailConfirmRequestBuilder","ByProjectKeyCustomersEmailTokenRequestBuilder","ByProjectKeyCustomersSearchIndexingStatusRequestBuilder","ByProjectKeyCustomersPasswordTokenRequestBuilder","ByProjectKeyCustomersPasswordRequestBuilder","ByProjectKeyCustomersPasswordResetRequestBuilder","ByProjectKeyCustomersSearchRequestBuilder","ByProjectKeyCustomersByIDRequestBuilder","ByProjectKeyCustomersEmailTokenByEmailTokenRequestBuilder","ByProjectKeyCustomersKeyByKeyRequestBuilder","ByProjectKeyCustomersPasswordTokenByPasswordTokenRequestBuilder","ByProjectKeyCustomersRequestBuilder","ByProjectKeyDiscountCodesByIDRequestBuilder","ByProjectKeyDiscountCodesKeyByKeyRequestBuilder","ByProjectKeyDiscountCodesRequestBuilder","ByProjectKeyExtensionsByIDRequestBuilder","ByProjectKeyExtensionsKeyByKeyRequestBuilder","ByProjectKeyExtensionsRequestBuilder","ByProjectKeyGraphqlRequestBuilder","ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeCustomersRequestBuilder","ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyMeRequestBuilder","ByProjectKeyInBusinessUnitKeyByBusinessUnitKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsByBusinessUnitIdAssociatesByAssociateIdRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsKeyByKeyAssociatesByAssociateIdRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyBusinessUnitsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartDiscountsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartDiscountsKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartDiscountsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartsReplicateRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartsCustomerIdByCustomerIdRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartsKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCartsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersEmailConfirmRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordResetRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersEmailTokenByEmailTokenRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersPasswordTokenByPasswordTokenRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyCustomersRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyLoginRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeCartsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeCartsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeEmailConfirmRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeLoginRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeOrdersByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeOrdersRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMePasswordResetRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMePasswordRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeShoppingListsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeSignupRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyMeRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyOrdersQuotesRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyOrdersByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyOrdersOrderNumberByOrderNumberRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyOrdersRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductProjectionsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductProjectionsKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductProjectionsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductSelectionAssignmentsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductTailoringRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringImagesRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDProductTailoringRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductsByProductIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyProductTailoringImagesRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyProductTailoringRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductsKeyByProductKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyProductsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyQuoteRequestsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyQuotesByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyQuotesKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyQuotesRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyShippingMethodsMatchingCartRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyShippingMethodsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyShoppingListsByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyShoppingListsKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyShoppingListsRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyStagedQuotesByIDRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyStagedQuotesKeyByKeyRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyStagedQuotesRequestBuilder","ByProjectKeyInStoreKeyByStoreKeyRequestBuilder","ByProjectKeyInventoryByIDRequestBuilder","ByProjectKeyInventoryKeyByKeyRequestBuilder","ByProjectKeyInventoryRequestBuilder","ByProjectKeyLoginRequestBuilder","ByProjectKeyMeBusinessUnitsByIDRequestBuilder","ByProjectKeyMeBusinessUnitsKeyByKeyRequestBuilder","ByProjectKeyMeBusinessUnitsRequestBuilder","ByProjectKeyMeCartsReplicateRequestBuilder","ByProjectKeyMeCartsByIDRequestBuilder","ByProjectKeyMeCartsRequestBuilder","ByProjectKeyMeEmailConfirmRequestBuilder","ByProjectKeyMeLoginRequestBuilder","ByProjectKeyMeOrdersQuotesRequestBuilder","ByProjectKeyMeOrdersByIDRequestBuilder","ByProjectKeyMeOrdersRequestBuilder","ByProjectKeyMePasswordResetRequestBuilder","ByProjectKeyMePasswordRequestBuilder","ByProjectKeyMePaymentsByIDRequestBuilder","ByProjectKeyMePaymentsRequestBuilder","ByProjectKeyMeQuoteRequestsByIDRequestBuilder","ByProjectKeyMeQuoteRequestsKeyByKeyRequestBuilder","ByProjectKeyMeQuoteRequestsRequestBuilder","ByProjectKeyMeQuotesByIDRequestBuilder","ByProjectKeyMeQuotesKeyByKeyRequestBuilder","ByProjectKeyMeQuotesRequestBuilder","ByProjectKeyMeShoppingListsByIDRequestBuilder","ByProjectKeyMeShoppingListsKeyByKeyRequestBuilder","ByProjectKeyMeShoppingListsRequestBuilder","ByProjectKeyMeSignupRequestBuilder","ByProjectKeyMeRequestBuilder","ByProjectKeyMessagesByIDRequestBuilder","ByProjectKeyMessagesRequestBuilder","ByProjectKeyOrdersEditsByIDApplyRequestBuilder","ByProjectKeyOrdersEditsByIDRequestBuilder","ByProjectKeyOrdersEditsKeyByKeyRequestBuilder","ByProjectKeyOrdersEditsRequestBuilder","ByProjectKeyOrdersImportRequestBuilder","ByProjectKeyOrdersQuotesRequestBuilder","ByProjectKeyOrdersSearchRequestBuilder","ByProjectKeyOrdersByIDRequestBuilder","ByProjectKeyOrdersOrderNumberByOrderNumberRequestBuilder","ByProjectKeyOrdersRequestBuilder","ByProjectKeyPaymentsByIDRequestBuilder","ByProjectKeyPaymentsKeyByKeyRequestBuilder","ByProjectKeyPaymentsRequestBuilder","ByProjectKeyProductDiscountsMatchingRequestBuilder","ByProjectKeyProductDiscountsByIDRequestBuilder","ByProjectKeyProductDiscountsKeyByKeyRequestBuilder","ByProjectKeyProductDiscountsRequestBuilder","ByProjectKeyProductProjectionsSearchRequestBuilder","ByProjectKeyProductProjectionsSuggestRequestBuilder","ByProjectKeyProductProjectionsByIDRequestBuilder","ByProjectKeyProductProjectionsKeyByKeyRequestBuilder","ByProjectKeyProductProjectionsRequestBuilder","ByProjectKeyProductSelectionsByIDProductsRequestBuilder","ByProjectKeyProductSelectionsByIDRequestBuilder","ByProjectKeyProductSelectionsKeyByKeyProductsRequestBuilder","ByProjectKeyProductSelectionsKeyByKeyRequestBuilder","ByProjectKeyProductSelectionsRequestBuilder","ByProjectKeyProductTailoringByIDRequestBuilder","ByProjectKeyProductTailoringKeyByKeyRequestBuilder","ByProjectKeyProductTailoringRequestBuilder","ByProjectKeyProductTypesByIDRequestBuilder","ByProjectKeyProductTypesKeyByKeyRequestBuilder","ByProjectKeyProductTypesRequestBuilder","ByProjectKeyProductsSearchRequestBuilder","ByProjectKeyProductsByIDImagesRequestBuilder","ByProjectKeyProductsByIDProductSelectionsRequestBuilder","ByProjectKeyProductsByIDRequestBuilder","ByProjectKeyProductsKeyByKeyProductSelectionsRequestBuilder","ByProjectKeyProductsKeyByKeyRequestBuilder","ByProjectKeyProductsRequestBuilder","ByProjectKeyQuoteRequestsByIDRequestBuilder","ByProjectKeyQuoteRequestsKeyByKeyRequestBuilder","ByProjectKeyQuoteRequestsRequestBuilder","ByProjectKeyQuotesByIDRequestBuilder","ByProjectKeyQuotesKeyByKeyRequestBuilder","ByProjectKeyQuotesRequestBuilder","ByProjectKeyReviewsByIDRequestBuilder","ByProjectKeyReviewsKeyByKeyRequestBuilder","ByProjectKeyReviewsRequestBuilder","ByProjectKeyShippingMethodsMatchingCartLocationRequestBuilder","ByProjectKeyShippingMethodsMatchingCartRequestBuilder","ByProjectKeyShippingMethodsMatchingLocationRequestBuilder","ByProjectKeyShippingMethodsMatchingOrdereditRequestBuilder","ByProjectKeyShippingMethodsByIDRequestBuilder","ByProjectKeyShippingMethodsKeyByKeyRequestBuilder","ByProjectKeyShippingMethodsRequestBuilder","ByProjectKeyShoppingListsByIDRequestBuilder","ByProjectKeyShoppingListsKeyByKeyRequestBuilder","ByProjectKeyShoppingListsRequestBuilder","ByProjectKeyStagedQuotesByIDRequestBuilder","ByProjectKeyStagedQuotesKeyByKeyRequestBuilder","ByProjectKeyStagedQuotesRequestBuilder","ByProjectKeyStandalonePricesByIDRequestBuilder","ByProjectKeyStandalonePricesKeyByKeyRequestBuilder","ByProjectKeyStandalonePricesRequestBuilder","ByProjectKeyStatesByIDRequestBuilder","ByProjectKeyStatesKeyByKeyRequestBuilder","ByProjectKeyStatesRequestBuilder","ByProjectKeyStoresByIDRequestBuilder","ByProjectKeyStoresKeyByKeyRequestBuilder","ByProjectKeyStoresRequestBuilder","ByProjectKeySubscriptionsByIDHealthRequestBuilder","ByProjectKeySubscriptionsByIDRequestBuilder","ByProjectKeySubscriptionsKeyByKeyRequestBuilder","ByProjectKeySubscriptionsRequestBuilder","ByProjectKeyTaxCategoriesByIDRequestBuilder","ByProjectKeyTaxCategoriesKeyByKeyRequestBuilder","ByProjectKeyTaxCategoriesRequestBuilder","ByProjectKeyTypesByIDRequestBuilder","ByProjectKeyTypesKeyByKeyRequestBuilder","ByProjectKeyTypesRequestBuilder","ByProjectKeyZonesByIDRequestBuilder","ByProjectKeyZonesKeyByKeyRequestBuilder","ByProjectKeyZonesRequestBuilder","ByProjectKeyRequestBuilder","ApiRoot","createApiBuilderFromCtpClient","ctpClient","baseUri","createCommercetoolsClient","projectKey","authUrl","apiUrl","scopesString","scopes","missingVars","authMiddleware","httpMiddleware","createApiClient","client","getCategories","apiRoot","categories","getPublishedProducts","products","getMyOrders","orders","createButton","addClasses","createCommerceTestComponent","container","componentDiv","title","note","buttonContainer","resultsDiv","displayResults","displayError","clearErrorStyle","projectButton","productsButton","customersButton","h1","p"],"mappings":"4vBAEAA,GAAA,WAAqBC,EACrBD,GAAA,YAAsBE,EACtBF,GAAA,cAAwBG,EAOxB,QALIC,EAAS,CAAA,EACTC,EAAY,CAAA,EACZC,EAAM,OAAO,WAAe,IAAc,WAAa,MAEvDC,EAAO,mEACFC,EAAI,EAAGC,EAAMF,EAAK,OAAQC,EAAIC,EAAK,EAAED,EAC5CJ,EAAOI,CAAC,EAAID,EAAKC,CAAC,EAClBH,EAAUE,EAAK,WAAWC,CAAC,CAAC,EAAIA,EAKlCH,EAAU,EAAiB,EAAI,GAC/BA,EAAU,EAAiB,EAAI,GAE/B,SAASK,EAASC,EAAK,CACrB,IAAIF,EAAME,EAAI,OAEd,GAAIF,EAAM,EAAI,EACZ,MAAM,IAAI,MAAM,gDAAgD,EAKlE,IAAIG,EAAWD,EAAI,QAAQ,GAAG,EAC1BC,IAAa,KAAIA,EAAWH,GAEhC,IAAII,EAAkBD,IAAaH,EAC/B,EACA,EAAKG,EAAW,EAEpB,MAAO,CAACA,EAAUC,CAAe,CACnC,CAGA,SAASZ,EAAYU,EAAK,CACxB,IAAIG,EAAOJ,EAAQC,CAAG,EAClBC,EAAWE,EAAK,CAAC,EACjBD,EAAkBC,EAAK,CAAC,EAC5B,OAASF,EAAWC,GAAmB,EAAI,EAAKA,CAClD,CAEA,SAASE,EAAaJ,EAAKC,EAAUC,EAAiB,CACpD,OAASD,EAAWC,GAAmB,EAAI,EAAKA,CAClD,CAEA,SAASX,EAAaS,EAAK,CACzB,IAAIK,EACAF,EAAOJ,EAAQC,CAAG,EAClBC,EAAWE,EAAK,CAAC,EACjBD,EAAkBC,EAAK,CAAC,EAExBG,EAAM,IAAIX,EAAIS,EAAYJ,EAAKC,EAAUC,CAAe,CAAC,EAEzDK,EAAU,EAGVT,EAAMI,EAAkB,EACxBD,EAAW,EACXA,EAEAJ,EACJ,IAAKA,EAAI,EAAGA,EAAIC,EAAKD,GAAK,EACxBQ,EACGX,EAAUM,EAAI,WAAWH,CAAC,CAAC,GAAK,GAChCH,EAAUM,EAAI,WAAWH,EAAI,CAAC,CAAC,GAAK,GACpCH,EAAUM,EAAI,WAAWH,EAAI,CAAC,CAAC,GAAK,EACrCH,EAAUM,EAAI,WAAWH,EAAI,CAAC,CAAC,EACjCS,EAAIC,GAAS,EAAKF,GAAO,GAAM,IAC/BC,EAAIC,GAAS,EAAKF,GAAO,EAAK,IAC9BC,EAAIC,GAAS,EAAIF,EAAM,IAGzB,OAAIH,IAAoB,IACtBG,EACGX,EAAUM,EAAI,WAAWH,CAAC,CAAC,GAAK,EAChCH,EAAUM,EAAI,WAAWH,EAAI,CAAC,CAAC,GAAK,EACvCS,EAAIC,GAAS,EAAIF,EAAM,KAGrBH,IAAoB,IACtBG,EACGX,EAAUM,EAAI,WAAWH,CAAC,CAAC,GAAK,GAChCH,EAAUM,EAAI,WAAWH,EAAI,CAAC,CAAC,GAAK,EACpCH,EAAUM,EAAI,WAAWH,EAAI,CAAC,CAAC,GAAK,EACvCS,EAAIC,GAAS,EAAKF,GAAO,EAAK,IAC9BC,EAAIC,GAAS,EAAIF,EAAM,KAGlBC,CACT,CAEA,SAASE,EAAiBC,EAAK,CAC7B,OAAOhB,EAAOgB,GAAO,GAAK,EAAI,EAC5BhB,EAAOgB,GAAO,GAAK,EAAI,EACvBhB,EAAOgB,GAAO,EAAI,EAAI,EACtBhB,EAAOgB,EAAM,EAAI,CACrB,CAEA,SAASC,EAAaC,EAAOC,EAAOC,EAAK,CAGvC,QAFIR,EACAS,EAAS,CAAA,EACJjB,EAAIe,EAAOf,EAAIgB,EAAKhB,GAAK,EAChCQ,GACIM,EAAMd,CAAC,GAAK,GAAM,WAClBc,EAAMd,EAAI,CAAC,GAAK,EAAK,QACtBc,EAAMd,EAAI,CAAC,EAAI,KAClBiB,EAAO,KAAKN,EAAgBH,CAAG,CAAC,EAElC,OAAOS,EAAO,KAAK,EAAE,CACvB,CAEA,SAAStB,EAAemB,EAAO,CAQ7B,QAPIN,EACAP,EAAMa,EAAM,OACZI,EAAajB,EAAM,EACnBkB,EAAQ,CAAA,EACRC,EAAiB,MAGZpB,EAAI,EAAGqB,EAAOpB,EAAMiB,EAAYlB,EAAIqB,EAAMrB,GAAKoB,EACtDD,EAAM,KAAKN,EAAYC,EAAOd,EAAIA,EAAIoB,EAAkBC,EAAOA,EAAQrB,EAAIoB,CAAe,CAAC,EAI7F,OAAIF,IAAe,GACjBV,EAAMM,EAAMb,EAAM,CAAC,EACnBkB,EAAM,KACJvB,EAAOY,GAAO,CAAC,EACfZ,EAAQY,GAAO,EAAK,EAAI,EACxB,IACN,GACaU,IAAe,IACxBV,GAAOM,EAAMb,EAAM,CAAC,GAAK,GAAKa,EAAMb,EAAM,CAAC,EAC3CkB,EAAM,KACJvB,EAAOY,GAAO,EAAE,EAChBZ,EAAQY,GAAO,EAAK,EAAI,EACxBZ,EAAQY,GAAO,EAAK,EAAI,EACxB,GACN,GAGSW,EAAM,KAAK,EAAE,CACtB,oJCpJYG,GAAA,KAAG,SAAUC,EAAQC,EAAQC,EAAMC,EAAMC,EAAQ,CAC3D,IAAIC,EAAGC,EACHC,EAAQH,EAAS,EAAKD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,EAAQ,GACRjC,EAAIyB,EAAQE,EAAS,EAAK,EAC1BO,EAAIT,EAAO,GAAK,EAChBU,EAAIZ,EAAOC,EAASxB,CAAC,EAOzB,IALAA,GAAKkC,EAELN,EAAIO,GAAM,GAAM,CAACF,GAAU,EAC3BE,IAAO,CAACF,EACRA,GAASH,EACFG,EAAQ,EAAGL,EAAKA,EAAI,IAAOL,EAAOC,EAASxB,CAAC,EAAGA,GAAKkC,EAAGD,GAAS,EAAG,CAK1E,IAHAJ,EAAID,GAAM,GAAM,CAACK,GAAU,EAC3BL,IAAO,CAACK,EACRA,GAASP,EACFO,EAAQ,EAAGJ,EAAKA,EAAI,IAAON,EAAOC,EAASxB,CAAC,EAAGA,GAAKkC,EAAGD,GAAS,EAAG,CAE1E,GAAIL,IAAM,EACRA,EAAI,EAAII,MACH,IAAIJ,IAAMG,EACf,OAAOF,EAAI,KAAQM,EAAI,GAAK,GAAK,MAEjCN,EAAIA,EAAI,KAAK,IAAI,EAAGH,CAAI,EACxBE,EAAIA,EAAII,EAEV,OAAQG,EAAI,GAAK,GAAKN,EAAI,KAAK,IAAI,EAAGD,EAAIF,CAAI,CAChD,EAEAJ,GAAA,MAAgB,SAAUC,EAAQa,EAAOZ,EAAQC,EAAMC,EAAMC,EAAQ,CACnE,IAAIC,EAAGC,EAAGQ,EACNP,EAAQH,EAAS,EAAKD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBO,EAAMZ,IAAS,GAAK,KAAK,IAAI,EAAG,GAAG,EAAI,KAAK,IAAI,EAAG,GAAG,EAAI,EAC1D1B,EAAIyB,EAAO,EAAKE,EAAS,EACzBO,EAAIT,EAAO,EAAI,GACfU,EAAIC,EAAQ,GAAMA,IAAU,GAAK,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQ,KAAK,IAAIA,CAAK,EAElB,MAAMA,CAAK,GAAKA,IAAU,KAC5BP,EAAI,MAAMO,CAAK,EAAI,EAAI,EACvBR,EAAIG,IAEJH,EAAI,KAAK,MAAM,KAAK,IAAIQ,CAAK,EAAI,KAAK,GAAG,EACrCA,GAASC,EAAI,KAAK,IAAI,EAAG,CAACT,CAAC,GAAK,IAClCA,IACAS,GAAK,GAEHT,EAAII,GAAS,EACfI,GAASE,EAAKD,EAEdD,GAASE,EAAK,KAAK,IAAI,EAAG,EAAIN,CAAK,EAEjCI,EAAQC,GAAK,IACfT,IACAS,GAAK,GAGHT,EAAII,GAASD,GACfF,EAAI,EACJD,EAAIG,GACKH,EAAII,GAAS,GACtBH,GAAMO,EAAQC,EAAK,GAAK,KAAK,IAAI,EAAGX,CAAI,EACxCE,EAAIA,EAAII,IAERH,EAAIO,EAAQ,KAAK,IAAI,EAAGJ,EAAQ,CAAC,EAAI,KAAK,IAAI,EAAGN,CAAI,EACrDE,EAAI,IAIDF,GAAQ,EAAGH,EAAOC,EAASxB,CAAC,EAAI6B,EAAI,IAAM7B,GAAKkC,EAAGL,GAAK,IAAKH,GAAQ,EAAG,CAI9E,IAFAE,EAAKA,GAAKF,EAAQG,EAClBC,GAAQJ,EACDI,EAAO,EAAGP,EAAOC,EAASxB,CAAC,EAAI4B,EAAI,IAAM5B,GAAKkC,EAAGN,GAAK,IAAKE,GAAQ,EAAG,CAE7EP,EAAOC,EAASxB,EAAIkC,CAAC,GAAKC,EAAI,GAChC;;;;;qDC1EA,MAAMI,EAASC,GAAA,EACTlB,EAAUmB,GAAA,EACVC,EACH,OAAO,QAAW,YAAc,OAAO,OAAO,KAAW,WACtD,OAAO,IAAO,4BAA4B,EAC1C,KAENC,EAAiB,OAAAC,EACjBD,EAAqB,WAAAE,EACrBF,EAA4B,kBAAA,GAE5B,MAAMG,EAAe,WACrBH,EAAqB,WAAAG,EAgBrBF,EAAO,oBAAsBG,EAAiB,EAE1C,CAACH,EAAO,qBAAuB,OAAO,QAAY,KAClD,OAAO,QAAQ,OAAU,YAC3B,QAAQ,MACN,+IAEJ,EAGA,SAASG,GAAqB,CAE5B,GAAI,CACF,MAAMtC,EAAM,IAAI,WAAW,CAAC,EACtBuC,EAAQ,CAAE,IAAK,UAAY,CAAE,MAAO,GAAI,CAAA,EAC9C,cAAO,eAAeA,EAAO,WAAW,SAAS,EACjD,OAAO,eAAevC,EAAKuC,CAAK,EACzBvC,EAAI,QAAU,EACtB,MAAW,CACV,MAAO,EACX,CACA,CAEA,OAAO,eAAemC,EAAO,UAAW,SAAU,CAChD,WAAY,GACZ,IAAK,UAAY,CACf,GAAKA,EAAO,SAAS,IAAI,EACzB,OAAO,KAAK,MAChB,CACC,CAAA,EAED,OAAO,eAAeA,EAAO,UAAW,SAAU,CAChD,WAAY,GACZ,IAAK,UAAY,CACf,GAAKA,EAAO,SAAS,IAAI,EACzB,OAAO,KAAK,UAChB,CACC,CAAA,EAED,SAASK,EAAcC,EAAQ,CAC7B,GAAIA,EAASJ,EACX,MAAM,IAAI,WAAW,cAAgBI,EAAS,gCAAgC,EAGhF,MAAMC,EAAM,IAAI,WAAWD,CAAM,EACjC,cAAO,eAAeC,EAAKP,EAAO,SAAS,EACpCO,CACT,CAYA,SAASP,EAAQQ,EAAKC,EAAkBH,EAAQ,CAE9C,GAAI,OAAOE,GAAQ,SAAU,CAC3B,GAAI,OAAOC,GAAqB,SAC9B,MAAM,IAAI,UACR,oEACR,EAEI,OAAOC,EAAYF,CAAG,CAC1B,CACE,OAAOG,EAAKH,EAAKC,EAAkBH,CAAM,CAC3C,CAEAN,EAAO,SAAW,KAElB,SAASW,EAAMnB,EAAOiB,EAAkBH,EAAQ,CAC9C,GAAI,OAAOd,GAAU,SACnB,OAAOoB,EAAWpB,EAAOiB,CAAgB,EAG3C,GAAI,YAAY,OAAOjB,CAAK,EAC1B,OAAOqB,EAAcrB,CAAK,EAG5B,GAAIA,GAAS,KACX,MAAM,IAAI,UACR,kHAC0C,OAAOA,CACvD,EAQE,GALIsB,GAAWtB,EAAO,WAAW,GAC5BA,GAASsB,GAAWtB,EAAM,OAAQ,WAAW,GAI9C,OAAO,kBAAsB,MAC5BsB,GAAWtB,EAAO,iBAAiB,GACnCA,GAASsB,GAAWtB,EAAM,OAAQ,iBAAiB,GACtD,OAAOuB,EAAgBvB,EAAOiB,EAAkBH,CAAM,EAGxD,GAAI,OAAOd,GAAU,SACnB,MAAM,IAAI,UACR,uEACN,EAGE,MAAMwB,EAAUxB,EAAM,SAAWA,EAAM,QAAO,EAC9C,GAAIwB,GAAW,MAAQA,IAAYxB,EACjC,OAAOQ,EAAO,KAAKgB,EAASP,EAAkBH,CAAM,EAGtD,MAAMW,EAAIC,EAAW1B,CAAK,EAC1B,GAAIyB,EAAG,OAAOA,EAEd,GAAI,OAAO,OAAW,KAAe,OAAO,aAAe,MACvD,OAAOzB,EAAM,OAAO,WAAW,GAAM,WACvC,OAAOQ,EAAO,KAAKR,EAAM,OAAO,WAAW,EAAE,QAAQ,EAAGiB,EAAkBH,CAAM,EAGlF,MAAM,IAAI,UACR,kHAC0C,OAAOd,CACrD,CACA,CAUAQ,EAAO,KAAO,SAAUR,EAAOiB,EAAkBH,EAAQ,CACvD,OAAOK,EAAKnB,EAAOiB,EAAkBH,CAAM,CAC7C,EAIA,OAAO,eAAeN,EAAO,UAAW,WAAW,SAAS,EAC5D,OAAO,eAAeA,EAAQ,UAAU,EAExC,SAASmB,EAAYC,EAAM,CACzB,GAAI,OAAOA,GAAS,SAClB,MAAM,IAAI,UAAU,wCAAwC,EACvD,GAAIA,EAAO,EAChB,MAAM,IAAI,WAAW,cAAgBA,EAAO,gCAAgC,CAEhF,CAEA,SAASC,EAAOD,EAAME,EAAMC,EAAU,CAEpC,OADAJ,EAAWC,CAAI,EACXA,GAAQ,EACHf,EAAae,CAAI,EAEtBE,IAAS,OAIJ,OAAOC,GAAa,SACvBlB,EAAae,CAAI,EAAE,KAAKE,EAAMC,CAAQ,EACtClB,EAAae,CAAI,EAAE,KAAKE,CAAI,EAE3BjB,EAAae,CAAI,CAC1B,CAMApB,EAAO,MAAQ,SAAUoB,EAAME,EAAMC,EAAU,CAC7C,OAAOF,EAAMD,EAAME,EAAMC,CAAQ,CACnC,EAEA,SAASb,EAAaU,EAAM,CAC1B,OAAAD,EAAWC,CAAI,EACRf,EAAae,EAAO,EAAI,EAAII,EAAQJ,CAAI,EAAI,CAAC,CACtD,CAKApB,EAAO,YAAc,SAAUoB,EAAM,CACnC,OAAOV,EAAYU,CAAI,CACzB,EAIApB,EAAO,gBAAkB,SAAUoB,EAAM,CACvC,OAAOV,EAAYU,CAAI,CACzB,EAEA,SAASR,EAAYa,EAAQF,EAAU,CAKrC,IAJI,OAAOA,GAAa,UAAYA,IAAa,MAC/CA,EAAW,QAGT,CAACvB,EAAO,WAAWuB,CAAQ,EAC7B,MAAM,IAAI,UAAU,qBAAuBA,CAAQ,EAGrD,MAAMjB,EAASzD,EAAW4E,EAAQF,CAAQ,EAAI,EAC9C,IAAIhB,EAAMF,EAAaC,CAAM,EAE7B,MAAMoB,EAASnB,EAAI,MAAMkB,EAAQF,CAAQ,EAEzC,OAAIG,IAAWpB,IAIbC,EAAMA,EAAI,MAAM,EAAGmB,CAAM,GAGpBnB,CACT,CAEA,SAASoB,EAAeC,EAAO,CAC7B,MAAMtB,EAASsB,EAAM,OAAS,EAAI,EAAIJ,EAAQI,EAAM,MAAM,EAAI,EACxDrB,EAAMF,EAAaC,CAAM,EAC/B,QAASlD,EAAI,EAAGA,EAAIkD,EAAQlD,GAAK,EAC/BmD,EAAInD,CAAC,EAAIwE,EAAMxE,CAAC,EAAI,IAEtB,OAAOmD,CACT,CAEA,SAASM,EAAegB,EAAW,CACjC,GAAIf,GAAWe,EAAW,UAAU,EAAG,CACrC,MAAMC,EAAO,IAAI,WAAWD,CAAS,EACrC,OAAOd,EAAgBe,EAAK,OAAQA,EAAK,WAAYA,EAAK,UAAU,CACxE,CACE,OAAOH,EAAcE,CAAS,CAChC,CAEA,SAASd,EAAiBa,EAAOG,EAAYzB,EAAQ,CACnD,GAAIyB,EAAa,GAAKH,EAAM,WAAaG,EACvC,MAAM,IAAI,WAAW,sCAAsC,EAG7D,GAAIH,EAAM,WAAaG,GAAczB,GAAU,GAC7C,MAAM,IAAI,WAAW,sCAAsC,EAG7D,IAAIC,EACJ,OAAIwB,IAAe,QAAazB,IAAW,OACzCC,EAAM,IAAI,WAAWqB,CAAK,EACjBtB,IAAW,OACpBC,EAAM,IAAI,WAAWqB,EAAOG,CAAU,EAEtCxB,EAAM,IAAI,WAAWqB,EAAOG,EAAYzB,CAAM,EAIhD,OAAO,eAAeC,EAAKP,EAAO,SAAS,EAEpCO,CACT,CAEA,SAASW,EAAYc,EAAK,CACxB,GAAIhC,EAAO,SAASgC,CAAG,EAAG,CACxB,MAAM3E,EAAMmE,EAAQQ,EAAI,MAAM,EAAI,EAC5BzB,EAAMF,EAAahD,CAAG,EAE5B,OAAIkD,EAAI,SAAW,GAInByB,EAAI,KAAKzB,EAAK,EAAG,EAAGlD,CAAG,EAChBkD,CACX,CAEE,GAAIyB,EAAI,SAAW,OACjB,OAAI,OAAOA,EAAI,QAAW,UAAYC,GAAYD,EAAI,MAAM,EACnD3B,EAAa,CAAC,EAEhBsB,EAAcK,CAAG,EAG1B,GAAIA,EAAI,OAAS,UAAY,MAAM,QAAQA,EAAI,IAAI,EACjD,OAAOL,EAAcK,EAAI,IAAI,CAEjC,CAEA,SAASR,EAASlB,EAAQ,CAGxB,GAAIA,GAAUJ,EACZ,MAAM,IAAI,WAAW,0DACaA,EAAa,SAAS,EAAE,EAAI,QAAQ,EAExE,OAAOI,EAAS,CAClB,CAEA,SAASL,EAAYK,EAAQ,CAC3B,MAAI,CAACA,GAAUA,IACbA,EAAS,GAEJN,EAAO,MAAM,CAACM,CAAM,CAC7B,CAEAN,EAAO,SAAW,SAAmBiB,EAAG,CACtC,OAAOA,GAAK,MAAQA,EAAE,YAAc,IAClCA,IAAMjB,EAAO,SACjB,EAEAA,EAAO,QAAU,SAAkBkC,EAAGjB,EAAG,CAGvC,GAFIH,GAAWoB,EAAG,UAAU,IAAGA,EAAIlC,EAAO,KAAKkC,EAAGA,EAAE,OAAQA,EAAE,UAAU,GACpEpB,GAAWG,EAAG,UAAU,IAAGA,EAAIjB,EAAO,KAAKiB,EAAGA,EAAE,OAAQA,EAAE,UAAU,GACpE,CAACjB,EAAO,SAASkC,CAAC,GAAK,CAAClC,EAAO,SAASiB,CAAC,EAC3C,MAAM,IAAI,UACR,uEACN,EAGE,GAAIiB,IAAMjB,EAAG,MAAO,GAEpB,IAAIkB,EAAID,EAAE,OACNE,EAAInB,EAAE,OAEV,QAAS7D,EAAI,EAAGC,EAAM,KAAK,IAAI8E,EAAGC,CAAC,EAAGhF,EAAIC,EAAK,EAAED,EAC/C,GAAI8E,EAAE9E,CAAC,IAAM6D,EAAE7D,CAAC,EAAG,CACjB+E,EAAID,EAAE9E,CAAC,EACPgF,EAAInB,EAAE7D,CAAC,EACP,KACN,CAGE,OAAI+E,EAAIC,EAAU,GACdA,EAAID,EAAU,EACX,CACT,EAEAnC,EAAO,WAAa,SAAqBuB,EAAU,CACjD,OAAQ,OAAOA,CAAQ,EAAE,YAAa,EAAA,CACpC,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,MAAO,GACT,QACE,MAAO,EACb,CACA,EAEAvB,EAAO,OAAS,SAAiBqC,EAAM/B,EAAQ,CAC7C,GAAI,CAAC,MAAM,QAAQ+B,CAAI,EACrB,MAAM,IAAI,UAAU,6CAA6C,EAGnE,GAAIA,EAAK,SAAW,EAClB,OAAOrC,EAAO,MAAM,CAAC,EAGvB,IAAI5C,EACJ,GAAIkD,IAAW,OAEb,IADAA,EAAS,EACJlD,EAAI,EAAGA,EAAIiF,EAAK,OAAQ,EAAEjF,EAC7BkD,GAAU+B,EAAKjF,CAAC,EAAE,OAItB,MAAMuB,EAASqB,EAAO,YAAYM,CAAM,EACxC,IAAIgC,EAAM,EACV,IAAKlF,EAAI,EAAGA,EAAIiF,EAAK,OAAQ,EAAEjF,EAAG,CAChC,IAAImD,EAAM8B,EAAKjF,CAAC,EAChB,GAAI0D,GAAWP,EAAK,UAAU,EACxB+B,EAAM/B,EAAI,OAAS5B,EAAO,QACvBqB,EAAO,SAASO,CAAG,IAAGA,EAAMP,EAAO,KAAKO,CAAG,GAChDA,EAAI,KAAK5B,EAAQ2D,CAAG,GAEpB,WAAW,UAAU,IAAI,KACvB3D,EACA4B,EACA+B,CACV,UAEgBtC,EAAO,SAASO,CAAG,EAG7BA,EAAI,KAAK5B,EAAQ2D,CAAG,MAFpB,OAAM,IAAI,UAAU,6CAA6C,EAInEA,GAAO/B,EAAI,MACf,CACE,OAAO5B,CACT,EAEA,SAAS9B,EAAY4E,EAAQF,EAAU,CACrC,GAAIvB,EAAO,SAASyB,CAAM,EACxB,OAAOA,EAAO,OAEhB,GAAI,YAAY,OAAOA,CAAM,GAAKX,GAAWW,EAAQ,WAAW,EAC9D,OAAOA,EAAO,WAEhB,GAAI,OAAOA,GAAW,SACpB,MAAM,IAAI,UACR,2FACmB,OAAOA,CAChC,EAGE,MAAMpE,EAAMoE,EAAO,OACbc,EAAa,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,GAC5D,GAAI,CAACA,GAAalF,IAAQ,EAAG,MAAO,GAGpC,IAAImF,EAAc,GAClB,OACE,OAAQjB,EAAQ,CACd,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOlE,EACT,IAAK,OACL,IAAK,QACH,OAAOoF,GAAYhB,CAAM,EAAE,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOpE,EAAM,EACf,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOqF,GAAcjB,CAAM,EAAE,OAC/B,QACE,GAAIe,EACF,OAAOD,EAAY,GAAKE,GAAYhB,CAAM,EAAE,OAE9CF,GAAY,GAAKA,GAAU,YAAW,EACtCiB,EAAc,EACtB,CAEA,CACAxC,EAAO,WAAanD,EAEpB,SAAS8F,EAAcpB,EAAUpD,EAAOC,EAAK,CAC3C,IAAIoE,EAAc,GA8BlB,IArBIrE,IAAU,QAAaA,EAAQ,KACjCA,EAAQ,GAINA,EAAQ,KAAK,UAIbC,IAAQ,QAAaA,EAAM,KAAK,UAClCA,EAAM,KAAK,QAGTA,GAAO,KAKXA,KAAS,EACTD,KAAW,EAEPC,GAAOD,GACT,MAAO,GAKT,IAFKoD,IAAUA,EAAW,UAGxB,OAAQA,EAAQ,CACd,IAAK,MACH,OAAOqB,EAAS,KAAMzE,EAAOC,CAAG,EAElC,IAAK,OACL,IAAK,QACH,OAAOyE,EAAU,KAAM1E,EAAOC,CAAG,EAEnC,IAAK,QACH,OAAO0E,GAAW,KAAM3E,EAAOC,CAAG,EAEpC,IAAK,SACL,IAAK,SACH,OAAO2E,GAAY,KAAM5E,EAAOC,CAAG,EAErC,IAAK,SACH,OAAO4E,EAAY,KAAM7E,EAAOC,CAAG,EAErC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO6E,GAAa,KAAM9E,EAAOC,CAAG,EAEtC,QACE,GAAIoE,EAAa,MAAM,IAAI,UAAU,qBAAuBjB,CAAQ,EACpEA,GAAYA,EAAW,IAAI,YAAW,EACtCiB,EAAc,EACtB,CAEA,CAQAxC,EAAO,UAAU,UAAY,GAE7B,SAASkD,EAAMjC,EAAGkC,EAAGlE,EAAG,CACtB,MAAM7B,EAAI6D,EAAEkC,CAAC,EACblC,EAAEkC,CAAC,EAAIlC,EAAEhC,CAAC,EACVgC,EAAEhC,CAAC,EAAI7B,CACT,CAEA4C,EAAO,UAAU,OAAS,UAAmB,CAC3C,MAAM3C,EAAM,KAAK,OACjB,GAAIA,EAAM,IAAM,EACd,MAAM,IAAI,WAAW,2CAA2C,EAElE,QAASD,EAAI,EAAGA,EAAIC,EAAKD,GAAK,EAC5B8F,EAAK,KAAM9F,EAAGA,EAAI,CAAC,EAErB,OAAO,IACT,EAEA4C,EAAO,UAAU,OAAS,UAAmB,CAC3C,MAAM3C,EAAM,KAAK,OACjB,GAAIA,EAAM,IAAM,EACd,MAAM,IAAI,WAAW,2CAA2C,EAElE,QAASD,EAAI,EAAGA,EAAIC,EAAKD,GAAK,EAC5B8F,EAAK,KAAM9F,EAAGA,EAAI,CAAC,EACnB8F,EAAK,KAAM9F,EAAI,EAAGA,EAAI,CAAC,EAEzB,OAAO,IACT,EAEA4C,EAAO,UAAU,OAAS,UAAmB,CAC3C,MAAM3C,EAAM,KAAK,OACjB,GAAIA,EAAM,IAAM,EACd,MAAM,IAAI,WAAW,2CAA2C,EAElE,QAASD,EAAI,EAAGA,EAAIC,EAAKD,GAAK,EAC5B8F,EAAK,KAAM9F,EAAGA,EAAI,CAAC,EACnB8F,EAAK,KAAM9F,EAAI,EAAGA,EAAI,CAAC,EACvB8F,EAAK,KAAM9F,EAAI,EAAGA,EAAI,CAAC,EACvB8F,EAAK,KAAM9F,EAAI,EAAGA,EAAI,CAAC,EAEzB,OAAO,IACT,EAEA4C,EAAO,UAAU,SAAW,UAAqB,CAC/C,MAAMM,EAAS,KAAK,OACpB,OAAIA,IAAW,EAAU,GACrB,UAAU,SAAW,EAAUuC,EAAU,KAAM,EAAGvC,CAAM,EACrDqC,EAAa,MAAM,KAAM,SAAS,CAC3C,EAEA3C,EAAO,UAAU,eAAiBA,EAAO,UAAU,SAEnDA,EAAO,UAAU,OAAS,SAAiBiB,EAAG,CAC5C,GAAI,CAACjB,EAAO,SAASiB,CAAC,EAAG,MAAM,IAAI,UAAU,2BAA2B,EACxE,OAAI,OAASA,EAAU,GAChBjB,EAAO,QAAQ,KAAMiB,CAAC,IAAM,CACrC,EAEAjB,EAAO,UAAU,QAAU,UAAoB,CAC7C,IAAIoD,EAAM,GACV,MAAMC,EAAMtD,EAAQ,kBACpB,OAAAqD,EAAM,KAAK,SAAS,MAAO,EAAGC,CAAG,EAAE,QAAQ,UAAW,KAAK,EAAE,KAAI,EAC7D,KAAK,OAASA,IAAKD,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACItD,IACFE,EAAO,UAAUF,CAAmB,EAAIE,EAAO,UAAU,SAG3DA,EAAO,UAAU,QAAU,SAAkBsD,EAAQnF,EAAOC,EAAKmF,EAAWC,EAAS,CAInF,GAHI1C,GAAWwC,EAAQ,UAAU,IAC/BA,EAAStD,EAAO,KAAKsD,EAAQA,EAAO,OAAQA,EAAO,UAAU,GAE3D,CAACtD,EAAO,SAASsD,CAAM,EACzB,MAAM,IAAI,UACR,iFACoB,OAAOA,CACjC,EAgBE,GAbInF,IAAU,SACZA,EAAQ,GAENC,IAAQ,SACVA,EAAMkF,EAASA,EAAO,OAAS,GAE7BC,IAAc,SAChBA,EAAY,GAEVC,IAAY,SACdA,EAAU,KAAK,QAGbrF,EAAQ,GAAKC,EAAMkF,EAAO,QAAUC,EAAY,GAAKC,EAAU,KAAK,OACtE,MAAM,IAAI,WAAW,oBAAoB,EAG3C,GAAID,GAAaC,GAAWrF,GAASC,EACnC,MAAO,GAET,GAAImF,GAAaC,EACf,MAAO,GAET,GAAIrF,GAASC,EACX,MAAO,GAQT,GALAD,KAAW,EACXC,KAAS,EACTmF,KAAe,EACfC,KAAa,EAET,OAASF,EAAQ,MAAO,GAE5B,IAAInB,EAAIqB,EAAUD,EACdnB,EAAIhE,EAAMD,EACd,MAAMd,EAAM,KAAK,IAAI8E,EAAGC,CAAC,EAEnBqB,EAAW,KAAK,MAAMF,EAAWC,CAAO,EACxCE,EAAaJ,EAAO,MAAMnF,EAAOC,CAAG,EAE1C,QAAShB,EAAI,EAAGA,EAAIC,EAAK,EAAED,EACzB,GAAIqG,EAASrG,CAAC,IAAMsG,EAAWtG,CAAC,EAAG,CACjC+E,EAAIsB,EAASrG,CAAC,EACdgF,EAAIsB,EAAWtG,CAAC,EAChB,KACN,CAGE,OAAI+E,EAAIC,EAAU,GACdA,EAAID,EAAU,EACX,CACT,EAWA,SAASwB,EAAsBhF,EAAQiF,EAAK7B,EAAYR,EAAUsC,EAAK,CAErE,GAAIlF,EAAO,SAAW,EAAG,MAAO,GAmBhC,GAhBI,OAAOoD,GAAe,UACxBR,EAAWQ,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,EAAa,cACtBA,EAAa,aAEfA,EAAa,CAACA,EACVE,GAAYF,CAAU,IAExBA,EAAa8B,EAAM,EAAKlF,EAAO,OAAS,GAItCoD,EAAa,IAAGA,EAAapD,EAAO,OAASoD,GAC7CA,GAAcpD,EAAO,OAAQ,CAC/B,GAAIkF,EAAK,MAAO,GACX9B,EAAapD,EAAO,OAAS,CACtC,SAAaoD,EAAa,EACtB,GAAI8B,EAAK9B,EAAa,MACjB,OAAO,GASd,GALI,OAAO6B,GAAQ,WACjBA,EAAM5D,EAAO,KAAK4D,EAAKrC,CAAQ,GAI7BvB,EAAO,SAAS4D,CAAG,EAErB,OAAIA,EAAI,SAAW,EACV,GAEFE,EAAanF,EAAQiF,EAAK7B,EAAYR,EAAUsC,CAAG,EACrD,GAAI,OAAOD,GAAQ,SAExB,OADAA,EAAMA,EAAM,IACR,OAAO,WAAW,UAAU,SAAY,WACtCC,EACK,WAAW,UAAU,QAAQ,KAAKlF,EAAQiF,EAAK7B,CAAU,EAEzD,WAAW,UAAU,YAAY,KAAKpD,EAAQiF,EAAK7B,CAAU,EAGjE+B,EAAanF,EAAQ,CAACiF,CAAG,EAAG7B,EAAYR,EAAUsC,CAAG,EAG9D,MAAM,IAAI,UAAU,sCAAsC,CAC5D,CAEA,SAASC,EAAcjG,EAAK+F,EAAK7B,EAAYR,EAAUsC,EAAK,CAC1D,IAAIE,EAAY,EACZC,EAAYnG,EAAI,OAChBoG,EAAYL,EAAI,OAEpB,GAAIrC,IAAa,SACfA,EAAW,OAAOA,CAAQ,EAAE,YAAW,EACnCA,IAAa,QAAUA,IAAa,SACpCA,IAAa,WAAaA,IAAa,YAAY,CACrD,GAAI1D,EAAI,OAAS,GAAK+F,EAAI,OAAS,EACjC,MAAO,GAETG,EAAY,EACZC,GAAa,EACbC,GAAa,EACblC,GAAc,CACpB,CAGE,SAASmC,EAAM3D,EAAKnD,EAAG,CACrB,OAAI2G,IAAc,EACTxD,EAAInD,CAAC,EAELmD,EAAI,aAAanD,EAAI2G,CAAS,CAE3C,CAEE,IAAI3G,EACJ,GAAIyG,EAAK,CACP,IAAIM,EAAa,GACjB,IAAK/G,EAAI2E,EAAY3E,EAAI4G,EAAW5G,IAClC,GAAI8G,EAAKrG,EAAKT,CAAC,IAAM8G,EAAKN,EAAKO,IAAe,GAAK,EAAI/G,EAAI+G,CAAU,GAEnE,GADIA,IAAe,KAAIA,EAAa/G,GAChCA,EAAI+G,EAAa,IAAMF,EAAW,OAAOE,EAAaJ,OAEtDI,IAAe,KAAI/G,GAAKA,EAAI+G,GAChCA,EAAa,EAGrB,KAEI,KADIpC,EAAakC,EAAYD,IAAWjC,EAAaiC,EAAYC,GAC5D7G,EAAI2E,EAAY3E,GAAK,EAAGA,IAAK,CAChC,IAAIgH,EAAQ,GACZ,QAASC,EAAI,EAAGA,EAAIJ,EAAWI,IAC7B,GAAIH,EAAKrG,EAAKT,EAAIiH,CAAC,IAAMH,EAAKN,EAAKS,CAAC,EAAG,CACrCD,EAAQ,GACR,KACV,CAEM,GAAIA,EAAO,OAAOhH,CACxB,CAGE,MAAO,EACT,CAEA4C,EAAO,UAAU,SAAW,SAAmB4D,EAAK7B,EAAYR,EAAU,CACxE,OAAO,KAAK,QAAQqC,EAAK7B,EAAYR,CAAQ,IAAM,EACrD,EAEAvB,EAAO,UAAU,QAAU,SAAkB4D,EAAK7B,EAAYR,EAAU,CACtE,OAAOoC,EAAqB,KAAMC,EAAK7B,EAAYR,EAAU,EAAI,CACnE,EAEAvB,EAAO,UAAU,YAAc,SAAsB4D,EAAK7B,EAAYR,EAAU,CAC9E,OAAOoC,EAAqB,KAAMC,EAAK7B,EAAYR,EAAU,EAAK,CACpE,EAEA,SAAS+C,EAAU/D,EAAKkB,EAAQ7C,EAAQ0B,EAAQ,CAC9C1B,EAAS,OAAOA,CAAM,GAAK,EAC3B,MAAM2F,EAAYhE,EAAI,OAAS3B,EAC1B0B,GAGHA,EAAS,OAAOA,CAAM,EAClBA,EAASiE,IACXjE,EAASiE,IAJXjE,EAASiE,EAQX,MAAMC,EAAS/C,EAAO,OAElBnB,EAASkE,EAAS,IACpBlE,EAASkE,EAAS,GAEpB,IAAIpH,EACJ,IAAKA,EAAI,EAAGA,EAAIkD,EAAQ,EAAElD,EAAG,CAC3B,MAAMqH,EAAS,SAAShD,EAAO,OAAOrE,EAAI,EAAG,CAAC,EAAG,EAAE,EACnD,GAAI6E,GAAYwC,CAAM,EAAG,OAAOrH,EAChCmD,EAAI3B,EAASxB,CAAC,EAAIqH,CACtB,CACE,OAAOrH,CACT,CAEA,SAASsH,EAAWnE,EAAKkB,EAAQ7C,EAAQ0B,EAAQ,CAC/C,OAAOqE,GAAWlC,GAAYhB,EAAQlB,EAAI,OAAS3B,CAAM,EAAG2B,EAAK3B,EAAQ0B,CAAM,CACjF,CAEA,SAASsE,EAAYrE,EAAKkB,EAAQ7C,EAAQ0B,EAAQ,CAChD,OAAOqE,GAAWE,GAAapD,CAAM,EAAGlB,EAAK3B,EAAQ0B,CAAM,CAC7D,CAEA,SAASwE,EAAavE,EAAKkB,EAAQ7C,EAAQ0B,EAAQ,CACjD,OAAOqE,GAAWjC,GAAcjB,CAAM,EAAGlB,EAAK3B,EAAQ0B,CAAM,CAC9D,CAEA,SAASyE,EAAWxE,EAAKkB,EAAQ7C,EAAQ0B,EAAQ,CAC/C,OAAOqE,GAAWK,GAAevD,EAAQlB,EAAI,OAAS3B,CAAM,EAAG2B,EAAK3B,EAAQ0B,CAAM,CACpF,CAEAN,EAAO,UAAU,MAAQ,SAAgByB,EAAQ7C,EAAQ0B,EAAQiB,EAAU,CAEzE,GAAI3C,IAAW,OACb2C,EAAW,OACXjB,EAAS,KAAK,OACd1B,EAAS,UAEA0B,IAAW,QAAa,OAAO1B,GAAW,SACnD2C,EAAW3C,EACX0B,EAAS,KAAK,OACd1B,EAAS,UAEA,SAASA,CAAM,EACxBA,EAASA,IAAW,EAChB,SAAS0B,CAAM,GACjBA,EAASA,IAAW,EAChBiB,IAAa,SAAWA,EAAW,UAEvCA,EAAWjB,EACXA,EAAS,YAGX,OAAM,IAAI,MACR,yEACN,EAGE,MAAMiE,EAAY,KAAK,OAAS3F,EAGhC,IAFI0B,IAAW,QAAaA,EAASiE,KAAWjE,EAASiE,GAEpD9C,EAAO,OAAS,IAAMnB,EAAS,GAAK1B,EAAS,IAAOA,EAAS,KAAK,OACrE,MAAM,IAAI,WAAW,wCAAwC,EAG1D2C,IAAUA,EAAW,QAE1B,IAAIiB,EAAc,GAClB,OACE,OAAQjB,EAAQ,CACd,IAAK,MACH,OAAO+C,EAAS,KAAM7C,EAAQ7C,EAAQ0B,CAAM,EAE9C,IAAK,OACL,IAAK,QACH,OAAOoE,EAAU,KAAMjD,EAAQ7C,EAAQ0B,CAAM,EAE/C,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOsE,EAAW,KAAMnD,EAAQ7C,EAAQ0B,CAAM,EAEhD,IAAK,SAEH,OAAOwE,EAAY,KAAMrD,EAAQ7C,EAAQ0B,CAAM,EAEjD,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOyE,EAAU,KAAMtD,EAAQ7C,EAAQ0B,CAAM,EAE/C,QACE,GAAIkC,EAAa,MAAM,IAAI,UAAU,qBAAuBjB,CAAQ,EACpEA,GAAY,GAAKA,GAAU,YAAW,EACtCiB,EAAc,EACtB,CAEA,EAEAxC,EAAO,UAAU,OAAS,UAAmB,CAC3C,MAAO,CACL,KAAM,SACN,KAAM,MAAM,UAAU,MAAM,KAAK,KAAK,MAAQ,KAAM,CAAC,CACzD,CACA,EAEA,SAASgD,EAAazC,EAAKpC,EAAOC,EAAK,CACrC,OAAID,IAAU,GAAKC,IAAQmC,EAAI,OACtBZ,EAAO,cAAcY,CAAG,EAExBZ,EAAO,cAAcY,EAAI,MAAMpC,EAAOC,CAAG,CAAC,CAErD,CAEA,SAASyE,EAAWtC,EAAKpC,EAAOC,EAAK,CACnCA,EAAM,KAAK,IAAImC,EAAI,OAAQnC,CAAG,EAC9B,MAAM6G,EAAM,CAAA,EAEZ,IAAI7H,EAAIe,EACR,KAAOf,EAAIgB,GAAK,CACd,MAAM8G,EAAY3E,EAAInD,CAAC,EACvB,IAAI+H,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAI9H,EAAIgI,GAAoBhH,EAAK,CAC/B,IAAIiH,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,EAAgB,CACtB,IAAK,GACCF,EAAY,MACdC,EAAYD,GAEd,MACF,IAAK,GACHG,EAAa9E,EAAInD,EAAI,CAAC,GACjBiI,EAAa,OAAU,MAC1BG,GAAiBN,EAAY,KAAS,EAAOG,EAAa,GACtDG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,IAAK,GACHH,EAAa9E,EAAInD,EAAI,CAAC,EACtBkI,EAAY/E,EAAInD,EAAI,CAAC,GAChBiI,EAAa,OAAU,MAASC,EAAY,OAAU,MACzDE,GAAiBN,EAAY,KAAQ,IAAOG,EAAa,KAAS,EAAOC,EAAY,GACjFE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,IAAK,GACHH,EAAa9E,EAAInD,EAAI,CAAC,EACtBkI,EAAY/E,EAAInD,EAAI,CAAC,EACrBmI,EAAahF,EAAInD,EAAI,CAAC,GACjBiI,EAAa,OAAU,MAASC,EAAY,OAAU,MAASC,EAAa,OAAU,MACzFC,GAAiBN,EAAY,KAAQ,IAAQG,EAAa,KAAS,IAAOC,EAAY,KAAS,EAAOC,EAAa,GAC/GC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,GAG1B,CACA,CAEQL,IAAc,MAGhBA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbF,EAAI,KAAKE,IAAc,GAAK,KAAQ,KAAM,EAC1CA,EAAY,MAASA,EAAY,MAGnCF,EAAI,KAAKE,CAAS,EAClB/H,GAAKgI,CACT,CAEE,OAAOK,EAAsBR,CAAG,CAClC,CAKA,MAAMS,EAAuB,KAE7B,SAASD,EAAuBE,EAAY,CAC1C,MAAMtI,EAAMsI,EAAW,OACvB,GAAItI,GAAOqI,EACT,OAAO,OAAO,aAAa,MAAM,OAAQC,CAAU,EAIrD,IAAIV,EAAM,GACN7H,EAAI,EACR,KAAOA,EAAIC,GACT4H,GAAO,OAAO,aAAa,MACzB,OACAU,EAAW,MAAMvI,EAAGA,GAAKsI,CAAoB,CACnD,EAEE,OAAOT,CACT,CAEA,SAASnC,GAAYvC,EAAKpC,EAAOC,EAAK,CACpC,IAAIwH,EAAM,GACVxH,EAAM,KAAK,IAAImC,EAAI,OAAQnC,CAAG,EAE9B,QAAShB,EAAIe,EAAOf,EAAIgB,EAAK,EAAEhB,EAC7BwI,GAAO,OAAO,aAAarF,EAAInD,CAAC,EAAI,GAAI,EAE1C,OAAOwI,CACT,CAEA,SAAS7C,GAAaxC,EAAKpC,EAAOC,EAAK,CACrC,IAAIwH,EAAM,GACVxH,EAAM,KAAK,IAAImC,EAAI,OAAQnC,CAAG,EAE9B,QAAShB,EAAIe,EAAOf,EAAIgB,EAAK,EAAEhB,EAC7BwI,GAAO,OAAO,aAAarF,EAAInD,CAAC,CAAC,EAEnC,OAAOwI,CACT,CAEA,SAAShD,EAAUrC,EAAKpC,EAAOC,EAAK,CAClC,MAAMf,EAAMkD,EAAI,QAEZ,CAACpC,GAASA,EAAQ,KAAGA,EAAQ,IAC7B,CAACC,GAAOA,EAAM,GAAKA,EAAMf,KAAKe,EAAMf,GAExC,IAAIwI,EAAM,GACV,QAASzI,EAAIe,EAAOf,EAAIgB,EAAK,EAAEhB,EAC7ByI,GAAOC,GAAoBvF,EAAInD,CAAC,CAAC,EAEnC,OAAOyI,CACT,CAEA,SAAS5C,GAAc1C,EAAKpC,EAAOC,EAAK,CACtC,MAAM2H,EAAQxF,EAAI,MAAMpC,EAAOC,CAAG,EAClC,IAAI6G,EAAM,GAEV,QAAS7H,EAAI,EAAGA,EAAI2I,EAAM,OAAS,EAAG3I,GAAK,EACzC6H,GAAO,OAAO,aAAac,EAAM3I,CAAC,EAAK2I,EAAM3I,EAAI,CAAC,EAAI,GAAI,EAE5D,OAAO6H,CACT,CAEAjF,EAAO,UAAU,MAAQ,SAAgB7B,EAAOC,EAAK,CACnD,MAAMf,EAAM,KAAK,OACjBc,EAAQ,CAAC,CAACA,EACVC,EAAMA,IAAQ,OAAYf,EAAM,CAAC,CAACe,EAE9BD,EAAQ,GACVA,GAASd,EACLc,EAAQ,IAAGA,EAAQ,IACdA,EAAQd,IACjBc,EAAQd,GAGNe,EAAM,GACRA,GAAOf,EACHe,EAAM,IAAGA,EAAM,IACVA,EAAMf,IACfe,EAAMf,GAGJe,EAAMD,IAAOC,EAAMD,GAEvB,MAAM6H,EAAS,KAAK,SAAS7H,EAAOC,CAAG,EAEvC,cAAO,eAAe4H,EAAQhG,EAAO,SAAS,EAEvCgG,CACT,EAKA,SAASC,EAAarH,EAAQsH,EAAK5F,EAAQ,CACzC,GAAK1B,EAAS,IAAO,GAAKA,EAAS,EAAG,MAAM,IAAI,WAAW,oBAAoB,EAC/E,GAAIA,EAASsH,EAAM5F,EAAQ,MAAM,IAAI,WAAW,uCAAuC,CACzF,CAEAN,EAAO,UAAU,WACjBA,EAAO,UAAU,WAAa,SAAqBpB,EAAQ/B,EAAYsJ,EAAU,CAC/EvH,EAASA,IAAW,EACpB/B,EAAaA,IAAe,EACvBsJ,GAAUF,EAAYrH,EAAQ/B,EAAY,KAAK,MAAM,EAE1D,IAAI+G,EAAM,KAAKhF,CAAM,EACjBwH,EAAM,EACNhJ,EAAI,EACR,KAAO,EAAEA,EAAIP,IAAeuJ,GAAO,MACjCxC,GAAO,KAAKhF,EAASxB,CAAC,EAAIgJ,EAG5B,OAAOxC,CACT,EAEA5D,EAAO,UAAU,WACjBA,EAAO,UAAU,WAAa,SAAqBpB,EAAQ/B,EAAYsJ,EAAU,CAC/EvH,EAASA,IAAW,EACpB/B,EAAaA,IAAe,EACvBsJ,GACHF,EAAYrH,EAAQ/B,EAAY,KAAK,MAAM,EAG7C,IAAI+G,EAAM,KAAKhF,EAAS,EAAE/B,CAAU,EAChCuJ,EAAM,EACV,KAAOvJ,EAAa,IAAMuJ,GAAO,MAC/BxC,GAAO,KAAKhF,EAAS,EAAE/B,CAAU,EAAIuJ,EAGvC,OAAOxC,CACT,EAEA5D,EAAO,UAAU,UACjBA,EAAO,UAAU,UAAY,SAAoBpB,EAAQuH,EAAU,CACjE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EAC1C,KAAKA,CAAM,CACpB,EAEAoB,EAAO,UAAU,aACjBA,EAAO,UAAU,aAAe,SAAuBpB,EAAQuH,EAAU,CACvE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EAC1C,KAAKA,CAAM,EAAK,KAAKA,EAAS,CAAC,GAAK,CAC7C,EAEAoB,EAAO,UAAU,aACjBA,EAAO,UAAU,aAAe,SAAuBpB,EAAQuH,EAAU,CACvE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EACzC,KAAKA,CAAM,GAAK,EAAK,KAAKA,EAAS,CAAC,CAC9C,EAEAoB,EAAO,UAAU,aACjBA,EAAO,UAAU,aAAe,SAAuBpB,EAAQuH,EAAU,CACvE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,GAExC,KAAKA,CAAM,EACf,KAAKA,EAAS,CAAC,GAAK,EACpB,KAAKA,EAAS,CAAC,GAAK,IACpB,KAAKA,EAAS,CAAC,EAAI,QAC1B,EAEAoB,EAAO,UAAU,aACjBA,EAAO,UAAU,aAAe,SAAuBpB,EAAQuH,EAAU,CACvE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EAEzC,KAAKA,CAAM,EAAI,UACnB,KAAKA,EAAS,CAAC,GAAK,GACrB,KAAKA,EAAS,CAAC,GAAK,EACrB,KAAKA,EAAS,CAAC,EACnB,EAEAoB,EAAO,UAAU,gBAAkBqG,GAAmB,SAA0BzH,EAAQ,CACtFA,EAASA,IAAW,EACpB0H,GAAe1H,EAAQ,QAAQ,EAC/B,MAAM2H,EAAQ,KAAK3H,CAAM,EACnB4H,EAAO,KAAK5H,EAAS,CAAC,GACxB2H,IAAU,QAAaC,IAAS,SAClCC,GAAY7H,EAAQ,KAAK,OAAS,CAAC,EAGrC,MAAM8H,EAAKH,EACT,KAAK,EAAE3H,CAAM,EAAI,GAAK,EACtB,KAAK,EAAEA,CAAM,EAAI,GAAK,GACtB,KAAK,EAAEA,CAAM,EAAI,GAAK,GAElB+H,EAAK,KAAK,EAAE/H,CAAM,EACtB,KAAK,EAAEA,CAAM,EAAI,GAAK,EACtB,KAAK,EAAEA,CAAM,EAAI,GAAK,GACtB4H,EAAO,GAAK,GAEd,OAAO,OAAOE,CAAE,GAAK,OAAOC,CAAE,GAAK,OAAO,EAAE,EAC7C,CAAA,EAED3G,EAAO,UAAU,gBAAkBqG,GAAmB,SAA0BzH,EAAQ,CACtFA,EAASA,IAAW,EACpB0H,GAAe1H,EAAQ,QAAQ,EAC/B,MAAM2H,EAAQ,KAAK3H,CAAM,EACnB4H,EAAO,KAAK5H,EAAS,CAAC,GACxB2H,IAAU,QAAaC,IAAS,SAClCC,GAAY7H,EAAQ,KAAK,OAAS,CAAC,EAGrC,MAAM+H,EAAKJ,EAAQ,GAAK,GACtB,KAAK,EAAE3H,CAAM,EAAI,GAAK,GACtB,KAAK,EAAEA,CAAM,EAAI,GAAK,EACtB,KAAK,EAAEA,CAAM,EAET8H,EAAK,KAAK,EAAE9H,CAAM,EAAI,GAAK,GAC/B,KAAK,EAAEA,CAAM,EAAI,GAAK,GACtB,KAAK,EAAEA,CAAM,EAAI,GAAK,EACtB4H,EAEF,OAAQ,OAAOG,CAAE,GAAK,OAAO,EAAE,GAAK,OAAOD,CAAE,CAC9C,CAAA,EAED1G,EAAO,UAAU,UAAY,SAAoBpB,EAAQ/B,EAAYsJ,EAAU,CAC7EvH,EAASA,IAAW,EACpB/B,EAAaA,IAAe,EACvBsJ,GAAUF,EAAYrH,EAAQ/B,EAAY,KAAK,MAAM,EAE1D,IAAI+G,EAAM,KAAKhF,CAAM,EACjBwH,EAAM,EACNhJ,EAAI,EACR,KAAO,EAAEA,EAAIP,IAAeuJ,GAAO,MACjCxC,GAAO,KAAKhF,EAASxB,CAAC,EAAIgJ,EAE5B,OAAAA,GAAO,IAEHxC,GAAOwC,IAAKxC,GAAO,KAAK,IAAI,EAAG,EAAI/G,CAAU,GAE1C+G,CACT,EAEA5D,EAAO,UAAU,UAAY,SAAoBpB,EAAQ/B,EAAYsJ,EAAU,CAC7EvH,EAASA,IAAW,EACpB/B,EAAaA,IAAe,EACvBsJ,GAAUF,EAAYrH,EAAQ/B,EAAY,KAAK,MAAM,EAE1D,IAAIO,EAAIP,EACJuJ,EAAM,EACNxC,EAAM,KAAKhF,EAAS,EAAExB,CAAC,EAC3B,KAAOA,EAAI,IAAMgJ,GAAO,MACtBxC,GAAO,KAAKhF,EAAS,EAAExB,CAAC,EAAIgJ,EAE9B,OAAAA,GAAO,IAEHxC,GAAOwC,IAAKxC,GAAO,KAAK,IAAI,EAAG,EAAI/G,CAAU,GAE1C+G,CACT,EAEA5D,EAAO,UAAU,SAAW,SAAmBpB,EAAQuH,EAAU,CAG/D,OAFAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EAC3C,KAAKA,CAAM,EAAI,KACZ,IAAO,KAAKA,CAAM,EAAI,GAAK,GADA,KAAKA,CAAM,CAEjD,EAEAoB,EAAO,UAAU,YAAc,SAAsBpB,EAAQuH,EAAU,CACrEvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EACjD,MAAMgF,EAAM,KAAKhF,CAAM,EAAK,KAAKA,EAAS,CAAC,GAAK,EAChD,OAAQgF,EAAM,MAAUA,EAAM,WAAaA,CAC7C,EAEA5D,EAAO,UAAU,YAAc,SAAsBpB,EAAQuH,EAAU,CACrEvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EACjD,MAAMgF,EAAM,KAAKhF,EAAS,CAAC,EAAK,KAAKA,CAAM,GAAK,EAChD,OAAQgF,EAAM,MAAUA,EAAM,WAAaA,CAC7C,EAEA5D,EAAO,UAAU,YAAc,SAAsBpB,EAAQuH,EAAU,CACrE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EAEzC,KAAKA,CAAM,EAChB,KAAKA,EAAS,CAAC,GAAK,EACpB,KAAKA,EAAS,CAAC,GAAK,GACpB,KAAKA,EAAS,CAAC,GAAK,EACzB,EAEAoB,EAAO,UAAU,YAAc,SAAsBpB,EAAQuH,EAAU,CACrE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EAEzC,KAAKA,CAAM,GAAK,GACrB,KAAKA,EAAS,CAAC,GAAK,GACpB,KAAKA,EAAS,CAAC,GAAK,EACpB,KAAKA,EAAS,CAAC,CACpB,EAEAoB,EAAO,UAAU,eAAiBqG,GAAmB,SAAyBzH,EAAQ,CACpFA,EAASA,IAAW,EACpB0H,GAAe1H,EAAQ,QAAQ,EAC/B,MAAM2H,EAAQ,KAAK3H,CAAM,EACnB4H,EAAO,KAAK5H,EAAS,CAAC,GACxB2H,IAAU,QAAaC,IAAS,SAClCC,GAAY7H,EAAQ,KAAK,OAAS,CAAC,EAGrC,MAAMgF,EAAM,KAAKhF,EAAS,CAAC,EACzB,KAAKA,EAAS,CAAC,EAAI,GAAK,EACxB,KAAKA,EAAS,CAAC,EAAI,GAAK,IACvB4H,GAAQ,IAEX,OAAQ,OAAO5C,CAAG,GAAK,OAAO,EAAE,GAC9B,OAAO2C,EACP,KAAK,EAAE3H,CAAM,EAAI,GAAK,EACtB,KAAK,EAAEA,CAAM,EAAI,GAAK,GACtB,KAAK,EAAEA,CAAM,EAAI,GAAK,EAAE,CAC3B,CAAA,EAEDoB,EAAO,UAAU,eAAiBqG,GAAmB,SAAyBzH,EAAQ,CACpFA,EAASA,IAAW,EACpB0H,GAAe1H,EAAQ,QAAQ,EAC/B,MAAM2H,EAAQ,KAAK3H,CAAM,EACnB4H,EAAO,KAAK5H,EAAS,CAAC,GACxB2H,IAAU,QAAaC,IAAS,SAClCC,GAAY7H,EAAQ,KAAK,OAAS,CAAC,EAGrC,MAAMgF,GAAO2C,GAAS,IACpB,KAAK,EAAE3H,CAAM,EAAI,GAAK,GACtB,KAAK,EAAEA,CAAM,EAAI,GAAK,EACtB,KAAK,EAAEA,CAAM,EAEf,OAAQ,OAAOgF,CAAG,GAAK,OAAO,EAAE,GAC9B,OAAO,KAAK,EAAEhF,CAAM,EAAI,GAAK,GAC7B,KAAK,EAAEA,CAAM,EAAI,GAAK,GACtB,KAAK,EAAEA,CAAM,EAAI,GAAK,EACtB4H,CAAI,CACP,CAAA,EAEDxG,EAAO,UAAU,YAAc,SAAsBpB,EAAQuH,EAAU,CACrE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EAC1CF,EAAQ,KAAK,KAAME,EAAQ,GAAM,GAAI,CAAC,CAC/C,EAEAoB,EAAO,UAAU,YAAc,SAAsBpB,EAAQuH,EAAU,CACrE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EAC1CF,EAAQ,KAAK,KAAME,EAAQ,GAAO,GAAI,CAAC,CAChD,EAEAoB,EAAO,UAAU,aAAe,SAAuBpB,EAAQuH,EAAU,CACvE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EAC1CF,EAAQ,KAAK,KAAME,EAAQ,GAAM,GAAI,CAAC,CAC/C,EAEAoB,EAAO,UAAU,aAAe,SAAuBpB,EAAQuH,EAAU,CACvE,OAAAvH,EAASA,IAAW,EACfuH,GAAUF,EAAYrH,EAAQ,EAAG,KAAK,MAAM,EAC1CF,EAAQ,KAAK,KAAME,EAAQ,GAAO,GAAI,CAAC,CAChD,EAEA,SAASgI,EAAUrG,EAAKf,EAAOZ,EAAQsH,EAAK7C,EAAKwD,EAAK,CACpD,GAAI,CAAC7G,EAAO,SAASO,CAAG,EAAG,MAAM,IAAI,UAAU,6CAA6C,EAC5F,GAAIf,EAAQ6D,GAAO7D,EAAQqH,EAAK,MAAM,IAAI,WAAW,mCAAmC,EACxF,GAAIjI,EAASsH,EAAM3F,EAAI,OAAQ,MAAM,IAAI,WAAW,oBAAoB,CAC1E,CAEAP,EAAO,UAAU,YACjBA,EAAO,UAAU,YAAc,SAAsBR,EAAOZ,EAAQ/B,EAAYsJ,EAAU,CAIxF,GAHA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACpB/B,EAAaA,IAAe,EACxB,CAACsJ,EAAU,CACb,MAAMW,EAAW,KAAK,IAAI,EAAG,EAAIjK,CAAU,EAAI,EAC/C+J,EAAS,KAAMpH,EAAOZ,EAAQ/B,EAAYiK,EAAU,CAAC,CACzD,CAEE,IAAIV,EAAM,EACNhJ,EAAI,EAER,IADA,KAAKwB,CAAM,EAAIY,EAAQ,IAChB,EAAEpC,EAAIP,IAAeuJ,GAAO,MACjC,KAAKxH,EAASxB,CAAC,EAAKoC,EAAQ4G,EAAO,IAGrC,OAAOxH,EAAS/B,CAClB,EAEAmD,EAAO,UAAU,YACjBA,EAAO,UAAU,YAAc,SAAsBR,EAAOZ,EAAQ/B,EAAYsJ,EAAU,CAIxF,GAHA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACpB/B,EAAaA,IAAe,EACxB,CAACsJ,EAAU,CACb,MAAMW,EAAW,KAAK,IAAI,EAAG,EAAIjK,CAAU,EAAI,EAC/C+J,EAAS,KAAMpH,EAAOZ,EAAQ/B,EAAYiK,EAAU,CAAC,CACzD,CAEE,IAAI1J,EAAIP,EAAa,EACjBuJ,EAAM,EAEV,IADA,KAAKxH,EAASxB,CAAC,EAAIoC,EAAQ,IACpB,EAAEpC,GAAK,IAAMgJ,GAAO,MACzB,KAAKxH,EAASxB,CAAC,EAAKoC,EAAQ4G,EAAO,IAGrC,OAAOxH,EAAS/B,CAClB,EAEAmD,EAAO,UAAU,WACjBA,EAAO,UAAU,WAAa,SAAqBR,EAAOZ,EAAQuH,EAAU,CAC1E,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GAAUS,EAAS,KAAMpH,EAAOZ,EAAQ,EAAG,IAAM,CAAC,EACvD,KAAKA,CAAM,EAAKY,EAAQ,IACjBZ,EAAS,CAClB,EAEAoB,EAAO,UAAU,cACjBA,EAAO,UAAU,cAAgB,SAAwBR,EAAOZ,EAAQuH,EAAU,CAChF,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GAAUS,EAAS,KAAMpH,EAAOZ,EAAQ,EAAG,MAAQ,CAAC,EACzD,KAAKA,CAAM,EAAKY,EAAQ,IACxB,KAAKZ,EAAS,CAAC,EAAKY,IAAU,EACvBZ,EAAS,CAClB,EAEAoB,EAAO,UAAU,cACjBA,EAAO,UAAU,cAAgB,SAAwBR,EAAOZ,EAAQuH,EAAU,CAChF,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GAAUS,EAAS,KAAMpH,EAAOZ,EAAQ,EAAG,MAAQ,CAAC,EACzD,KAAKA,CAAM,EAAKY,IAAU,EAC1B,KAAKZ,EAAS,CAAC,EAAKY,EAAQ,IACrBZ,EAAS,CAClB,EAEAoB,EAAO,UAAU,cACjBA,EAAO,UAAU,cAAgB,SAAwBR,EAAOZ,EAAQuH,EAAU,CAChF,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GAAUS,EAAS,KAAMpH,EAAOZ,EAAQ,EAAG,WAAY,CAAC,EAC7D,KAAKA,EAAS,CAAC,EAAKY,IAAU,GAC9B,KAAKZ,EAAS,CAAC,EAAKY,IAAU,GAC9B,KAAKZ,EAAS,CAAC,EAAKY,IAAU,EAC9B,KAAKZ,CAAM,EAAKY,EAAQ,IACjBZ,EAAS,CAClB,EAEAoB,EAAO,UAAU,cACjBA,EAAO,UAAU,cAAgB,SAAwBR,EAAOZ,EAAQuH,EAAU,CAChF,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GAAUS,EAAS,KAAMpH,EAAOZ,EAAQ,EAAG,WAAY,CAAC,EAC7D,KAAKA,CAAM,EAAKY,IAAU,GAC1B,KAAKZ,EAAS,CAAC,EAAKY,IAAU,GAC9B,KAAKZ,EAAS,CAAC,EAAKY,IAAU,EAC9B,KAAKZ,EAAS,CAAC,EAAKY,EAAQ,IACrBZ,EAAS,CAClB,EAEA,SAASmI,EAAgBxG,EAAKf,EAAOZ,EAAQiI,EAAKxD,EAAK,CACrD2D,GAAWxH,EAAOqH,EAAKxD,EAAK9C,EAAK3B,EAAQ,CAAC,EAE1C,IAAI8H,EAAK,OAAOlH,EAAQ,OAAO,UAAU,CAAC,EAC1Ce,EAAI3B,GAAQ,EAAI8H,EAChBA,EAAKA,GAAM,EACXnG,EAAI3B,GAAQ,EAAI8H,EAChBA,EAAKA,GAAM,EACXnG,EAAI3B,GAAQ,EAAI8H,EAChBA,EAAKA,GAAM,EACXnG,EAAI3B,GAAQ,EAAI8H,EAChB,IAAIC,EAAK,OAAOnH,GAAS,OAAO,EAAE,EAAI,OAAO,UAAU,CAAC,EACxD,OAAAe,EAAI3B,GAAQ,EAAI+H,EAChBA,EAAKA,GAAM,EACXpG,EAAI3B,GAAQ,EAAI+H,EAChBA,EAAKA,GAAM,EACXpG,EAAI3B,GAAQ,EAAI+H,EAChBA,EAAKA,GAAM,EACXpG,EAAI3B,GAAQ,EAAI+H,EACT/H,CACT,CAEA,SAASqI,EAAgB1G,EAAKf,EAAOZ,EAAQiI,EAAKxD,EAAK,CACrD2D,GAAWxH,EAAOqH,EAAKxD,EAAK9C,EAAK3B,EAAQ,CAAC,EAE1C,IAAI8H,EAAK,OAAOlH,EAAQ,OAAO,UAAU,CAAC,EAC1Ce,EAAI3B,EAAS,CAAC,EAAI8H,EAClBA,EAAKA,GAAM,EACXnG,EAAI3B,EAAS,CAAC,EAAI8H,EAClBA,EAAKA,GAAM,EACXnG,EAAI3B,EAAS,CAAC,EAAI8H,EAClBA,EAAKA,GAAM,EACXnG,EAAI3B,EAAS,CAAC,EAAI8H,EAClB,IAAIC,EAAK,OAAOnH,GAAS,OAAO,EAAE,EAAI,OAAO,UAAU,CAAC,EACxD,OAAAe,EAAI3B,EAAS,CAAC,EAAI+H,EAClBA,EAAKA,GAAM,EACXpG,EAAI3B,EAAS,CAAC,EAAI+H,EAClBA,EAAKA,GAAM,EACXpG,EAAI3B,EAAS,CAAC,EAAI+H,EAClBA,EAAKA,GAAM,EACXpG,EAAI3B,CAAM,EAAI+H,EACP/H,EAAS,CAClB,CAEAoB,EAAO,UAAU,iBAAmBqG,GAAmB,SAA2B7G,EAAOZ,EAAS,EAAG,CACnG,OAAOmI,EAAe,KAAMvH,EAAOZ,EAAQ,OAAO,CAAC,EAAG,OAAO,oBAAoB,CAAC,CACnF,CAAA,EAEDoB,EAAO,UAAU,iBAAmBqG,GAAmB,SAA2B7G,EAAOZ,EAAS,EAAG,CACnG,OAAOqI,EAAe,KAAMzH,EAAOZ,EAAQ,OAAO,CAAC,EAAG,OAAO,oBAAoB,CAAC,CACnF,CAAA,EAEDoB,EAAO,UAAU,WAAa,SAAqBR,EAAOZ,EAAQ/B,EAAYsJ,EAAU,CAGtF,GAFA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EAChB,CAACuH,EAAU,CACb,MAAMe,EAAQ,KAAK,IAAI,EAAI,EAAIrK,EAAc,CAAC,EAE9C+J,EAAS,KAAMpH,EAAOZ,EAAQ/B,EAAYqK,EAAQ,EAAG,CAACA,CAAK,CAC/D,CAEE,IAAI9J,EAAI,EACJgJ,EAAM,EACNe,EAAM,EAEV,IADA,KAAKvI,CAAM,EAAIY,EAAQ,IAChB,EAAEpC,EAAIP,IAAeuJ,GAAO,MAC7B5G,EAAQ,GAAK2H,IAAQ,GAAK,KAAKvI,EAASxB,EAAI,CAAC,IAAM,IACrD+J,EAAM,GAER,KAAKvI,EAASxB,CAAC,GAAMoC,EAAQ4G,GAAQ,GAAKe,EAAM,IAGlD,OAAOvI,EAAS/B,CAClB,EAEAmD,EAAO,UAAU,WAAa,SAAqBR,EAAOZ,EAAQ/B,EAAYsJ,EAAU,CAGtF,GAFA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EAChB,CAACuH,EAAU,CACb,MAAMe,EAAQ,KAAK,IAAI,EAAI,EAAIrK,EAAc,CAAC,EAE9C+J,EAAS,KAAMpH,EAAOZ,EAAQ/B,EAAYqK,EAAQ,EAAG,CAACA,CAAK,CAC/D,CAEE,IAAI9J,EAAIP,EAAa,EACjBuJ,EAAM,EACNe,EAAM,EAEV,IADA,KAAKvI,EAASxB,CAAC,EAAIoC,EAAQ,IACpB,EAAEpC,GAAK,IAAMgJ,GAAO,MACrB5G,EAAQ,GAAK2H,IAAQ,GAAK,KAAKvI,EAASxB,EAAI,CAAC,IAAM,IACrD+J,EAAM,GAER,KAAKvI,EAASxB,CAAC,GAAMoC,EAAQ4G,GAAQ,GAAKe,EAAM,IAGlD,OAAOvI,EAAS/B,CAClB,EAEAmD,EAAO,UAAU,UAAY,SAAoBR,EAAOZ,EAAQuH,EAAU,CACxE,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GAAUS,EAAS,KAAMpH,EAAOZ,EAAQ,EAAG,IAAM,IAAK,EACvDY,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtC,KAAKZ,CAAM,EAAKY,EAAQ,IACjBZ,EAAS,CAClB,EAEAoB,EAAO,UAAU,aAAe,SAAuBR,EAAOZ,EAAQuH,EAAU,CAC9E,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GAAUS,EAAS,KAAMpH,EAAOZ,EAAQ,EAAG,MAAQ,MAAO,EAC/D,KAAKA,CAAM,EAAKY,EAAQ,IACxB,KAAKZ,EAAS,CAAC,EAAKY,IAAU,EACvBZ,EAAS,CAClB,EAEAoB,EAAO,UAAU,aAAe,SAAuBR,EAAOZ,EAAQuH,EAAU,CAC9E,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GAAUS,EAAS,KAAMpH,EAAOZ,EAAQ,EAAG,MAAQ,MAAO,EAC/D,KAAKA,CAAM,EAAKY,IAAU,EAC1B,KAAKZ,EAAS,CAAC,EAAKY,EAAQ,IACrBZ,EAAS,CAClB,EAEAoB,EAAO,UAAU,aAAe,SAAuBR,EAAOZ,EAAQuH,EAAU,CAC9E,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GAAUS,EAAS,KAAMpH,EAAOZ,EAAQ,EAAG,WAAY,WAAW,EACvE,KAAKA,CAAM,EAAKY,EAAQ,IACxB,KAAKZ,EAAS,CAAC,EAAKY,IAAU,EAC9B,KAAKZ,EAAS,CAAC,EAAKY,IAAU,GAC9B,KAAKZ,EAAS,CAAC,EAAKY,IAAU,GACvBZ,EAAS,CAClB,EAEAoB,EAAO,UAAU,aAAe,SAAuBR,EAAOZ,EAAQuH,EAAU,CAC9E,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GAAUS,EAAS,KAAMpH,EAAOZ,EAAQ,EAAG,WAAY,WAAW,EACnEY,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C,KAAKZ,CAAM,EAAKY,IAAU,GAC1B,KAAKZ,EAAS,CAAC,EAAKY,IAAU,GAC9B,KAAKZ,EAAS,CAAC,EAAKY,IAAU,EAC9B,KAAKZ,EAAS,CAAC,EAAKY,EAAQ,IACrBZ,EAAS,CAClB,EAEAoB,EAAO,UAAU,gBAAkBqG,GAAmB,SAA0B7G,EAAOZ,EAAS,EAAG,CACjG,OAAOmI,EAAe,KAAMvH,EAAOZ,EAAQ,CAAC,OAAO,oBAAoB,EAAG,OAAO,oBAAoB,CAAC,CACvG,CAAA,EAEDoB,EAAO,UAAU,gBAAkBqG,GAAmB,SAA0B7G,EAAOZ,EAAS,EAAG,CACjG,OAAOqI,EAAe,KAAMzH,EAAOZ,EAAQ,CAAC,OAAO,oBAAoB,EAAG,OAAO,oBAAoB,CAAC,CACvG,CAAA,EAED,SAASwI,EAAc7G,EAAKf,EAAOZ,EAAQsH,EAAK7C,EAAKwD,EAAK,CACxD,GAAIjI,EAASsH,EAAM3F,EAAI,OAAQ,MAAM,IAAI,WAAW,oBAAoB,EACxE,GAAI3B,EAAS,EAAG,MAAM,IAAI,WAAW,oBAAoB,CAC3D,CAEA,SAASyI,GAAY9G,EAAKf,EAAOZ,EAAQ0I,EAAcnB,EAAU,CAC/D,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GACHiB,EAAa7G,EAAKf,EAAOZ,EAAQ,CAAkD,EAErFF,EAAQ,MAAM6B,EAAKf,EAAOZ,EAAQ0I,EAAc,GAAI,CAAC,EAC9C1I,EAAS,CAClB,CAEAoB,EAAO,UAAU,aAAe,SAAuBR,EAAOZ,EAAQuH,EAAU,CAC9E,OAAOkB,GAAW,KAAM7H,EAAOZ,EAAQ,GAAMuH,CAAQ,CACvD,EAEAnG,EAAO,UAAU,aAAe,SAAuBR,EAAOZ,EAAQuH,EAAU,CAC9E,OAAOkB,GAAW,KAAM7H,EAAOZ,EAAQ,GAAOuH,CAAQ,CACxD,EAEA,SAASoB,GAAahH,EAAKf,EAAOZ,EAAQ0I,EAAcnB,EAAU,CAChE,OAAA3G,EAAQ,CAACA,EACTZ,EAASA,IAAW,EACfuH,GACHiB,EAAa7G,EAAKf,EAAOZ,EAAQ,CAAoD,EAEvFF,EAAQ,MAAM6B,EAAKf,EAAOZ,EAAQ0I,EAAc,GAAI,CAAC,EAC9C1I,EAAS,CAClB,CAEAoB,EAAO,UAAU,cAAgB,SAAwBR,EAAOZ,EAAQuH,EAAU,CAChF,OAAOoB,GAAY,KAAM/H,EAAOZ,EAAQ,GAAMuH,CAAQ,CACxD,EAEAnG,EAAO,UAAU,cAAgB,SAAwBR,EAAOZ,EAAQuH,EAAU,CAChF,OAAOoB,GAAY,KAAM/H,EAAOZ,EAAQ,GAAOuH,CAAQ,CACzD,EAGAnG,EAAO,UAAU,KAAO,SAAesD,EAAQkE,EAAarJ,EAAOC,EAAK,CACtE,GAAI,CAAC4B,EAAO,SAASsD,CAAM,EAAG,MAAM,IAAI,UAAU,6BAA6B,EAS/E,GARKnF,IAAOA,EAAQ,GAChB,CAACC,GAAOA,IAAQ,IAAGA,EAAM,KAAK,QAC9BoJ,GAAelE,EAAO,SAAQkE,EAAclE,EAAO,QAClDkE,IAAaA,EAAc,GAC5BpJ,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,GACRmF,EAAO,SAAW,GAAK,KAAK,SAAW,EAAG,MAAO,GAGrD,GAAIkE,EAAc,EAChB,MAAM,IAAI,WAAW,2BAA2B,EAElD,GAAIrJ,EAAQ,GAAKA,GAAS,KAAK,OAAQ,MAAM,IAAI,WAAW,oBAAoB,EAChF,GAAIC,EAAM,EAAG,MAAM,IAAI,WAAW,yBAAyB,EAGvDA,EAAM,KAAK,SAAQA,EAAM,KAAK,QAC9BkF,EAAO,OAASkE,EAAcpJ,EAAMD,IACtCC,EAAMkF,EAAO,OAASkE,EAAcrJ,GAGtC,MAAMd,EAAMe,EAAMD,EAElB,OAAI,OAASmF,GAAU,OAAO,WAAW,UAAU,YAAe,WAEhE,KAAK,WAAWkE,EAAarJ,EAAOC,CAAG,EAEvC,WAAW,UAAU,IAAI,KACvBkF,EACA,KAAK,SAASnF,EAAOC,CAAG,EACxBoJ,CACN,EAGSnK,CACT,EAMA2C,EAAO,UAAU,KAAO,SAAe4D,EAAKzF,EAAOC,EAAKmD,EAAU,CAEhE,GAAI,OAAOqC,GAAQ,SAAU,CAS3B,GARI,OAAOzF,GAAU,UACnBoD,EAAWpD,EACXA,EAAQ,EACRC,EAAM,KAAK,QACF,OAAOA,GAAQ,WACxBmD,EAAWnD,EACXA,EAAM,KAAK,QAETmD,IAAa,QAAa,OAAOA,GAAa,SAChD,MAAM,IAAI,UAAU,2BAA2B,EAEjD,GAAI,OAAOA,GAAa,UAAY,CAACvB,EAAO,WAAWuB,CAAQ,EAC7D,MAAM,IAAI,UAAU,qBAAuBA,CAAQ,EAErD,GAAIqC,EAAI,SAAW,EAAG,CACpB,MAAMzG,EAAOyG,EAAI,WAAW,CAAC,GACxBrC,IAAa,QAAUpE,EAAO,KAC/BoE,IAAa,YAEfqC,EAAMzG,EAEd,CACA,MAAa,OAAOyG,GAAQ,SACxBA,EAAMA,EAAM,IACH,OAAOA,GAAQ,YACxBA,EAAM,OAAOA,CAAG,GAIlB,GAAIzF,EAAQ,GAAK,KAAK,OAASA,GAAS,KAAK,OAASC,EACpD,MAAM,IAAI,WAAW,oBAAoB,EAG3C,GAAIA,GAAOD,EACT,OAAO,KAGTA,EAAQA,IAAU,EAClBC,EAAMA,IAAQ,OAAY,KAAK,OAASA,IAAQ,EAE3CwF,IAAKA,EAAM,GAEhB,IAAIxG,EACJ,GAAI,OAAOwG,GAAQ,SACjB,IAAKxG,EAAIe,EAAOf,EAAIgB,EAAK,EAAEhB,EACzB,KAAKA,CAAC,EAAIwG,MAEP,CACL,MAAMmC,EAAQ/F,EAAO,SAAS4D,CAAG,EAC7BA,EACA5D,EAAO,KAAK4D,EAAKrC,CAAQ,EACvBlE,EAAM0I,EAAM,OAClB,GAAI1I,IAAQ,EACV,MAAM,IAAI,UAAU,cAAgBuG,EAClC,mCAAmC,EAEvC,IAAKxG,EAAI,EAAGA,EAAIgB,EAAMD,EAAO,EAAEf,EAC7B,KAAKA,EAAIe,CAAK,EAAI4H,EAAM3I,EAAIC,CAAG,CAErC,CAEE,OAAO,IACT,EAMA,MAAMoK,GAAS,CAAA,EACf,SAASC,GAAGC,EAAKC,EAAYC,EAAM,CACjCJ,GAAOE,CAAG,EAAI,cAAwBE,CAAK,CACzC,aAAe,CACb,MAAK,EAEL,OAAO,eAAe,KAAM,UAAW,CACrC,MAAOD,EAAW,MAAM,KAAM,SAAS,EACvC,SAAU,GACV,aAAc,EACf,CAAA,EAGD,KAAK,KAAO,GAAG,KAAK,IAAI,KAAKD,CAAG,IAGhC,KAAK,MAEL,OAAO,KAAK,IAClB,CAEI,IAAI,MAAQ,CACV,OAAOA,CACb,CAEI,IAAI,KAAMnI,EAAO,CACf,OAAO,eAAe,KAAM,OAAQ,CAClC,aAAc,GACd,WAAY,GACZ,MAAAA,EACA,SAAU,EACX,CAAA,CACP,CAEI,UAAY,CACV,MAAO,GAAG,KAAK,IAAI,KAAKmI,CAAG,MAAM,KAAK,OAAO,EACnD,CACA,CACA,CAEAD,GAAE,2BACA,SAAUI,EAAM,CACd,OAAIA,EACK,GAAGA,CAAI,+BAGT,gDACX,EAAK,UAAU,EACfJ,GAAE,uBACA,SAAUI,EAAMpG,EAAQ,CACtB,MAAO,QAAQoG,CAAI,oDAAoD,OAAOpG,CAAM,EACxF,EAAK,SAAS,EACdgG,GAAE,mBACA,SAAUtE,EAAK2E,EAAOC,EAAO,CAC3B,IAAIC,EAAM,iBAAiB7E,CAAG,qBAC1B8E,EAAWF,EACf,OAAI,OAAO,UAAUA,CAAK,GAAK,KAAK,IAAIA,CAAK,EAAI,GAAK,GACpDE,EAAWC,GAAsB,OAAOH,CAAK,CAAC,EACrC,OAAOA,GAAU,WAC1BE,EAAW,OAAOF,CAAK,GACnBA,EAAQ,OAAO,CAAC,GAAK,OAAO,EAAE,GAAKA,EAAQ,EAAE,OAAO,CAAC,GAAK,OAAO,EAAE,MACrEE,EAAWC,GAAsBD,CAAQ,GAE3CA,GAAY,KAEdD,GAAO,eAAeF,CAAK,cAAcG,CAAQ,GAC1CD,CACX,EAAK,UAAU,EAEf,SAASE,GAAuBvE,EAAK,CACnC,IAAIqB,EAAM,GACN7H,EAAIwG,EAAI,OACZ,MAAMzF,EAAQyF,EAAI,CAAC,IAAM,IAAM,EAAI,EACnC,KAAOxG,GAAKe,EAAQ,EAAGf,GAAK,EAC1B6H,EAAM,IAAIrB,EAAI,MAAMxG,EAAI,EAAGA,CAAC,CAAC,GAAG6H,CAAG,GAErC,MAAO,GAAGrB,EAAI,MAAM,EAAGxG,CAAC,CAAC,GAAG6H,CAAG,EACjC,CAKA,SAASmD,GAAa7H,EAAK3B,EAAQ/B,EAAY,CAC7CyJ,GAAe1H,EAAQ,QAAQ,GAC3B2B,EAAI3B,CAAM,IAAM,QAAa2B,EAAI3B,EAAS/B,CAAU,IAAM,SAC5D4J,GAAY7H,EAAQ2B,EAAI,QAAU1D,EAAa,EAAE,CAErD,CAEA,SAASmK,GAAYxH,EAAOqH,EAAKxD,EAAK9C,EAAK3B,EAAQ/B,EAAY,CAC7D,GAAI2C,EAAQ6D,GAAO7D,EAAQqH,EAAK,CAC9B,MAAM1D,EAAI,OAAO0D,GAAQ,SAAW,IAAM,GAC1C,IAAIkB,EAEF,MAAIlB,IAAQ,GAAKA,IAAQ,OAAO,CAAC,EAC/BkB,EAAQ,OAAO5E,CAAC,WAAWA,CAAC,QAAQtG,EAAa,GAAK,CAAC,GAAGsG,CAAC,GAE3D4E,EAAQ,SAAS5E,CAAC,QAAQtG,EAAa,GAAK,EAAI,CAAC,GAAGsG,CAAC,iBACzCtG,EAAa,GAAK,EAAI,CAAC,GAAGsG,CAAC,GAKrC,IAAIsE,GAAO,iBAAiB,QAASM,EAAOvI,CAAK,CAC3D,CACE4I,GAAY7H,EAAK3B,EAAQ/B,CAAU,CACrC,CAEA,SAASyJ,GAAgB9G,EAAOsI,EAAM,CACpC,GAAI,OAAOtI,GAAU,SACnB,MAAM,IAAIiI,GAAO,qBAAqBK,EAAM,SAAUtI,CAAK,CAE/D,CAEA,SAASiH,GAAajH,EAAOc,EAAQ+H,EAAM,CACzC,MAAI,KAAK,MAAM7I,CAAK,IAAMA,GACxB8G,GAAe9G,EAAO6I,CAAI,EACpB,IAAIZ,GAAO,iBAAyB,SAAU,aAAcjI,CAAK,GAGrEc,EAAS,EACL,IAAImH,GAAO,yBAGb,IAAIA,GAAO,iBAAyB,SACR,eAA6BnH,CAAM,GACnCd,CAAK,CACzC,CAKA,MAAM8I,GAAoB,oBAE1B,SAASC,GAAanF,EAAK,CAMzB,GAJAA,EAAMA,EAAI,MAAM,GAAG,EAAE,CAAC,EAEtBA,EAAMA,EAAI,KAAM,EAAC,QAAQkF,GAAmB,EAAE,EAE1ClF,EAAI,OAAS,EAAG,MAAO,GAE3B,KAAOA,EAAI,OAAS,IAAM,GACxBA,EAAMA,EAAM,IAEd,OAAOA,CACT,CAEA,SAASX,GAAahB,EAAQ+G,EAAO,CACnCA,EAAQA,GAAS,IACjB,IAAIrD,EACJ,MAAM7E,EAASmB,EAAO,OACtB,IAAIgH,EAAgB,KACpB,MAAM1C,EAAQ,CAAA,EAEd,QAAS3I,EAAI,EAAGA,EAAIkD,EAAQ,EAAElD,EAAG,CAI/B,GAHA+H,EAAY1D,EAAO,WAAWrE,CAAC,EAG3B+H,EAAY,OAAUA,EAAY,MAAQ,CAE5C,GAAI,CAACsD,EAAe,CAElB,GAAItD,EAAY,MAAQ,EAEjBqD,GAAS,GAAK,IAAIzC,EAAM,KAAK,IAAM,IAAM,GAAI,EAClD,QACV,SAAmB3I,EAAI,IAAMkD,EAAQ,EAEtBkI,GAAS,GAAK,IAAIzC,EAAM,KAAK,IAAM,IAAM,GAAI,EAClD,QACV,CAGQ0C,EAAgBtD,EAEhB,QACR,CAGM,GAAIA,EAAY,MAAQ,EACjBqD,GAAS,GAAK,IAAIzC,EAAM,KAAK,IAAM,IAAM,GAAI,EAClD0C,EAAgBtD,EAChB,QACR,CAGMA,GAAasD,EAAgB,OAAU,GAAKtD,EAAY,OAAU,KACnE,MAAUsD,IAEJD,GAAS,GAAK,IAAIzC,EAAM,KAAK,IAAM,IAAM,GAAI,EAMpD,GAHA0C,EAAgB,KAGZtD,EAAY,IAAM,CACpB,IAAKqD,GAAS,GAAK,EAAG,MACtBzC,EAAM,KAAKZ,CAAS,CAC1B,SAAeA,EAAY,KAAO,CAC5B,IAAKqD,GAAS,GAAK,EAAG,MACtBzC,EAAM,KACJZ,GAAa,EAAM,IACnBA,EAAY,GAAO,GAC3B,CACA,SAAeA,EAAY,MAAS,CAC9B,IAAKqD,GAAS,GAAK,EAAG,MACtBzC,EAAM,KACJZ,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IAC1BA,EAAY,GAAO,GAC3B,CACA,SAAeA,EAAY,QAAU,CAC/B,IAAKqD,GAAS,GAAK,EAAG,MACtBzC,EAAM,KACJZ,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IAC1BA,EAAY,GAAO,GAC3B,CACA,KACM,OAAM,IAAI,MAAM,oBAAoB,CAE1C,CAEE,OAAOY,CACT,CAEA,SAASlB,GAAczB,EAAK,CAC1B,MAAMsF,EAAY,CAAA,EAClB,QAAStL,EAAI,EAAGA,EAAIgG,EAAI,OAAQ,EAAEhG,EAEhCsL,EAAU,KAAKtF,EAAI,WAAWhG,CAAC,EAAI,GAAI,EAEzC,OAAOsL,CACT,CAEA,SAAS1D,GAAgB5B,EAAKoF,EAAO,CACnC,IAAI/I,EAAGkH,EAAID,EACX,MAAMgC,EAAY,CAAA,EAClB,QAAStL,EAAI,EAAGA,EAAIgG,EAAI,QACjB,GAAAoF,GAAS,GAAK,GADW,EAAEpL,EAGhCqC,EAAI2D,EAAI,WAAWhG,CAAC,EACpBuJ,EAAKlH,GAAK,EACViH,EAAKjH,EAAI,IACTiJ,EAAU,KAAKhC,CAAE,EACjBgC,EAAU,KAAK/B,CAAE,EAGnB,OAAO+B,CACT,CAEA,SAAShG,GAAeU,EAAK,CAC3B,OAAOzD,EAAO,YAAY4I,GAAYnF,CAAG,CAAC,CAC5C,CAEA,SAASuB,GAAYgE,EAAKC,EAAKhK,EAAQ0B,EAAQ,CAC7C,IAAIlD,EACJ,IAAKA,EAAI,EAAGA,EAAIkD,GACT,EAAAlD,EAAIwB,GAAUgK,EAAI,QAAYxL,GAAKuL,EAAI,QADtB,EAAEvL,EAExBwL,EAAIxL,EAAIwB,CAAM,EAAI+J,EAAIvL,CAAC,EAEzB,OAAOA,CACT,CAKA,SAAS0D,GAAYkB,EAAKqG,EAAM,CAC9B,OAAOrG,aAAeqG,GACnBrG,GAAO,MAAQA,EAAI,aAAe,MAAQA,EAAI,YAAY,MAAQ,MACjEA,EAAI,YAAY,OAASqG,EAAK,IACpC,CACA,SAASpG,GAAaD,EAAK,CAEzB,OAAOA,IAAQA,CACjB,CAIA,MAAM8D,GAAuB,UAAY,CACvC,MAAM+C,EAAW,mBACXC,EAAQ,IAAI,MAAM,GAAG,EAC3B,QAAS1L,EAAI,EAAGA,EAAI,GAAI,EAAEA,EAAG,CAC3B,MAAM2L,EAAM3L,EAAI,GAChB,QAASiH,EAAI,EAAGA,EAAI,GAAI,EAAEA,EACxByE,EAAMC,EAAM1E,CAAC,EAAIwE,EAASzL,CAAC,EAAIyL,EAASxE,CAAC,CAE/C,CACE,OAAOyE,CACR,EAAA,EAGD,SAASzC,GAAoB2C,EAAI,CAC/B,OAAO,OAAO,OAAW,IAAcC,GAAyBD,CAClE,CAEA,SAASC,IAA0B,CACjC,MAAM,IAAI,MAAM,sBAAsB,CACxC,uBCzjEa,KAAA,CAAE,KAAAC,EAAS,EAAA,SAYxB,SAASC,GAASC,EAAuC,CACjD,KAAA,CACJ,IAAAC,EAAM,MACN,KAAAC,EAAO,GACP,QAAAC,EAAU,CAAC,EACX,WAAAC,EAAa,CAAC,EAEd,OAAAC,EAAS,KAET,SAAAC,EAAW,CAAA,CAAC,EACVN,EAEEO,EAAU,SAAS,cAAcN,CAAG,EAC1C,OAAAM,EAAQ,YAAcL,EACdK,EAAA,UAAU,IAAI,GAAGJ,CAAO,EAE5BC,GACF,OAAO,KAAKA,CAAU,EAAE,QAASI,GAAQ,CACvCD,EAAQ,aAAaC,EAAKJ,EAAWI,CAAG,CAAC,CAAA,CAC1C,EAGCH,GAAeA,EAAA,OAAOE,CAAO,EAEzBA,EAAA,OAAO,GAAGD,CAAQ,EAEnBC,CACT,CAIA,SAASE,GAAaC,EAAqBC,EAA6B,CACtE,MAAMC,EAAM,SAAS,gBAAgB,6BAA8B,KAAK,EACpEA,EAAA,aAAa,QAASD,CAAO,EACjC,MAAME,EAAM,SAAS,gBAAgB,6BAA8B,KAAK,EACxE,OAAAA,EAAI,aAAa,OAAQ,GAAGH,CAAW,EAAE,EACzCE,EAAI,YAAYC,CAAG,EACZD,CACT,CChDA,MAAME,GAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAkDZC,GAAmB,IAAM,CAG7B,MAAMC,EAFS,IAAI,UAAU,EACP,gBAAgBF,GAAW,eAAe,EACtC,gBAC1BhB,GAAK,OAAOkB,CAAU,CACxB,ECrDMC,GAAgBZ,GAAwB,CACtC,MAAAa,EAASnB,GAAS,CAAE,IAAK,SAAU,QAAS,CAAC,QAAQ,EAAG,OAAAM,EAAQ,EAChEc,EAAkBpB,GAAS,CAC/B,QAAS,CAAC,kBAAkB,EAC5B,OAAQmB,CAAA,CACT,EACKE,EAAmBrB,GAAS,CAChC,IAAK,IACL,QAAS,CAAC,cAAe,0BAA0B,EACnD,WAAY,CACV,OAAQ,SACR,KAAM,2CACR,EACA,OAAQoB,CAAA,CACT,EACKE,EAAYZ,GAAa,UAAW,mBAAmB,EAC7DW,EAAiB,OAAOC,CAAS,EAExBtB,GAAA,CACP,IAAK,IACL,KAAM,kBACN,QAAS,CAAC,WAAW,EACrB,OAAQoB,CAAA,CACT,EAED,MAAMG,EAAgBvB,GAAS,CAC7B,IAAK,IACL,QAAS,CAAC,cAAe,uBAAuB,EAChD,WAAY,CACV,OAAQ,SACR,KAAM,yCACR,EACA,OAAQoB,CAAA,CACT,EACKI,EAASd,GAAa,OAAQ,gBAAgB,EACpDa,EAAc,OAAOC,CAAM,CAC7B,ECbA,SAASC,GAAUpL,EAAO,CACxB,OAAO,OAAOA,EAAU,KAAeA,IAAU,IACnD,CACA,SAASqL,GAAMrL,EAAO,CACpB,OAAKoL,GAAUpL,CAAK,EAChB,OAAOA,GAAS,SAAiBA,EAC9B,OAAO,YAAY,OAAO,QAAQA,CAAK,EAAE,OAAO,CAAC,CAACsL,EAAGtL,CAAK,IAAM,CAAC,CAAC,KAAM,OAAW,EAAE,EAAE,SAASA,CAAK,CAAC,CAAC,EAFhF,EAGhC,CACA,SAASuL,GAAUC,EAAK,CACtB,MAAMC,EAAS,CAAE,EACXC,EAAO,IAAI,gBAAgBF,CAAG,EACpC,QAAS7I,KAAK+I,EAAK,OACbA,EAAK,OAAO/I,CAAC,EAAE,OAAS,EAC1B8I,EAAO9I,CAAC,EAAI+I,EAAK,OAAO/I,CAAC,EAEzB8I,EAAO9I,CAAC,EAAI+I,EAAK,IAAI/I,CAAC,EAG1B,OAAO8I,CACT,CACA,SAASE,GAAeF,EAAQ,CAE9B,GADAA,EAASJ,GAAMI,CAAM,EACjB,CAACA,EAAQ,MAAO,GACpB,MAAMG,EAAS,IAAI,gBAAgBH,CAAM,EACzC,SAAW,CAACrB,EAAKpK,CAAK,IAAK,OAAO,QAAQyL,CAAM,EAC1C,MAAM,QAAQzL,CAAK,IACrB4L,EAAO,OAAOxB,CAAG,EACjBpK,EAAM,OAAOoL,EAAS,EAAE,QAAQS,GAAKD,EAAO,OAAOxB,EAAKyB,CAAC,CAAC,GAG9D,OAAOD,EAAO,SAAU,CAC1B,CACA,SAASE,GAAeN,EAAKO,EAASR,GAAW,CAC/C,OAAOQ,EAAOP,CAAG,CACnB,CACA,SAASQ,GAAmBP,EAAQQ,EAAcN,GAAgB,CAChE,OAAOM,EAAYR,CAAM,CAC3B,CAEA,IAAIS,GAAU,CAAC,MAAO,OAAQ,WAAY,UAAW,OAAQ,SAAU,MAAO,OAAQ,OAAQ,OAAQ,WAAY,QAAS,aAAc,aAAc,QAAS,OAAQ,SAAU,UAAW,QAAS,OAAQ,WAAY,YAAa,QAAS,MAAO,SAAU,SAAU,SAAU,SAAU,YAAa,QAAS,SAAU,SAAU,SAAU,aAAa,EAKhW,SAASC,GAASC,EAAUC,EAASzC,EAAU,CAC7C,eAAgBsC,EAClB,EAAG,CACD,GAAI,CAACG,EAAS,MAAM,IAAI,MAAM,QAAQD,CAAQ,mIAAmI,EACjL,GAAI,OAAOC,EAAQ,KAAQ,SAAU,MAAM,IAAI,MAAM,QAAQD,CAAQ,mHAAmH,EACxL,GAAI,CAACxC,EAAQ,eAAe,SAASyC,EAAQ,MAAM,EAAG,MAAM,IAAI,MAAM,QAAQD,CAAQ,sHAAsH,CAC9M,CAEA,IAAIE,GACJ,MAAMC,GAAa,GACnB,SAASC,MAAWC,EAAO,CAEzB,OADAA,EAAQA,EAAM,OAAOC,GAAQ,OAAOA,GAAS,UAAU,EACnDD,EAAM,SAAW,EAAUA,EAAM,CAAC,EAC/BA,EAAM,OAAO,CAAC/J,EAAGjB,IAAM,IAAIkL,IAASjK,EAAEjB,EAAE,GAAGkL,CAAI,CAAC,CAAC,CAC1D,CACA,SAASC,GAAUP,EAAS7C,EAAIqD,EAAY,CAI1C,GAHAV,GAAS,UAAWE,EAAS,CAC3B,eAAgB,CAAC,KAAK,CAC1B,CAAG,EACG,OAAO7C,GAAO,WAAY,MAAM,IAAI,MAAM,6LAA6L,EAG3O,MAAMsD,EAAM,CACV,MAAOP,GAEP,MAAO,OAAO,kBACd,WAAY,GACZ,GAAGM,CACJ,EACD,OAAO,IAAI,QAAQ,CAACE,EAASC,IAAW,CACtC,IAAIC,EACFC,EAAe,GACjB,GAAIb,GAAWA,EAAQ,IAAK,CAC1B,KAAM,CAACc,EAAMC,CAAW,EAAIf,EAAQ,IAAI,MAAM,GAAG,EACjDY,EAAQE,EACRD,EAAeE,CACrB,CAGI,MAAMC,EAAe,CACnB,GAAGvB,GAAeoB,CAAY,CAC/B,EACKI,EAAQ,CAEZ,MAAOR,EAAI,MAEX,GAAGO,CACJ,EACD,IAAIE,EAA4B,GAC5BC,EAAaV,EAAI,MACrB,MAAMW,EAAc,MAAOC,EAAQC,EAAM,CAAA,IAAO,CAE9C,MAAMjG,EAAQ4F,EAAM,MAAQE,EAAaF,EAAM,MAAQE,EAEjDI,EAAsB5B,GAAmB,CAC7C,GAAGsB,EACH,MAAA5F,CACR,CAAO,EACKmG,EAAgB,CACpB,KAAMf,EAAI,MAAQ,SAClB,UAAW,GACX,GAAIY,EAAS,CACX,MAAO,SAASA,CAAM,GAChC,EAAY,CAAE,CACP,EAGKI,EAAsB9B,GAAmB6B,CAAa,EACtDE,EAAkB,CACtB,GAAG1B,EACH,IAAK,GAAGY,CAAK,IAAIa,CAAmB,IAAIF,CAAmB,EAC5D,EACD,GAAI,CACF,MAAMI,EAAU,MAAMC,GAAa3B,EAAQ,EAAE,QAAQyB,CAAe,EAC9D,CACJ,QAAAG,EACA,MAAOC,CACR,EAAGH,EAAQ,KACZ,GAAI,CAACG,GAAiBZ,EACpB,OAAOR,EAAQY,GAAO,EAAE,EAE1B,MAAMS,EAAS,MAAM,QAAQ,QAAQ5E,EAAGwE,CAAO,CAAC,EAChD,IAAIK,EAAc,CAAE,EAUpB,GATAd,EAA4B,GACxBT,EAAI,aAAYuB,EAAcV,EAAI,OAAOS,GAAU,EAAE,GACzDZ,GAAcW,EAOVA,EAAgBb,EAAM,OAAS,CAACE,EAClC,OAAOT,EAAQsB,GAAe,EAAE,EAElC,MAAMrH,EAAOkH,EAAQC,EAAgB,CAAC,EAChCG,EAAYtH,GAAQA,EAAK,GAC/ByG,EAAYa,EAAWD,CAAW,CACnC,OAAQE,EAAO,CACdvB,EAAOuB,CAAK,CACpB,CACK,EAGDd,EAAa,CACjB,CAAG,CACH,CACA,SAASQ,GAAarE,EAAS,CAE7B,GADA0C,GAAW1C,EACP,CAACA,EAAS,MAAM,IAAI,MAAM,0BAA0B,EACxD,GAAIA,EAAQ,aAAe,CAAC,MAAM,QAAQA,EAAQ,WAAW,EAAG,MAAM,IAAI,MAAM,gCAAgC,EAChH,GAAI,CAACA,EAAQ,aAAe,CAAC,MAAM,QAAQA,EAAQ,WAAW,GAAK,CAACA,EAAQ,YAAY,OAAQ,MAAM,IAAI,MAAM,6CAA6C,EAC7J,MAAO,CAIL,QAASgD,GACT,QAAQP,EAAS,CACf,OAAAF,GAAS,OAAQE,CAAO,EACjB,IAAI,QAAQ,CAACU,EAASC,IAAW,CACtC,MAAMwB,EAAW,CAACC,EAAIC,IAAO,CAK3B,GAAIA,EAAG,MAAOA,EAAG,OAAOA,EAAG,KAAK,MAAO,CACrC,MAAMC,EAAS,CACb,KAAMD,EAAG,MAAQ,CAAE,EACnB,WAAYA,EAAG,UAChB,EACGA,EAAG,UAASC,EAAO,QAAUD,EAAG,SAChCA,EAAG,UAASC,EAAO,QAAUD,EAAG,SACpCA,EAAG,QAAQC,CAAM,CAC7B,CACS,EACgBnC,GAAQ,GAAG5C,EAAQ,WAAW,EAAE4E,CAAQ,EAChDnC,EAET,CACE,QAAAU,EACA,OAAAC,EACA,KAAM,OACN,MAAO,MACjB,CAAS,CACT,CAAO,CACP,CACG,CACH,CAEA,SAAS4B,GAAqChF,EAAS,CACrD,GAAI,CAACA,EAAS,MAAM,IAAI,MAAM,0BAA0B,EACxD,GAAI,CAACA,EAAQ,KAAM,MAAM,IAAI,MAAM,gCAAgC,EACnE,GAAI,CAACA,EAAQ,WAAY,MAAM,IAAI,MAAM,sCAAsC,EAC/E,GAAI,CAACA,EAAQ,YAAa,MAAM,IAAI,MAAM,uCAAuC,EACjF,KAAM,CACJ,SAAAiF,EACA,aAAAC,CACD,EAAGlF,EAAQ,YACZ,GAAI,EAAEiF,GAAYC,GAAe,MAAM,IAAI,MAAM,uDAAuD,EACxG,MAAMC,EAAQnF,EAAQ,OAASA,EAAQ,OAAO,KAAK,GAAG,EAAI,OACpDoF,EAAYxO,GAAAA,OAAO,KAAK,GAAGqO,CAAQ,IAAIC,CAAY,EAAE,EAAE,SAAS,QAAQ,EAGxEG,EAAWrF,EAAQ,UAAY,eAC/B4B,EAAM5B,EAAQ,KAAK,QAAQ,MAAO,EAAE,EAAIqF,EACxCvF,EAAO,gCAAgCqF,EAAQ,UAAUA,CAAK,GAAK,EAAE,GAC3E,MAAO,CACL,UAAAC,EACA,IAAAxD,EACA,KAAA9B,CACD,CACH,CACA,SAASwF,GAA4BtF,EAAS,CAC5C,GAAI,CAACA,EAAS,MAAM,IAAI,MAAM,0BAA0B,EACxD,GAAI,CAACA,EAAQ,KAAM,MAAM,IAAI,MAAM,gCAAgC,EACnE,GAAI,CAACA,EAAQ,WAAY,MAAM,IAAI,MAAM,sCAAsC,EAC/E,GAAI,CAACA,EAAQ,YAAa,MAAM,IAAI,MAAM,uCAAuC,EACjF,KAAM,CACJ,SAAAiF,EACA,aAAAC,EACA,KAAAK,CACD,EAAGvF,EAAQ,YACNwF,EAAOxF,EAAQ,WACrB,GAAI,EAAEiF,GAAYC,GAAgBK,GAAO,MAAM,IAAI,MAAM,6DAA6D,EACtH,KAAM,CACJ,SAAAE,EACA,SAAAC,CACJ,EAAMH,EACJ,GAAI,EAAEE,GAAYC,GAAW,MAAM,IAAI,MAAM,wDAAwD,EACrG,MAAMP,GAASnF,EAAQ,QAAU,CAAE,GAAE,KAAK,GAAG,EACvC2F,EAAWR,EAAQ,UAAUA,CAAK,GAAK,GACvCC,EAAYxO,GAAAA,OAAO,KAAK,GAAGqO,CAAQ,IAAIC,CAAY,EAAE,EAAE,SAAS,QAAQ,EAKxEG,EAAWrF,EAAQ,UAAY,UAAUwF,CAAI,mBAC7C5D,EAAM5B,EAAQ,KAAK,QAAQ,MAAO,EAAE,EAAIqF,EAExCvF,EAAO,gCAAgC,mBAAmB2F,CAAQ,CAAC,aAAa,mBAAmBC,CAAQ,CAAC,GAAGC,CAAQ,GAC7H,MAAO,CACL,UAAAP,EACA,IAAAxD,EACA,KAAA9B,CACD,CACH,CACA,SAAS8F,GAAgC5F,EAAS,CAChD,GAAI,CAACA,EAAS,MAAM,IAAI,MAAM,0BAA0B,EACxD,GAAI,CAACA,EAAQ,KAAM,MAAM,IAAI,MAAM,gCAAgC,EACnE,GAAI,CAACA,EAAQ,WAAY,MAAM,IAAI,MAAM,sCAAsC,EAC/E,GAAI,CAACA,EAAQ,YAAa,MAAM,IAAI,MAAM,uCAAuC,EACjF,GAAI,CAACA,EAAQ,aAAc,MAAM,IAAI,MAAM,wCAAwC,EACnF,KAAM,CACJ,SAAAiF,EACA,aAAAC,CACD,EAAGlF,EAAQ,YACZ,GAAI,EAAEiF,GAAYC,GAAe,MAAM,IAAI,MAAM,uDAAuD,EACxG,MAAME,EAAYxO,GAAAA,OAAO,KAAK,GAAGqO,CAAQ,IAAIC,CAAY,EAAE,EAAE,SAAS,QAAQ,EAGxEG,EAAWrF,EAAQ,UAAY,eAC/B4B,EAAM5B,EAAQ,KAAK,QAAQ,MAAO,EAAE,EAAIqF,EACxCvF,EAAO,0CAA0C,mBAAmBE,EAAQ,YAAY,CAAC,GAC/F,MAAO,CACL,UAAAoF,EACA,IAAAxD,EACA,KAAA9B,CACD,CACH,CACA,SAAS+F,GAAoC7F,EAAS,CACpD,GAAI,CAACA,EAAS,MAAM,IAAI,MAAM,0BAA0B,EACxD,GAAI,CAACA,EAAQ,WAAY,MAAM,IAAI,MAAM,sCAAsC,EAC/E,MAAMwF,EAAOxF,EAAQ,WACrBA,EAAQ,SAAWA,EAAQ,UAAY,UAAUwF,CAAI,mBACrD,MAAMhB,EAASQ,GAAqChF,CAAO,EAC3D,OAAIA,EAAQ,YAAY,cAAawE,EAAO,MAAQ,iBAAiBxE,EAAQ,YAAY,WAAW,IAC7F,CACL,GAAGwE,CACJ,CACH,CAEA,SAASsB,GAAgBC,EAAOC,EAAK,CACnC,MAAO,CACL,GAAGA,EACH,QAAS,CACP,GAAGA,EAAI,QACP,cAAe,UAAUD,CAAK,EACpC,CACG,CACH,CACA,SAASE,GAAwBC,EAAW,CAC1C,OAAO,KAAK,IAAK,EAEjBA,EAAY,IAAO,EAAI,GAAK,GAC9B,CACA,eAAeC,GAAe,CAC5B,QAAAC,EACA,IAAAxE,EACA,UAAAwD,EACA,KAAAtF,EACA,WAAAuG,EACA,aAAAC,EACA,aAAAC,EACA,SAAAC,EACA,cAAAC,CACF,EAAG,CACD,GAAI,CACF,MAAMC,EAAO,MAAMN,EAAQxE,EAAK,CAC9B,OAAQ,OACR,QAAS,CACP,cAAe,SAASwD,CAAS,GACjC,iBAAkBxO,GAAAA,OAAO,WAAWkJ,CAAI,EAAE,SAAU,EACpD,eAAgB,mCACjB,EACD,KAAAA,CACN,CAAK,EACD,GAAI4G,EAAK,GAAI,CACX,KAAM,CACJ,aAAcX,EACd,WAAYG,EACZ,cAAeS,CACvB,EAAU,MAAMD,EAAK,KAAM,EACfE,EAAiBX,GAAwBC,CAAS,EAGxDG,EAAW,IAAI,CACb,MAAAN,EACA,eAAAa,EACA,aAAAD,CACD,EAAEF,CAAa,EAGhBH,EAAa,IAAI,EAAK,EAMtB,MAAMO,EAAiBN,EAAa,MAAO,EAC3CA,EAAe,CAAE,EACjBM,EAAe,QAAQC,GAAQ,CAE7B,MAAMC,EAAkBjB,GAAgBC,EAAOe,EAAK,OAAO,EAK3DA,EAAK,KAAKC,EAAiBD,EAAK,QAAQ,CAChD,CAAO,EACD,MACN,CAGI,IAAIzL,EACJ,MAAM6E,EAAO,MAAMwG,EAAK,KAAM,EAC9B,GAAI,CACFrL,EAAS,KAAK,MAAM6E,CAAI,CACzB,MAAe,CAEpB,CACI,MAAMyE,EAAQ,IAAI,MAAMtJ,EAASA,EAAO,QAAU6E,CAAI,EAClD7E,IAAQsJ,EAAM,KAAOtJ,GAQzBiL,EAAa,IAAI,EAAK,EACtBE,EAAS,OAAO7B,CAAK,CACtB,OAAQA,EAAO,CAOd2B,EAAa,IAAI,EAAK,EAClBE,GAAY,OAAOA,EAAS,QAAW,YAAYA,EAAS,OAAO7B,CAAK,CAChF,CACA,CACA,SAASqC,GAAmB,CAC1B,QAAAvE,EACA,SAAA+D,EACA,IAAA5E,EACA,UAAAwD,EACA,KAAAtF,EACA,aAAAyG,EACA,aAAAD,EACA,WAAAD,EACA,cAAAI,EACA,MAAOL,CACT,EAAGa,EAAMC,EAAa,CACpB,GAAI,CAACd,GAAW,OAAO,MAAU,IAAa,MAAM,IAAI,MAAM,8FAA8F,EAI5J,GAHKA,IAASA,EAAU,OAGpB3D,EAAQ,SAAWA,EAAQ,QAAQ,eAAiBA,EAAQ,SAAWA,EAAQ,QAAQ,cAAe,CACxGwE,EAAKxE,EAAS+D,CAAQ,EACtB,MACJ,CAGE,MAAMW,EAAWd,EAAW,IAAII,CAAa,EAC7C,GAAIU,GAAYA,EAAS,OAAS,KAAK,IAAK,EAAGA,EAAS,eAAgB,CACtE,MAAMJ,EAAkBjB,GAAgBqB,EAAS,MAAO1E,CAAO,EAC/DwE,EAAKF,EAAiBP,CAAQ,EAC9B,MACJ,CAeE,GAPAD,EAAa,KAAK,CAChB,QAAA9D,EACA,SAAA+D,EACA,KAAAS,CACJ,CAAG,EAGG,CAAAX,EAAa,MASjB,IANAA,EAAa,IAAI,EAAI,EAMjBa,GAAYA,EAAS,eAAiB,CAACA,EAAS,OAASA,EAAS,OAAS,KAAK,IAAK,EAAGA,EAAS,gBAAiB,CACpH,GAAI,CAACD,EAAa,MAAM,IAAI,MAAM,0BAA0B,EAC5Df,GAAe,CACb,QAAAC,EACA,GAAGR,GAAgC,CACjC,GAAGsB,EACH,aAAcC,EAAS,YAC/B,CAAO,EACD,cAAAV,EACA,WAAAJ,EACA,aAAAC,EACA,aAAAC,EACA,SAAAC,CACN,CAAK,EACD,MACJ,CAGEL,GAAe,CACb,QAAAC,EACA,IAAAxE,EACA,UAAAwD,EACA,KAAAtF,EACA,cAAA2G,EACA,WAAAJ,EACA,aAAAC,EACA,aAAAC,EACA,SAAAC,CACJ,CAAG,EACH,CAEA,SAASY,GAAMC,EAAS,CACtB,IAAIjR,EAAQiR,EACZ,MAAO,CACL,IAAKC,GAAoBlR,EACzB,IAAK,CAACoE,EAAK8M,IAAqB,CAC9BlR,EAAQoE,CACd,CACG,CACH,CAEA,SAAS+M,GAA8CvH,EAAS,CAC9D,MAAMqG,EAAarG,EAAQ,YAAcoH,GAAM,CAC7C,MAAO,GACP,eAAgB,EACpB,CAAG,EACKb,EAAe,CAAE,EACjBD,EAAec,GAAM,EAAK,EAChC,OAAOH,GAAQ,CAACxE,EAAS+D,IAAa,CAGpC,GAAI/D,EAAQ,SAAWA,EAAQ,QAAQ,eAAiBA,EAAQ,SAAWA,EAAQ,QAAQ,cAAe,CACxGwE,EAAKxE,EAAS+D,CAAQ,EACtB,MACN,CACI,MAAMxE,EAAS,CACb,QAAAS,EACA,SAAA+D,EACA,GAAGX,GAAoC7F,CAAO,EAC9C,aAAAuG,EACA,aAAAD,EACA,WAAAD,EACA,MAAOrG,EAAQ,KAChB,EACDgH,GAAmBhF,EAAQiF,EAAMjH,CAAO,CACzC,CACH,CAEA,SAASwH,GAAmBxH,EAAS,CACnC,MAAO,CACL,SAAUA,EAAQ,YAAY,SAC9B,KAAMA,EAAQ,KACd,WAAYA,EAAQ,UACrB,CACH,CAEA,SAASyH,GAA+CzH,EAAS,CAC/D,MAAMqG,EAAarG,EAAQ,YAAcoH,GAAM,CAC7C,MAAO,GACP,eAAgB,EACpB,CAAG,EACKd,EAAec,GAAM,EAAK,EAC1Bb,EAAe,CAAE,EACvB,OAAOU,GAAQ,CAACxE,EAAS+D,IAAa,CAGpC,GAAI/D,EAAQ,SAAWA,EAAQ,QAAQ,eAAiBA,EAAQ,SAAWA,EAAQ,QAAQ,cAAe,CACxGwE,EAAKxE,EAAS+D,CAAQ,EACtB,MACN,CACI,MAAMxE,EAAS,CACb,QAAAS,EACA,SAAA+D,EACA,GAAGxB,GAAqChF,CAAO,EAC/C,aAAAuG,EACA,aAAAD,EACA,WAAAD,EACA,cAAemB,GAAmBxH,CAAO,EACzC,MAAOA,EAAQ,KAChB,EACDgH,GAAmBhF,EAAQiF,CAAI,CAChC,CACH,CAEA,SAASS,GAAwCC,EAAgB,GAAI3H,EAAU,CAAA,EAAI,CACjF,OAAOiH,GAAQ,CAACxE,EAAS+D,IAAa,CACpC,GAAI,OAAOmB,GAAkB,SAAU,MAAM,IAAI,MAAM,gCAAgC,EACvF,MAAMC,EAAQ5H,EAAQ,QAAU,OAAY,GAAOA,EAAQ,MAM3D,GAAI,CAAC2H,IAAkBlF,EAAQ,SAAWA,EAAQ,QAAQ,eAAiBA,EAAQ,SAAWA,EAAQ,QAAQ,gBAAkBmF,IAAU,GACxI,OAAOX,EAAKxE,EAAS+D,CAAQ,EAE/B,MAAMO,EAAkB,CACtB,GAAGtE,EACH,QAAS,CACP,GAAGA,EAAQ,QACX,cAAekF,CACvB,CACK,EACD,OAAOV,EAAKF,EAAiBP,CAAQ,CACtC,CACH,CAEA,SAASqB,GAAsC7H,EAAS,CACtD,MAAMqG,EAAarG,EAAQ,YAAcoH,GAAM,CAAA,CAAE,EAC3Cb,EAAe,CAAE,EACjBD,EAAec,GAAM,EAAK,EAChC,OAAOH,GAAQ,CAACxE,EAAS+D,IAAa,CAGpC,GAAI/D,EAAQ,SAAWA,EAAQ,QAAQ,eAAiBA,EAAQ,SAAWA,EAAQ,QAAQ,cAAe,CACxGwE,EAAKxE,EAAS+D,CAAQ,EACtB,MACN,CACI,MAAMxE,EAAS,CACb,QAAAS,EACA,SAAA+D,EACA,GAAGlB,GAA4BtF,CAAO,EACtC,aAAAuG,EACA,aAAAD,EACA,WAAAD,EACA,MAAOrG,EAAQ,KAChB,EACDgH,GAAmBhF,EAAQiF,EAAMjH,CAAO,CACzC,CACH,CAEA,SAAS8H,GAA0C9H,EAAS,CAC1D,MAAMqG,EAAarG,EAAQ,YAAcoH,GAAM,CAC7C,MAAO,GACP,eAAgB,EACpB,CAAG,EACKb,EAAe,CAAE,EACjBD,EAAec,GAAM,EAAK,EAChC,OAAOH,GAAQ,CAACxE,EAAS+D,IAAa,CAGpC,GAAI/D,EAAQ,SAAWA,EAAQ,QAAQ,eAAiBA,EAAQ,SAAWA,EAAQ,QAAQ,cAAe,CACxGwE,EAAKxE,EAAS+D,CAAQ,EACtB,MACN,CACI,MAAMxE,EAAS,CACb,QAAAS,EACA,SAAA+D,EACA,GAAGZ,GAAgC5F,CAAO,EAC1C,aAAAuG,EACA,aAAAD,EACA,WAAAD,EACA,MAAOrG,EAAQ,KAChB,EACDgH,GAAmBhF,EAAQiF,CAAI,CAChC,CACH,CAEA,IAAIc,GAA+B,OAAO,OAAO,CAC/C,UAAW,KACX,4CAA6CR,GAC7C,6CAA8CE,GAC9C,sCAAuCC,GACvC,oCAAqCG,GACrC,wCAAyCC,EAC3C,CAAC,EA2gBD,KAAM,CACJ,oCAAAE,GACA,4CAAAC,GACF,6CAAEC,GACA,wCAAAC,GACA,sCAAAC,EACF,EAAIL,GC1pCJ,SAASM,GAAQC,EAAG,CAClB,0BAEA,OAAOD,GAAwB,OAAO,QAArB,YAA2C,OAAO,OAAO,UAA1B,SAAqC,SAAUC,EAAG,CAChG,OAAO,OAAOA,CACf,EAAG,SAAUA,EAAG,CACf,OAAOA,GAAmB,OAAO,QAArB,YAA+BA,EAAE,cAAgB,QAAUA,IAAM,OAAO,UAAY,SAAW,OAAOA,CACtH,EAAKD,GAAQC,CAAC,CACd,CAEA,SAASC,GAAaC,EAAGC,EAAG,CAC1B,GAAgB,OAAOD,GAAnB,UAAwB,CAACA,EAAG,OAAOA,EACvC,IAAI5S,EAAI4S,EAAE,OAAO,WAAW,EAC5B,GAAe5S,IAAX,OAAc,CAChB,IAAI5B,EAAI4B,EAAE,KAAK4S,EAAGC,CAAc,EAChC,GAAgB,OAAOzU,GAAnB,SAAsB,OAAOA,EACjC,MAAM,IAAI,UAAU,8CAA8C,CACtE,CACE,OAAqByU,IAAb,SAAiB,OAAS,QAAQD,CAAC,CAC7C,CAEA,SAASE,GAAeF,EAAG,CACzB,IAAIxU,EAAIuU,GAAaC,EAAG,QAAQ,EAChC,OAAmB,OAAOxU,GAAnB,SAAuBA,EAAIA,EAAI,EACxC,CAEA,SAAS2U,GAAgB/S,EAAG6S,EAAGD,EAAG,CAChC,OAAQC,EAAIC,GAAeD,CAAC,KAAM7S,EAAI,OAAO,eAAeA,EAAG6S,EAAG,CAChE,MAAOD,EACP,WAAY,GACZ,aAAc,GACd,SAAU,EACX,CAAA,EAAI5S,EAAE6S,CAAC,EAAID,EAAG5S,CACjB,CAEA,SAASgT,GAAQhT,EAAG6S,EAAG,CACrB,IAAID,EAAI,OAAO,KAAK5S,CAAC,EACrB,GAAI,OAAO,sBAAuB,CAChC,IAAI0S,EAAI,OAAO,sBAAsB1S,CAAC,EACtC6S,IAAMH,EAAIA,EAAE,OAAO,SAAUG,EAAG,CAC9B,OAAO,OAAO,yBAAyB7S,EAAG6S,CAAC,EAAE,UACnD,CAAK,GAAID,EAAE,KAAK,MAAMA,EAAGF,CAAC,CAC1B,CACE,OAAOE,CACT,CACA,SAASK,EAAejT,EAAG,CACzB,QAAS6S,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,IAAID,EAAY,UAAUC,CAAC,GAAnB,KAAuB,UAAUA,CAAC,EAAI,CAAE,EAChDA,EAAI,EAAIG,GAAQ,OAAOJ,CAAC,EAAG,EAAE,EAAE,QAAQ,SAAUC,EAAG,CAClDE,GAAgB/S,EAAG6S,EAAGD,EAAEC,CAAC,CAAC,CAChC,CAAK,EAAI,OAAO,0BAA4B,OAAO,iBAAiB7S,EAAG,OAAO,0BAA0B4S,CAAC,CAAC,EAAII,GAAQ,OAAOJ,CAAC,CAAC,EAAE,QAAQ,SAAUC,EAAG,CAChJ,OAAO,eAAe7S,EAAG6S,EAAG,OAAO,yBAAyBD,EAAGC,CAAC,CAAC,CACvE,CAAK,CACL,CACE,OAAO7S,CACT,CAEA,SAASkT,GAA8BL,EAAG,EAAG,CAC3C,GAAYA,GAAR,KAAW,MAAO,CAAE,EACxB,IAAID,EAAI,CAAE,EACV,QAASzO,KAAK0O,EAAG,GAAI,CAAA,EAAG,eAAe,KAAKA,EAAG1O,CAAC,EAAG,CACjD,GAAW,EAAE,QAAQA,CAAC,IAAlB,GAAqB,SACzByO,EAAEzO,CAAC,EAAI0O,EAAE1O,CAAC,CACd,CACE,OAAOyO,CACT,CAEA,SAASO,GAAyBnT,EAAG4S,EAAG,CACtC,GAAY5S,GAAR,KAAW,MAAO,CAAE,EACxB,IAAI0S,EACFG,EACAzU,EAAI8U,GAA8BlT,EAAG4S,CAAC,EACxC,GAAI,OAAO,sBAAuB,CAChC,IAAIzO,EAAI,OAAO,sBAAsBnE,CAAC,EACtC,IAAK6S,EAAI,EAAGA,EAAI1O,EAAE,OAAQ0O,IAAKH,EAAIvO,EAAE0O,CAAC,EAAUD,EAAE,QAAQF,CAAC,IAAlB,IAAuB,CAAA,EAAG,qBAAqB,KAAK1S,EAAG0S,CAAC,IAAMtU,EAAEsU,CAAC,EAAI1S,EAAE0S,CAAC,EACrH,CACE,OAAOtU,CACT,CAEA,SAASgV,EAAYC,EAAYC,EAAS,CACxC,IAAIC,EAAO,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,CAAE,EAEjF,KAAK,OAAS,KAAK,WAAa,KAAK,KAAOF,EAC5C,KAAK,QAAUC,EACf,OAAO,OAAO,KAAMC,CAAI,EACxB,KAAK,KAAO,KAAK,YAAY,KAE7B,KAAK,YAAY,UAAU,UAAY,MAAM,UACzC,MAAM,mBAAmB,MAAM,kBAAkB,KAAM,KAAK,WAAW,CAC7E,CAGA,SAASC,IAAe,CACtB,QAASC,EAAO,UAAU,OAAQtG,EAAO,IAAI,MAAMsG,CAAI,EAAGC,EAAO,EAAGA,EAAOD,EAAMC,IAC/EvG,EAAKuG,CAAI,EAAI,UAAUA,CAAI,EAE7BN,EAAY,KAAK,MAAMA,EAAa,CAAC,KAAM,CAAgD,EAAC,OAAOjG,CAAI,CAAC,CAC1G,CACA,SAASwG,IAAY,CACnB,QAASC,EAAQ,UAAU,OAAQzG,EAAO,IAAI,MAAMyG,CAAK,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACpF1G,EAAK0G,CAAK,EAAI,UAAUA,CAAK,EAE/BT,EAAY,KAAK,MAAMA,EAAa,CAAC,IAAI,EAAE,OAAOjG,CAAI,CAAC,CACzD,CACA,SAAS2G,IAAa,CACpB,QAASC,EAAQ,UAAU,OAAQ5G,EAAO,IAAI,MAAM4G,CAAK,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACpF7G,EAAK6G,CAAK,EAAI,UAAUA,CAAK,EAE/BZ,EAAY,KAAK,MAAMA,EAAa,CAAC,KAAM,GAAG,EAAE,OAAOjG,CAAI,CAAC,CAC9D,CACA,SAAS8G,IAAe,CACtB,QAASC,EAAQ,UAAU,OAAQ/G,EAAO,IAAI,MAAM+G,CAAK,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACpFhH,EAAKgH,CAAK,EAAI,UAAUA,CAAK,EAE/Bf,EAAY,KAAK,MAAMA,EAAa,CAAC,KAAM,GAAG,EAAE,OAAOjG,CAAI,CAAC,CAC9D,CACA,SAASiH,IAAY,CACnB,QAASC,EAAQ,UAAU,OAAQlH,EAAO,IAAI,MAAMkH,CAAK,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACpFnH,EAAKmH,CAAK,EAAI,UAAUA,CAAK,EAE/BlB,EAAY,KAAK,MAAMA,EAAa,CAAC,KAAM,GAAG,EAAE,OAAOjG,CAAI,CAAC,CAC9D,CACA,SAASoH,IAAW,CAClB,QAASC,EAAQ,UAAU,OAAQrH,EAAO,IAAI,MAAMqH,CAAK,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACpFtH,EAAKsH,CAAK,EAAI,UAAUA,CAAK,EAE/BrB,EAAY,KAAK,MAAMA,EAAa,CAAC,KAAM,GAAG,EAAE,OAAOjG,CAAI,CAAC,CAC9D,CACA,SAASuH,IAAyB,CAChC,QAASC,EAAQ,UAAU,OAAQxH,EAAO,IAAI,MAAMwH,CAAK,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACpFzH,EAAKyH,CAAK,EAAI,UAAUA,CAAK,EAE/BxB,EAAY,KAAK,MAAMA,EAAa,CAAC,KAAM,GAAG,EAAE,OAAOjG,CAAI,CAAC,CAC9D,CACA,SAAS0H,IAAsB,CAC7B,QAASC,EAAQ,UAAU,OAAQ3H,EAAO,IAAI,MAAM2H,CAAK,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACpF5H,EAAK4H,CAAK,EAAI,UAAUA,CAAK,EAE/B3B,EAAY,KAAK,MAAMA,EAAa,CAAC,KAAM,GAAG,EAAE,OAAOjG,CAAI,CAAC,CAC9D,CACA,SAAS6H,IAAqB,CAC5B,QAASC,EAAQ,UAAU,OAAQ9H,EAAO,IAAI,MAAM8H,CAAK,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACpF/H,EAAK+H,CAAK,EAAI,UAAUA,CAAK,EAE/B9B,EAAY,KAAK,MAAMA,EAAa,CAAC,KAAM,GAAG,EAAE,OAAOjG,CAAI,CAAC,CAC9D,CAGA,SAASgI,GAAehX,EAAM,CAC5B,OAAQA,EAAI,CACV,IAAK,GACH,OAAOqV,GACT,IAAK,KACH,OAAOM,GACT,IAAK,KACH,OAAOG,GACT,IAAK,KACH,OAAOG,GACT,IAAK,KACH,OAAOG,GACT,IAAK,KACH,OAAOG,GACT,IAAK,KACH,OAAOG,GACT,IAAK,KACH,OAAOG,GACT,QACE,MACN,CACA,CAEA,IAAIvM,GAAsB,OAAO,OAAO,CACtC,UAAW,KACX,aAAc+K,GACd,UAAWG,GACX,WAAYG,GACZ,aAAcG,GACd,UAAWG,GACX,SAAUG,GACV,uBAAwBG,GACxB,oBAAqBG,GACrB,mBAAoBG,GACpB,QAAWG,EACb,CAAC,EAED,SAASC,GAAaC,EAAS,CAC7B,GAAIA,EAAQ,IAEV,OAAOA,EAAQ,IAAK,EAGtB,GAAI,CAACA,EAAQ,QAAS,MAAO,CAAE,EAG/B,IAAIC,EAAM,CAAE,EACZ,OAAAD,EAAQ,QAAQ,SAAU7U,EAAOsI,EAAM,CACrCwM,EAAIxM,CAAI,EAAItI,CAChB,CAAG,EACM8U,CACT,CAEA,IAAIC,GAAY,CAAC,aAAc,SAAS,EACxC,SAASC,GAAYC,EAAM,CACzB,IAAIpC,EAAaoC,EAAK,WACpBnC,EAAUmC,EAAK,QACfC,EAAOvC,GAAyBsC,EAAMF,EAAS,EAC7CI,EAAerC,GAAW,qCAC1BD,IAAe,MAAKsC,EAAe,kBAAkB,OAAOD,EAAK,gBAAgB,GAAG,GACxF,IAAIE,EAAgBT,GAAe9B,CAAU,EAC7C,OAAIuC,EAAsB,IAAIA,EAAcD,EAAcD,CAAI,EACvD,IAAI/B,GAAUN,EAAYsC,EAAcD,CAAI,CACrD,CAIA,SAASG,GAAkBC,EAAYC,EAAYC,EAAYC,EAASC,EAAU,CAChF,OAAID,GAAgBH,IAAe,EACjC,KAAK,IAAI,KAAK,OAAO,KAAK,SAAW,GAAKC,EAAa,KAAK,IAAI,EAAGD,CAAU,CAAC,EAAGI,CAAQ,EACpFH,CACT,CACA,SAASI,GAAatJ,EAASuJ,EAAyB,CAClDA,IACEvJ,EAAQ,QAAQ,gBAAeA,EAAQ,QAAQ,cAAgB,mBAC/DA,EAAQ,QAAQ,gBAAeA,EAAQ,QAAQ,cAAgB,mBAEvE,CACA,SAASwJ,GAAqBC,EAAO,CACnC,IAAIC,EAAOD,EAAM,KACfE,EAAkBF,EAAM,gBACxBG,EAAyBH,EAAM,uBAC/BI,EAAyBJ,EAAM,uBAC/BK,EAAwBL,EAAM,wBAC9BF,EAA0BO,IAA0B,OAAS,GAAOA,EACpEC,EAAcN,EAAM,YACpBO,EAAUP,EAAM,QAChBQ,EAAoBR,EAAM,YAC1BS,EAAqBD,IAAsB,OAAS,CAAA,EAAKA,EACzDE,EAAwBD,EAAmB,WAC3Cf,EAAagB,IAA0B,OAAS,GAAKA,EACrDC,EAAwBF,EAAmB,QAC3Cd,EAAUgB,IAA0B,OAAS,GAAOA,EACpDC,EAAwBH,EAAmB,WAC3ChB,EAAamB,IAA0B,OAAS,IAAMA,EACtDC,EAAyBJ,EAAmB,SAC5Cb,EAAWiB,IAA2B,OAAS,IAAWA,EAC1DC,EAAyBL,EAAmB,aAC5CM,EAAeD,IAA2B,OAAS,GAAQA,EAC3DE,EAAyBP,EAAmB,WAC5CQ,EAAaD,IAA2B,OAAS,CAAC,GAAG,EAAIA,EACzD9G,EAAU8F,EAAM,MAChBkB,EAAmBlB,EAAM,gBACzBmB,EAAqBnB,EAAM,mBAC7B,GAAI,CAAC9F,GAAW,OAAO,MAAU,IAAa,MAAM,IAAI,MAAM,8FAA8F,EAC5J,GAAIqG,GAAW,CAACY,GAAsB,CAACD,GAAoB,OAAO,gBAAoB,IAAa,MAAM,IAAI,MAAM,qJAAqJ,EACxQ,IAAIE,EASJ,GARIlH,EACFkH,EAAgBlH,EAKhBkH,EAAgB,MAEd,CAAC,MAAM,QAAQH,CAAU,EAC3B,MAAM,IAAI,MAAM,qEAAqE,EAEvF,OAAO,SAAUlG,EAAM,CACrB,OAAO,SAAUxE,EAAS+D,EAAU,CAClC,IAAI+G,EACA3L,EAAMuK,EAAK,QAAQ,MAAO,EAAE,EAAI1J,EAAQ,IACxC+K,EAAgB3E,EAAe,GAAIpG,EAAQ,OAAO,EAGhD,OAAO,UAAU,eAAe,KAAK+K,EAAe,cAAc,GAAK,OAAO,UAAU,eAAe,KAAKA,EAAe,cAAc,IAC7IA,EAAc,cAAc,EAAI,oBAI9BA,EAAc,cAAc,IAAM,MACpC,OAAOA,EAAc,cAAc,EAErC,IAAI1N,GAAO,CAAC,mBAAoB,qBAAqB,EAAE,QAAQ0N,EAAc,cAAc,CAAC,EAAI,IAAM,OAAO/K,EAAQ,MAAS,UAAY,OAAO,SAASA,EAAQ,IAAI,EAAIA,EAAQ,KAAO,KAAK,UAAUA,EAAQ,MAAQ,MAAS,EAC7N3C,KAAS,OAAOA,IAAS,UAAY,OAAO,SAASA,EAAI,KAC3D0N,EAAc,gBAAgB,EAAI,OAAO,WAAW1N,EAAI,EAAE,SAAU,GAEtE,IAAI2N,GAAe,CACjB,OAAQhL,EAAQ,OAChB,QAAS+K,CACV,EACGpB,IACFqB,GAAa,YAAcrB,GAExBa,IACCR,GAAWY,GAAsBD,KAEnCG,GAAmBF,EAAqBA,EAAkB,EAAK,OAASD,GAAoB,IAAI,gBAC5FG,IACFE,GAAa,OAASF,EAAgB,SAIxCzN,KACF2N,GAAa,KAAO3N,IAEtB,IAAI4L,EAAa,EAEjB,SAASgC,IAAe,CAClBT,IACER,GAAWY,GAAsBD,KAEnCG,GAAmBF,EAAqBA,EAAkB,EAAK,OAASD,GAAoB,IAAI,gBAC5FG,IACFE,GAAa,OAASF,EAAgB,SAK5C,IAAII,EACAlB,IAASkB,EAAQ,WAAW,UAAY,CAC1CJ,EAAgB,MAAO,CACxB,EAAEd,CAAO,GACVa,EAAc1L,EAAK6L,EAAY,EAAE,KAAK,SAAU5R,EAAK,CACnD,GAAIA,EAAI,GAAI,CACV,GAAI4R,GAAa,SAAW,OAAQ,CAClCxG,EAAKxE,EAASoG,EAAeA,EAAe,CAAA,EAAIrC,CAAQ,EAAG,GAAI,CAC7D,WAAY3K,EAAI,MAChC,CAAe,CAAC,EACF,MACd,CACYA,EAAI,KAAI,EAAG,KAAK,SAAU2I,EAAQ,CAEhC,IAAInJ,EACJ,GAAI,CACFA,EAASmJ,EAAO,OAAS,EAAI,KAAK,MAAMA,CAAM,EAAI,CAAE,CACrD,MAAa,CACZ,GAAIgI,GAAed,EAAaE,EAAY,CAC1C,WAAW8B,GAAcjC,GAAkBC,EAAYC,EAAYC,EAAYC,EAASC,CAAQ,CAAC,EACjGJ,GAAc,EACd,MAClB,CACgBrQ,EAASmJ,CACzB,CACc,IAAIoJ,EAAiB/E,EAAeA,EAAe,CAAA,EAAIrC,CAAQ,EAAG,GAAI,CACpE,KAAMnL,EACN,WAAYQ,EAAI,MAChC,CAAe,EACGwQ,IAAwBuB,EAAe,QAAU5C,GAAanP,EAAI,OAAO,GACzEyQ,IACFsB,EAAe,QAAU/E,EAAe,CAAA,EAAI4E,EAAY,EACxD1B,GAAa6B,EAAe,QAAS5B,CAAuB,GAE9D/E,EAAKxE,EAASmL,CAAc,CAC1C,CAAa,EAAE,MAAM,SAAUC,EAAK,CACtB,GAAIrB,GAAiBd,EAAaE,EAAY,CAC5C,WAAW8B,GAAcjC,GAAkBC,EAAYC,EAAYC,EAAYC,EAASC,CAAQ,CAAC,EACjGJ,GAAc,EACd,MAChB,CACc,IAAI/G,EAAQ,IAAIyE,GAAayE,EAAI,QAAS,CACxC,gBAAiBpL,EACjB,WAAYiJ,CAC5B,CAAe,EACDK,GAAapH,EAAM,gBAAiBqH,CAAuB,EAC3D/E,EAAKxE,EAASoG,EAAeA,EAAe,CAAA,EAAIrC,CAAQ,EAAG,GAAI,CAC7D,MAAO7B,EACP,WAAY,CAC5B,CAAe,CAAC,CAChB,CAAa,EACD,MACZ,CAIU9I,EAAI,KAAI,EAAG,KAAK,SAAUqE,EAAM,CAE9B,IAAI7E,EACJ,GAAI,CACFA,EAAS,KAAK,MAAM6E,CAAI,CACzB,MAAe,CACd7E,EAAS6E,CACvB,CACY,IAAIyE,EAAQyG,GAAYvC,EAAe,CACrC,WAAYhN,EAAI,OAChB,gBAAiB4G,EACjB,WAAYiJ,EACZ,QAASV,GAAanP,EAAI,OAAO,CAC/C,EAAewM,GAAQhN,CAAM,IAAM,SAAW,CAChC,QAASA,EAAO,QAChB,KAAMA,CACpB,EAAgB,CACF,QAASA,EACT,KAAMA,CACpB,CAAa,CAAC,EACF,GAAImR,IAAgBW,EAAW,QAAQxI,EAAM,UAAU,IAAM,KAAOwI,GAAe,KAAgC,OAASA,EAAW,QAAQxI,EAAM,OAAO,KAAO,KAC7J+G,EAAaE,EAAY,CAC3B,WAAW8B,GAAcjC,GAAkBC,EAAYC,EAAYC,EAAYC,EAASC,CAAQ,CAAC,EACjGJ,GAAc,EACd,MAChB,CAEYK,GAAapH,EAAM,gBAAiBqH,CAAuB,EAE3D,IAAI4B,GAAiB/E,EAAeA,EAAe,CAAA,EAAIrC,CAAQ,EAAG,GAAI,CACpE,MAAO7B,EACP,WAAY9I,EAAI,MAC9B,CAAa,EACDoL,EAAKxE,EAASmL,EAAc,CACxC,CAAW,EAAE,MAAM,SAAUC,EAAK,CACtB,GAAIrB,GAAiBd,EAAaE,EAAY,CAC5C,WAAW8B,GAAcjC,GAAkBC,EAAYC,EAAYC,EAAYC,EAASC,CAAQ,CAAC,EACjGJ,GAAc,EACd,MACd,CACY,IAAI/G,EAAQ,IAAI8F,GAAoBoD,EAAI,QAAS,CAC/C,gBAAiBpL,EACjB,WAAYiJ,CAC1B,CAAa,EACDK,GAAapH,EAAM,gBAAiBqH,CAAuB,EAC3D/E,EAAKxE,EAASoG,EAAeA,EAAe,CAAA,EAAIrC,CAAQ,EAAG,GAAI,CAC7D,MAAO7B,EACP,WAAY,GAC1B,CAAa,CAAC,CACd,CAAW,CACF,EAED,SAAU/O,EAAG,CACX,GAAI4W,GAAiBd,EAAaE,EAAY,CAC5C,WAAW8B,GAAcjC,GAAkBC,EAAYC,EAAYC,EAAYC,EAASC,CAAQ,CAAC,EACjGJ,GAAc,EACd,MACZ,CACU,IAAI/G,EAAQ,IAAIyE,GAAaxT,EAAE,QAAS,CACtC,gBAAiB6M,EACjB,WAAYiJ,CACxB,CAAW,EACDK,GAAapH,EAAM,gBAAiBqH,CAAuB,EAC3D/E,EAAKxE,EAASoG,EAAeA,EAAe,CAAA,EAAIrC,CAAQ,EAAG,GAAI,CAC7D,MAAO7B,EACP,WAAY,CACxB,CAAW,CAAC,CACZ,CAAS,EAAE,QAAQ,UAAY,CACrB,aAAagJ,CAAK,CAC5B,CAAS,CACT,CACMD,GAAc,CACf,CACF,CACH,CC7bA,SAASnF,GAAaC,EAAGC,EAAG,CAC1B,GAAgB,OAAOD,GAAnB,UAAwB,CAACA,EAAG,OAAOA,EACvC,IAAI5S,EAAI4S,EAAE,OAAO,WAAW,EAC5B,GAAe5S,IAAX,OAAc,CAChB,IAAI5B,EAAI4B,EAAE,KAAK4S,EAAGC,CAAc,EAChC,GAAgB,OAAOzU,GAAnB,SAAsB,OAAOA,EACjC,MAAM,IAAI,UAAU,8CAA8C,CACtE,CACE,OAAqByU,IAAb,SAAiB,OAAS,QAAQD,CAAC,CAC7C,CAEA,SAASE,GAAeF,EAAG,CACzB,IAAIxU,EAAIuU,GAAaC,EAAG,QAAQ,EAChC,OAAmB,OAAOxU,GAAnB,SAAuBA,EAAIA,EAAI,EACxC,CAEA,SAAS2U,GAAgB/S,EAAG6S,EAAGD,EAAG,CAChC,OAAQC,EAAIC,GAAeD,CAAC,KAAM7S,EAAI,OAAO,eAAeA,EAAG6S,EAAG,CAChE,MAAOD,EACP,WAAY,GACZ,aAAc,GACd,SAAU,EACX,CAAA,EAAI5S,EAAE6S,CAAC,EAAID,EAAG5S,CACjB,CAEA,SAASgT,GAAQhT,EAAG6S,EAAG,CACrB,IAAID,EAAI,OAAO,KAAK5S,CAAC,EACrB,GAAI,OAAO,sBAAuB,CAChC,IAAI0S,EAAI,OAAO,sBAAsB1S,CAAC,EACtC6S,IAAMH,EAAIA,EAAE,OAAO,SAAUG,EAAG,CAC9B,OAAO,OAAO,yBAAyB7S,EAAG6S,CAAC,EAAE,UACnD,CAAK,GAAID,EAAE,KAAK,MAAMA,EAAGF,CAAC,CAC1B,CACE,OAAOE,CACT,CACA,SAASK,GAAejT,EAAG,CACzB,QAAS6S,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,IAAID,EAAY,UAAUC,CAAC,GAAnB,KAAuB,UAAUA,CAAC,EAAI,CAAE,EAChDA,EAAI,EAAIG,GAAQ,OAAOJ,CAAC,EAAG,EAAE,EAAE,QAAQ,SAAUC,EAAG,CAClDE,GAAgB/S,EAAG6S,EAAGD,EAAEC,CAAC,CAAC,CAChC,CAAK,EAAI,OAAO,0BAA4B,OAAO,iBAAiB7S,EAAG,OAAO,0BAA0B4S,CAAC,CAAC,EAAII,GAAQ,OAAOJ,CAAC,CAAC,EAAE,QAAQ,SAAUC,EAAG,CAChJ,OAAO,eAAe7S,EAAG6S,EAAG,OAAO,yBAAyBD,EAAGC,CAAC,CAAC,CACvE,CAAK,CACL,CACE,OAAO7S,CACT,CAIA,SAASoP,GAAqChF,EAAS,CACrD,GAAI,CAACA,EAAS,MAAM,IAAI,MAAM,0BAA0B,EACxD,GAAI,CAACA,EAAQ,KAAM,MAAM,IAAI,MAAM,gCAAgC,EACnE,GAAI,CAACA,EAAQ,WAAY,MAAM,IAAI,MAAM,sCAAsC,EAC/E,GAAI,CAACA,EAAQ,YAAa,MAAM,IAAI,MAAM,uCAAuC,EACjF,IAAI8N,EAAuB9N,EAAQ,YACjCiF,EAAW6I,EAAqB,SAChC5I,EAAe4I,EAAqB,aACtC,GAAI,EAAE7I,GAAYC,GAAe,MAAM,IAAI,MAAM,uDAAuD,EACxG,IAAIC,EAAQnF,EAAQ,OAASA,EAAQ,OAAO,KAAK,GAAG,EAAI,OACpDoF,EAAY,OAAO,KAAK,GAAG,OAAOH,EAAU,GAAG,EAAE,OAAOC,CAAY,CAAC,EAAE,SAAS,QAAQ,EAGxFG,EAAWrF,EAAQ,UAAY,eAC/B4B,EAAM5B,EAAQ,KAAK,QAAQ,MAAO,EAAE,EAAIqF,EACxCvF,EAAO,gCAAgC,OAAOqF,EAAQ,UAAU,OAAOA,CAAK,EAAI,EAAE,EACtF,MAAO,CACL,UAAWC,EACX,IAAKxD,EACL,KAAM9B,CACP,CACH,CAgEA,SAAS0H,GAAmBxH,EAAS,CACnC,MAAO,CACL,SAAUA,EAAQ,YAAY,SAC9B,KAAMA,EAAQ,KACd,WAAYA,EAAQ,UACrB,CACH,CAEA,SAAS8F,GAAgBC,EAAOC,EAAK,CACnC,OAAO6C,GAAeA,GAAe,CAAE,EAAE7C,CAAG,EAAG,CAAA,EAAI,CACjD,QAAS6C,GAAeA,GAAe,CAAA,EAAI7C,EAAI,OAAO,EAAG,GAAI,CAC3D,cAAe,UAAU,OAAOD,CAAK,CACtC,CAAA,CACL,CAAG,CACH,CACA,SAASE,GAAwBC,EAAW,CAC1C,OAAO,KAAK,MAAQA,EAAY,IAEhC,EAAI,GAAK,GACX,CACA,SAASuF,GAAkBC,EAAY,CACrC,IAAIC,EAAa,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,IACjFE,EAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,GAC9EC,EAAW,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,IACnF,OAAID,GAAgBH,IAAe,EACjC,KAAK,IAAI,KAAK,OAAO,KAAK,SAAW,GAAKC,EAAa,KAAK,IAAI,EAAGD,CAAU,CAAC,EAAGI,CAAQ,EACpFH,CACT,CACA,SAASxF,GAAekF,EAAM,CAC5B,IAAIjF,EAAUiF,EAAK,QACjBzJ,EAAMyJ,EAAK,IACXjG,EAAYiG,EAAK,UACjBvL,EAAOuL,EAAK,KACZ5I,EAAU4I,EAAK,QACfhF,EAAagF,EAAK,WAClB/E,EAAe+E,EAAK,aACpB9E,EAAe8E,EAAK,aACpB7E,EAAW6E,EAAK,SAChB5E,EAAgB4E,EAAK,cACrBoB,EAAUpB,EAAK,QACfgC,EAAqBhC,EAAK,mBAC1B0C,EAAmB1C,EAAK,YACxB2C,EAAoBD,IAAqB,OAAS,CAAA,EAAKA,EACvDE,EAAwBD,EAAkB,WAC1CrC,EAAasC,IAA0B,OAAS,IAAMA,EACtDC,EAAwBF,EAAkB,WAC1CpC,EAAasC,IAA0B,OAAS,GAAKA,EACrDC,EAAwBH,EAAkB,QAC1CnC,EAAUsC,IAA0B,OAAS,GAAOA,EACpDC,EAAyBJ,EAAkB,SAC3ClC,EAAWsC,IAA2B,OAAS,IAAWA,EAE5D,GAAI3B,GAAW,CAACY,GAAsB,OAAO,gBAAoB,IAC/D,MAAM,IAAI,MAAM,qJAAqJ,EAIvK,GAAIZ,GAAW,OAAOA,GAAY,SAAU,MAAM,IAAI,MAAM,wFAAwF,EACpJ,IAAIf,EAAa,EACjB,SAASgC,GAAe,CACtB,IAAIW,EACAd,GACAd,GAAWY,KAAoBE,GAAmBF,EAAqBA,EAAoB,EAAG,OAAS,IAAI,iBAC3GE,IACFc,EAASd,EAAgB,QAE3B,IAAII,EACAlB,IAASkB,EAAQ,WAAW,UAAY,CAC1CJ,EAAgB,MAAO,CACxB,EAAEd,CAAO,GACVrG,EAAQxE,EAAK,CACX,OAAQ,OACR,QAAS,CACP,cAAe,SAAS,OAAOwD,CAAS,EACxC,iBAAkB,OAAO,WAAWtF,CAAI,EAAE,SAAU,EACpD,eAAgB,mCACjB,EACD,KAAMA,EACN,OAAQuO,CACd,CAAK,EAAE,KAAK,SAAUxS,EAAK,CACrB,OAAIA,EAAI,GAAWA,EAAI,OAAO,KAAK,SAAUqQ,EAAO,CAClD,IAAInG,EAAQmG,EAAM,aAChBhG,EAAYgG,EAAM,WAClBvF,EAAeuF,EAAM,cACnBtF,GAAiBX,GAAwBC,CAAS,EAGtDG,EAAW,IAAI,CACb,MAAON,EACP,eAAgBa,GAChB,aAAcD,CACf,EAAEF,CAAa,EAGhBH,EAAa,IAAI,EAAK,EAItB,IAAIO,GAAiBN,EAAa,MAAO,EAEzCA,EAAe,CAAE,EACjBM,GAAe,QAAQ,SAAUC,EAAM,CAErC,IAAIC,GAAkBjB,GAAgBC,EAAOe,EAAK,OAAO,EAGzDA,EAAK,KAAKC,GAAiBD,EAAK,QAAQ,CAClD,CAAS,CACT,CAAO,EAGMjL,EAAI,KAAI,EAAG,KAAK,SAAUqE,EAAM,CACrC,IAAI7E,EACJ,GAAI,CACFA,EAAS,KAAK,MAAM6E,CAAI,CACzB,MAAe,CAExB,CACQ,IAAIyE,EAAQ,IAAI,MAAMtJ,EAASA,EAAO,QAAU6E,CAAI,EAUpD,GATI7E,IAAQsJ,EAAM,KAAOtJ,GAMzBiL,EAAa,IAAI,EAAK,EAGlB3B,EAAM,QAAQ,SAAS,cAAc,EAAG,CAK1C,GAHA0B,EAAW,IAAI,IAAI,EAGfqF,EAAaE,EAAY,CAC3B,WAAW8B,EAAcjC,GAAkBC,EAAYC,EAAYC,EAAYC,EAASC,CAAQ,CAAC,EACjGJ,GAAc,EACd,MACZ,CAGU,IAAI4C,EAAgB,CAClB,QAAS3J,EAAM,KAAK,MACpB,WAAYA,EAAM,KAAK,WACvB,gBAAiBlC,EACjB,WAAYiJ,CACb,EACDlF,EAAS,OAAO8H,CAAa,CACvC,CACQ9H,EAAS,OAAO7B,CAAK,CAC7B,CAAO,CACP,CAAK,EAAE,MAAM,SAAUA,EAAO,CAOxB,GAFA2B,EAAa,IAAI,EAAK,EAClBE,GAAY,OAAOA,EAAS,QAAW,YAAYA,EAAS,OAAO7B,CAAK,EACxE6B,GAAY,OAAOA,EAAS,QAAW,aAAe7B,GAAU,KAA2B,OAASA,EAAM,QAAU,UAAW,CACjI,IAAI4J,EAAS,IAAIlQ,GAAO,aAAasG,EAAM,QAAS,CAClD,KAAMA,EAAM,KACZ,QAASlC,CACnB,CAAS,EACD+D,EAAS,OAAO+H,CAAM,CAC9B,CACA,CAAK,EAAE,QAAQ,UAAY,CACrB,aAAaZ,CAAK,CACxB,CAAK,CACL,CACED,EAAc,CAChB,CACA,SAAS1G,GAAmBwH,EAAOvH,EAAMC,EAAa,CACpD,IAAIzE,EAAU+L,EAAM,QAClBhI,EAAWgI,EAAM,SACjB5M,EAAM4M,EAAM,IACZpJ,EAAYoJ,EAAM,UAClB1O,EAAO0O,EAAM,KACbjI,EAAeiI,EAAM,aACrBlI,EAAekI,EAAM,aACrBnI,EAAamI,EAAM,WACnB/H,EAAgB+H,EAAM,cACtBpI,EAAUoI,EAAM,MAChB/B,EAAU+B,EAAM,QAChBnB,EAAqBmB,EAAM,mBAC3BC,EAAcD,EAAM,YACtB,GAAI,CAACpI,GAAW,OAAO,MAAU,IAAa,MAAM,IAAI,MAAM,8FAA8F,EAM5J,GALKA,IAEHA,EAAU,OAGR3D,EAAQ,SAAWA,EAAQ,QAAQ,eAAiBA,EAAQ,SAAWA,EAAQ,QAAQ,cAAe,CACxGwE,EAAKxE,EAAS+D,CAAQ,EACtB,MACJ,CAGE,IAAIW,EAAWd,EAAW,IAAII,CAAa,EAC3C,GAAIU,GAAYA,EAAS,OAAS,KAAK,IAAK,EAAGA,EAAS,eAAgB,CACtE,IAAIJ,EAAkBjB,GAAgBqB,EAAS,MAAO1E,CAAO,EAC7DwE,EAAKF,EAAiBP,CAAQ,EAC9B,MACJ,CAYE,GAPAD,EAAa,KAAK,CAChB,QAAS9D,EACT,SAAU+D,EACV,KAAMS,CACV,CAAG,EAGG,CAAAX,EAAa,MAOjB,IAJAA,EAAa,IAAI,EAAI,EAIjBa,GAAYA,EAAS,eAAiB,CAACA,EAAS,OAASA,EAAS,OAAS,KAAK,IAAK,EAAGA,EAAS,gBACjF,MAAM,IAAI,MAAM,0BAA0B,EAsB9DhB,GAAe,CACb,QAASC,EACT,IAAKxE,EACL,UAAWwD,EACX,KAAMtF,EACN,QAAS2C,EACT,cAAegE,EACf,WAAYJ,EACZ,aAAcC,EACd,aAAcC,EACd,SAAUC,EACV,QAASiG,EACT,mBAAoBY,EACpB,YAAaoB,CACjB,CAAG,EACH,CAEA,SAASrH,GAAMC,EAAS,CACtB,IAAIjR,EAAQiR,EACZ,MAAO,CACL,IAAK,UAAe,CAClB,OAAOjR,CACR,EACD,IAAK,SAAaoE,EAAK,CACrB,OAAApE,EAAQoE,EACDpE,CACb,CACG,CACH,CAEA,SAAS8R,GAA6ClI,EAAS,CAC7D,IAAIqG,EAAarG,EAAQ,YAAcoH,GAAM,CAC3C,MAAO,GACP,eAAgB,EACpB,CAAG,EACGd,EAAec,GAAM,EAAK,EAC1Bb,EAAe,CAAE,EACrB,OAAO,SAAUU,EAAM,CACrB,OAAO,SAAUxE,EAAS+D,EAAU,CAGlC,GAAI/D,EAAQ,SAAWA,EAAQ,QAAQ,eAAiBA,EAAQ,SAAWA,EAAQ,QAAQ,cAAe,CACxGwE,EAAKxE,EAAS+D,CAAQ,EACtB,MACR,CACM,IAAIxE,EAAS6G,GAAeA,GAAeA,GAAe,GAAI7I,CAAO,EAAG,GAAI,CAC1E,QAASyC,EACT,SAAU+D,CACX,EAAExB,GAAqChF,CAAO,CAAC,EAAG,GAAI,CACrD,aAAcuG,EACd,aAAcD,EACd,WAAYD,EACZ,cAAemB,GAAmBxH,CAAO,EACzC,MAAOA,EAAQ,KACvB,CAAO,EACDgH,GAAmBhF,EAAQiF,CAAI,CAChC,CACF,CACH,CCrbA,SAASsB,GAAaC,EAAGC,EAAG,CAC1B,GAAgB,OAAOD,GAAnB,UAAwB,CAACA,EAAG,OAAOA,EACvC,IAAI5S,EAAI4S,EAAE,OAAO,WAAW,EAC5B,GAAe5S,IAAX,OAAc,CAChB,IAAI5B,EAAI4B,EAAE,KAAK4S,EAAGC,CAAc,EAChC,GAAgB,OAAOzU,GAAnB,SAAsB,OAAOA,EACjC,MAAM,IAAI,UAAU,8CAA8C,CACtE,CACE,OAAqByU,IAAb,SAAiB,OAAS,QAAQD,CAAC,CAC7C,CAEA,SAASE,GAAeF,EAAG,CACzB,IAAIxU,EAAIuU,GAAaC,EAAG,QAAQ,EAChC,OAAmB,OAAOxU,GAAnB,SAAuBA,EAAIA,EAAI,EACxC,CAEA,SAAS2U,GAAgB/S,EAAG6S,EAAGD,EAAG,CAChC,OAAQC,EAAIC,GAAeD,CAAC,KAAM7S,EAAI,OAAO,eAAeA,EAAG6S,EAAG,CAChE,MAAOD,EACP,WAAY,GACZ,aAAc,GACd,SAAU,EACX,CAAA,EAAI5S,EAAE6S,CAAC,EAAID,EAAG5S,CACjB,CAQA,SAAS4L,GAAUpL,EAAO,CACxB,OAAO,OAAOA,EAAU,KAAeA,IAAU,IACnD,CACA,SAASsY,GAAU7M,EAAQ,CACzB,MAAMG,EAAS,IAAI,gBAAgBH,CAAM,EACzC,SAAW,CAACrB,EAAKpK,CAAK,IAAK,OAAO,QAAQyL,CAAM,EAC1C,MAAM,QAAQzL,CAAK,IACrB4L,EAAO,OAAOxB,CAAG,EACjBpK,EAAM,OAAO,OAAO,EAAE,QAAQ6L,GAAKD,EAAO,OAAOxB,EAAKyB,CAAC,CAAC,GAG5D,OAAOD,EAAO,SAAU,CAC1B,CACA,SAAS2M,GAAY/V,EAAK,CACxB,OAAO,OAAO,KAAKA,CAAG,EAAE,OAAO,CAAC4L,EAAQhE,IAAQ,CAC9C,MAAMpK,EAAQwC,EAAI4H,CAAG,EACrB,GAAI,MAAM,QAAQpK,CAAK,EAAG,CACxB,MAAMwY,EAASxY,EAAM,OAAOoL,EAAS,EACrC,OAAKoN,EAAO,OAGL,CACL,GAAGpK,EACH,CAAChE,CAAG,EAAGoO,CACR,EALQpK,CAMf,CACI,OAAIhD,GAAUpL,CAAK,EACV,CACL,GAAGoO,EACH,CAAChE,CAAG,EAAGpK,CACR,EAEIoO,CACR,EAAE,EAAE,CACP,CACA,SAASqK,GAAkBC,EAAa,CACtC,MAAM5D,EAAMyD,GAAYG,CAAW,EAC7BtK,EAASkK,GAAUxD,CAAG,EAC5B,OAAI1G,IAAW,GACN,GAEF,IAAIA,CAAM,EACnB,CACA,SAASuK,GAAiBC,EAAe,CACvC,MAAMC,EAAUD,EAAc,cAC9B,IAAIE,EAAMF,EAAc,YACxB,UAAWG,KAASF,EAAS,CAC3B,MAAM7Y,EAAQ,mBAAmB,GAAG6Y,EAAQE,CAAK,CAAC,EAAE,EACpDD,EAAMA,EAAI,QAAQ,IAAIC,CAAK,IAAK,GAAG/Y,CAAK,EAAE,CAC9C,CACE,MAAMgZ,EAAWP,GAAkBG,EAAc,aAAe,CAAA,CAAE,EAClE,MAAO,GAAGE,CAAG,GAAGE,CAAQ,EAC1B,CAEA,MAAMC,CAAW,CACf,YAAY5M,EAAS6M,EAAiB,CACpC,KAAK,gBAAkBA,EACvB3G,GAAgB,KAAM,UAAW,MAAM,EACvC,KAAK,QAAU,CACb,GAAGlG,EACH,IAAKsM,GAAiBtM,CAAO,CAC9B,CACL,CACE,eAAgB,CACd,OAAO,KAAK,OAChB,CACE,SAAU,CACR,OAAO,KAAK,gBAAgB,KAAK,OAAO,CAC5C,CACA,CASA,MAAM8M,EAA2D,CAC/D,YAAYxM,EAAM,CAChB,KAAK,KAAOA,CAChB,CAaE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMC,EAAuC,CAC3C,YAAY1M,EAAM,CAChB,KAAK,KAAOA,CAChB,CAYE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAME,EAAyC,CAC7C,YAAY3M,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMG,EAAqC,CACzC,YAAY5M,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAIF,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGE,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMK,EAAoE,CACxE,YAAY9M,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMM,EAAwE,CAC5E,YAAY/M,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMO,EAAgE,CACpE,YAAYhN,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIE,GAAwE,CACjF,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGF,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIC,GAAoE,CAC7E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGD,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMQ,EAAsG,CAC1G,YAAYjN,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMS,EAAkG,CACtG,YAAYlN,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAII,GAAsG,CAC/G,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGJ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMU,EAAsG,CAC1G,YAAYnN,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMW,EAA0G,CAC9G,YAAYpN,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2GACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2GACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMY,EAAkG,CACtG,YAAYrN,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAIM,GAAsG,CAC/G,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGN,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQA,EAAe,CACrB,OAAO,IAAIO,GAA0G,CACnH,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGP,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMa,EAAmG,CACvG,YAAYtN,EAAM,CAChB,KAAK,KAAOA,CAChB,CAgBE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMc,EAA8F,CAClG,YAAYvN,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,6FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,6FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,6FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,6FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMe,EAAkG,CACtG,YAAYxN,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,kGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgB,EAA0F,CAC9F,YAAYzN,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIW,GAAkG,CAC3G,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGX,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIU,GAA8F,CACvG,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGV,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,WAAY,CACV,OAAO,IAAIS,GAAmG,CAC5G,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIb,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,wFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAaE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiB,EAAiG,CACrG,YAAY1N,EAAM,CAChB,KAAK,KAAOA,CAChB,CAaE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkB,EAA+F,CACnG,YAAY3N,EAAM,CAChB,KAAK,KAAOA,CAChB,CAME,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmB,EAAmH,CACvH,YAAY5N,EAAM,CAChB,KAAK,KAAOA,CAChB,CAME,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oHACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oHACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oHACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoB,EAA2F,CAC/F,YAAY7N,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,YAAa,CACX,OAAO,IAAI0N,GAAiG,CAC1G,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,gBAAgBb,EAAe,CAC7B,OAAO,IAAIe,GAAmH,CAC5H,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGf,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIc,GAA+F,CACxG,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGd,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAiBE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqB,EAAsG,CAC1G,YAAY9N,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsB,EAA0G,CAC9G,YAAY/N,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2GACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2GACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2GACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuB,EAAkG,CACtG,YAAYhO,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIkB,GAA0G,CACnH,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGlB,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIiB,GAAsG,CAC/G,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGjB,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwB,EAA+F,CACnG,YAAYjO,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyB,EAAmG,CACvG,YAAYlO,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0B,EAA2F,CAC/F,YAAYnO,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIqB,GAAmG,CAC5G,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGrB,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIoB,GAA+F,CACxG,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGpB,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2B,EAAsG,CAC1G,YAAYpO,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,sGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4B,EAA0G,CAC9G,YAAYrO,EAAM,CAChB,KAAK,KAAOA,CAChB,CAME,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2GACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2GACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2GACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,2GACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6B,EAAkG,CACtG,YAAYtO,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIwB,GAA0G,CACnH,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGxB,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIuB,GAAsG,CAC/G,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvB,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8B,EAAqF,CACzF,YAAYvO,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,eAAgB,CACd,OAAO,IAAIqN,GAAkG,CAC3G,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,eAAgB,CACd,OAAO,IAAIH,GAAkG,CAC3G,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,OAAQ,CACN,OAAO,IAAIO,GAA0F,CACnG,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,eAAgB,CACd,OAAO,IAAIa,GAAkG,CAC3G,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAS,CACP,OAAO,IAAIT,GAA2F,CACpG,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,QAAS,CACP,OAAO,IAAIM,GAA2F,CACpG,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,eAAgB,CACd,OAAO,IAAIH,GAAkG,CAC3G,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAMQ,EAAmD,CACvD,YAAYxO,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,eAAgB,CACd,OAAO,IAAIgN,GAAgE,CACzE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,0CAA0CH,EAAe,CACvD,OAAO,IAAI0B,GAAqF,CAC9F,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG1B,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAM4B,EAAsC,CAC1C,YAAYzO,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,qBAAqB6M,EAAe,CAClC,OAAO,IAAI2B,GAAmD,CAC5D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG3B,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAM6B,EAA6C,CACjD,YAAY1O,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkC,EAAiD,CACrD,YAAY3O,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,0CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmC,EAAyC,CAC7C,YAAY5O,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI8B,GAAiD,CAC1D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG9B,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI6B,GAA6C,CACtD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG7B,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoC,EAA8C,CAClD,YAAY7O,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqC,EAAkD,CACtD,YAAY9O,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsC,EAA0C,CAC9C,YAAY/O,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIiC,GAAkD,CAC3D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGjC,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIgC,GAA8C,CACvD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGhC,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuC,EAA+E,CACnF,YAAYhP,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwC,EAAuE,CAC3E,YAAYjP,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyC,EAA4D,CAChE,YAAYlP,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0C,EAA8C,CAClD,YAAYnP,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2C,EAA4C,CAChD,YAAYpP,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4C,EAAgD,CACpD,YAAYrP,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6C,EAAwC,CAC5C,YAAYtP,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIwC,GAAgD,CACzD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGxC,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIuC,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvC,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,8CAA8CA,EAAe,CAC3D,OAAO,IAAIoC,GAAuE,CAChF,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGpC,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,sDAAsDA,EAAe,CACnE,OAAO,IAAImC,GAA+E,CACxF,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGnC,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,QAAS,CACP,OAAO,IAAIsC,GAA8C,CACvD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,sBAAuB,CACrB,OAAO,IAAID,GAA4D,CACrE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIzC,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8C,EAA4C,CAChD,YAAYvP,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+C,EAAgD,CACpD,YAAYxP,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgD,EAAwC,CAC5C,YAAYzP,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI2C,GAAgD,CACzD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG3C,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI0C,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG1C,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiD,EAAyC,CAC7C,YAAY1P,EAAM,CAChB,KAAK,KAAOA,CAChB,CAcE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkD,EAAoC,CACxC,YAAY3P,EAAM,CAChB,KAAK,KAAOA,CAChB,CAME,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmD,EAAsD,CAC1D,YAAY5P,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoD,EAAwC,CAC5C,YAAY7P,EAAM,CAChB,KAAK,KAAOA,CAChB,CAME,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqD,EAAgC,CACpC,YAAY9P,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,WAAY,CACV,OAAO,IAAI0P,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,eAAe7C,EAAe,CAC5B,OAAO,IAAI+C,GAAsD,CAC/D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG/C,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQA,EAAe,CACrB,OAAO,IAAIgD,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGhD,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI8C,GAAoC,CAC7C,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG9C,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAeE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsD,EAAyC,CAC7C,YAAY/P,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuD,EAA6C,CACjD,YAAYhQ,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwD,EAAqC,CACzC,YAAYjQ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAImD,GAA6C,CACtD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGnD,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIkD,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGlD,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyD,EAAuC,CAC3C,YAAYlQ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0D,EAA2C,CAC/C,YAAYnQ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2D,EAAmC,CACvC,YAAYpQ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAIqD,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGrD,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQA,EAAe,CACrB,OAAO,IAAIsD,GAA2C,CACpD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGtD,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4D,EAAwD,CAC5D,YAAYrQ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,iDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6D,EAAmD,CACvD,YAAYtQ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8D,EAAwC,CAC5C,YAAYvQ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,oBAAoB6M,EAAe,CACjC,OAAO,IAAIwD,GAAwD,CACjE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGxD,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,cAAcA,EAAe,CAC3B,OAAO,IAAIyD,GAAmD,CAC5D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGzD,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CASE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAQE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+D,EAA6C,CACjD,YAAYxQ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgE,EAAiD,CACrD,YAAYzQ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,0CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiE,EAAyC,CAC7C,YAAY1Q,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI4D,GAAiD,CAC1D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG5D,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI2D,GAA6C,CACtD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG3D,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkE,EAAgD,CACpD,YAAY3Q,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmE,EAA8C,CAClD,YAAY5Q,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoE,EAAwD,CAC5D,YAAY7Q,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqE,EAAiD,CACrD,YAAY9Q,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsE,EAA4C,CAChD,YAAY/Q,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuE,EAAiD,CACrD,YAAYhR,EAAM,CAChB,KAAK,KAAOA,CAChB,CASE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwE,EAA0C,CAC9C,YAAYjR,EAAM,CAChB,KAAK,KAAOA,CAChB,CAME,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyE,EAAwC,CAC5C,YAAYlR,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0E,EAA0D,CAC9D,YAAYnR,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2E,EAA4C,CAChD,YAAYpR,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4E,EAAgE,CACpE,YAAYrR,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6E,EAAoC,CACxC,YAAYtR,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,kBAAkB6M,EAAe,CAC/B,OAAO,IAAIwE,GAAgE,CACzE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGxE,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,eAAeA,EAAe,CAC5B,OAAO,IAAIsE,GAA0D,CACnE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGtE,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,YAAa,CACX,OAAO,IAAI+D,GAA8C,CACvD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,cAAe,CACb,OAAO,IAAID,GAAgD,CACzD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,UAAW,CACT,OAAO,IAAII,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,eAAgB,CACd,OAAO,IAAIC,GAAiD,CAC1D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIF,GAAiD,CAC1D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQjE,EAAe,CACrB,OAAO,IAAIuE,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvE,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIqE,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGrE,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,QAAS,CACP,OAAO,IAAIoE,GAA0C,CACnD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,sBAAuB,CACrB,OAAO,IAAIJ,GAAwD,CACjE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIpE,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAQE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8E,EAA4C,CAChD,YAAYvR,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+E,EAAgD,CACpD,YAAYxR,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgF,EAAwC,CAC5C,YAAYzR,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAI0E,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG1E,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQA,EAAe,CACrB,OAAO,IAAI2E,GAAgD,CACzD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG3E,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiF,EAAyC,CAC7C,YAAY1R,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkF,EAA6C,CACjD,YAAY3R,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmF,EAAqC,CACzC,YAAY5R,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI8E,GAA6C,CACtD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG9E,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI6E,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG7E,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoF,EAAkC,CACtC,YAAY7R,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqF,EAAwE,CAC5E,YAAY9R,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsF,EAA+D,CACnE,YAAY/R,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,WAAY,CACV,OAAO,IAAI8R,GAAwE,CACjF,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAME,EAA6D,CACjE,YAAYhS,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAK,CACH,OAAO,IAAI+R,GAA+D,CACxE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAME,EAAmG,CACvG,YAAYjS,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iGACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyF,EAA2F,CAC/F,YAAYlS,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0F,EAAgE,CACpE,YAAYnS,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2F,EAAoE,CACxE,YAAYpS,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4F,EAA4D,CAChE,YAAYrS,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIuF,GAAoE,CAC7E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvF,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIsF,GAAgE,CACzE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGtF,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,8CAA8CA,EAAe,CAC3D,OAAO,IAAIqF,GAA2F,CACpG,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGrF,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,sDAAsDA,EAAe,CACnE,OAAO,IAAIoF,GAAmG,CAC5G,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGpF,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6F,EAAgE,CACpE,YAAYtS,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8F,EAAoE,CACxE,YAAYvS,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+F,EAA4D,CAChE,YAAYxS,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI0F,GAAoE,CAC7E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG1F,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIyF,GAAgE,CACzE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGzF,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgG,EAA6D,CACjE,YAAYzS,EAAM,CAChB,KAAK,KAAOA,CAChB,CAcE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiG,EAAwD,CAC5D,YAAY1S,EAAM,CAChB,KAAK,KAAOA,CAChB,CASE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,mDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkG,EAA0E,CAC9E,YAAY3S,EAAM,CAChB,KAAK,KAAOA,CAChB,CASE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmG,EAA4D,CAChE,YAAY5S,EAAM,CAChB,KAAK,KAAOA,CAChB,CAUE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,wDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,wDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoG,EAAoD,CACxD,YAAY7S,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,eAAe6M,EAAe,CAC5B,OAAO,IAAI8F,GAA0E,CACnF,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG9F,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQA,EAAe,CACrB,OAAO,IAAI+F,GAA4D,CACrE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG/F,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,WAAY,CACV,OAAO,IAAI4F,GAA6D,CACtE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAO5F,EAAe,CACpB,OAAO,IAAI6F,GAAwD,CACjE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG7F,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAeE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqG,EAAoE,CACxE,YAAY9S,EAAM,CAChB,KAAK,KAAOA,CAChB,CASE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsG,EAAkE,CACtE,YAAY/S,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuG,EAAqE,CACzE,YAAYhT,EAAM,CAChB,KAAK,KAAOA,CAChB,CASE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwG,EAAgE,CACpE,YAAYjT,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyG,EAAqE,CACzE,YAAYlT,EAAM,CAChB,KAAK,KAAOA,CAChB,CAWE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0G,EAA4D,CAChE,YAAYnT,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2G,EAA8E,CAClF,YAAYpT,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2EACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4G,EAAgE,CACpE,YAAYrT,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6G,EAAoF,CACxF,YAAYtT,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8G,EAAwD,CAC5D,YAAYvT,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,kBAAkB6M,EAAe,CAC/B,OAAO,IAAIyG,GAAoF,CAC7F,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGzG,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,eAAeA,EAAe,CAC5B,OAAO,IAAIuG,GAA8E,CACvF,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvG,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,YAAa,CACX,OAAO,IAAIkG,GAAkE,CAC3E,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,cAAe,CACb,OAAO,IAAID,GAAoE,CAC7E,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,UAAW,CACT,OAAO,IAAIG,GAAgE,CACzE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,eAAgB,CACd,OAAO,IAAIC,GAAqE,CAC9E,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,eAAgB,CACd,OAAO,IAAIF,GAAqE,CAC9E,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQnG,EAAe,CACrB,OAAO,IAAIwG,GAAgE,CACzE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGxG,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIsG,GAA4D,CACrE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGtG,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+G,EAAoD,CACxD,YAAYxT,EAAM,CAChB,KAAK,KAAOA,CAChB,CAWE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgH,EAA0D,CAC9D,YAAYzT,EAAM,CAChB,KAAK,KAAOA,CAChB,CAWE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiH,EAAsD,CAC1D,YAAY1T,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAI4G,GAA0D,CACnE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG5G,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAgBE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkH,EAA6D,CACjE,YAAY3T,EAAM,CAChB,KAAK,KAAOA,CAChB,CAUE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmH,EAAsD,CAC1D,YAAY5T,EAAM,CAChB,KAAK,KAAOA,CAChB,CAeE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoH,EAA2D,CAC/D,YAAY7T,EAAM,CAChB,KAAK,KAAOA,CAChB,CAWE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqH,EAAuD,CAC3D,YAAY9T,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAIgH,GAA2D,CACpE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGhH,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAWE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAwBE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsH,EAA8D,CAClE,YAAY/T,EAAM,CAChB,KAAK,KAAOA,CAChB,CAYE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuH,EAAyD,CAC7D,YAAYhU,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAQ,CACN,OAAO,IAAI+T,GAA8D,CACvE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAWE,KAAKtH,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwH,EAAkE,CACtE,YAAYjU,EAAM,CAChB,KAAK,KAAOA,CAChB,CAWE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,+DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyH,EAAsE,CAC1E,YAAYlU,EAAM,CAChB,KAAK,KAAOA,CAChB,CAYE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0H,EAA8D,CAClE,YAAYnU,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIqH,GAAsE,CAC/E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGrH,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIoH,GAAkE,CAC3E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGpH,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAYE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAWE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAQE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2H,EAAuD,CAC3D,YAAYpU,EAAM,CAChB,KAAK,KAAOA,CAChB,CAYE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4H,EAAiD,CACrD,YAAYrU,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,OAAQ,CACN,OAAO,IAAI0T,GAAsD,CAC/D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,QAAS,CACP,OAAO,IAAII,GAAuD,CAChE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,YAAa,CACX,OAAO,IAAItH,GAA2D,CACpE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,eAAgB,CACd,OAAO,IAAI2H,GAA8D,CACvE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,cAAe,CACb,OAAO,IAAIR,GAA6D,CACtE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,UAAW,CACT,OAAO,IAAIK,GAAyD,CAClE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAS,CACP,OAAO,IAAII,GAAuD,CAChE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAQ,CACN,OAAO,IAAIR,GAAsD,CAC/D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAYE,IAAInH,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6H,EAA2D,CAC/D,YAAYtU,EAAM,CAChB,KAAK,KAAOA,CAChB,CAeE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8H,EAAyD,CAC7D,YAAYvU,EAAM,CAChB,KAAK,KAAOA,CAChB,CAME,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAQE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+H,EAA6E,CACjF,YAAYxU,EAAM,CAChB,KAAK,KAAOA,CAChB,CAME,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0EACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0EACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0EACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAQE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,0EACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgI,EAAqD,CACzD,YAAYzU,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,YAAa,CACX,OAAO,IAAIsU,GAA2D,CACpE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,gBAAgBzH,EAAe,CAC7B,OAAO,IAAI2H,GAA6E,CACtF,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG3H,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI0H,GAAyD,CAClE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG1H,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAuBE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiI,EAAqE,CACzE,YAAY1U,EAAM,CAChB,KAAK,KAAOA,CAChB,CAcE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkI,EAAyE,CAC7E,YAAY3U,EAAM,CAChB,KAAK,KAAOA,CAChB,CAcE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmI,EAAiE,CACrE,YAAY5U,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI8H,GAAyE,CAClF,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG9H,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI6H,GAAqE,CAC9E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG7H,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAMgI,EAA0E,CAC9E,YAAY7U,EAAM,CAChB,KAAK,KAAOA,CAChB,CAUE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqI,EAA+D,CACnE,YAAY9U,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAQE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsI,EAAwF,CAC5F,YAAY/U,EAAM,CAChB,KAAK,KAAOA,CAChB,CAcE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuI,EAAkF,CACtF,YAAYhV,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAS,CACP,OAAO,IAAI+U,GAAwF,CACjG,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,IAAItI,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+EACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+EACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,+EACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwI,EAAkE,CACtE,YAAYjV,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,kBAAmB,CACjB,OAAO,IAAIgV,GAAkF,CAC3F,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAME,EAA4F,CAChG,YAAYlV,EAAM,CAChB,KAAK,KAAOA,CAChB,CAcE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2FACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0I,EAAsF,CAC1F,YAAYnV,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAS,CACP,OAAO,IAAIkV,GAA4F,CACrG,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,IAAIzI,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oFACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2I,EAAsE,CAC1E,YAAYpV,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,kBAAmB,CACjB,OAAO,IAAImV,GAAsF,CAC/F,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAME,EAAuD,CAC3D,YAAYrV,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,cAAc6M,EAAe,CAC3B,OAAO,IAAIoI,GAAkE,CAC3E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGpI,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,eAAeA,EAAe,CAC5B,OAAO,IAAIuI,GAAsE,CAC/E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvI,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAMyI,EAAgE,CACpE,YAAYtV,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8I,EAAoE,CACxE,YAAYvV,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+I,EAA4D,CAChE,YAAYxV,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI0I,GAAoE,CAC7E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG1I,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIyI,GAAgE,CACzE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGzI,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgJ,EAAyD,CAC7D,YAAYzV,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiJ,EAA6D,CACjE,YAAY1V,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,yDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkJ,EAAqD,CACzD,YAAY3V,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI6I,GAA6D,CACtE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG7I,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI4I,GAAyD,CAClE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG5I,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmJ,EAA0E,CAC9E,YAAY5V,EAAM,CAChB,KAAK,KAAOA,CAChB,CAQE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoJ,EAA8D,CAClE,YAAY7V,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,cAAe,CACb,OAAO,IAAI4V,GAA0E,CACnF,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAME,EAAgE,CACpE,YAAY9V,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsJ,EAAoE,CACxE,YAAY/V,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,iEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuJ,EAA4D,CAChE,YAAYhW,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIkJ,GAAoE,CAC7E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGlJ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIiJ,GAAgE,CACzE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGjJ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwJ,EAA+D,CACnE,YAAYjW,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,2DACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyJ,EAAmE,CACvE,YAAYlW,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,gEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,gEACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0J,EAA2D,CAC/D,YAAYnW,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIqJ,GAAmE,CAC5E,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGrJ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIoJ,GAA+D,CACxE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGpJ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2J,EAA+C,CACnD,YAAYpW,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,OAAQ,CACN,OAAO,IAAI6S,GAAoD,CAC7D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,QAAS,CACP,OAAO,IAAI4B,GAAqD,CAC9D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAK,CACH,OAAO,IAAIJ,GAAiD,CAC1D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,WAAY,CACV,OAAO,IAAId,GAAwD,CACjE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,OAAQ,CACN,OAAO,IAAIC,GAAoD,CAC7D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,iBAAkB,CAChB,OAAO,IAAIqC,GAA8D,CACvE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,eAAgB,CACd,OAAO,IAAIG,GAA4D,CACrE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,oBAAqB,CACnB,OAAO,IAAIpB,GAAiE,CAC1E,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,6BAA8B,CAC5B,OAAO,IAAIC,GAA0E,CACnF,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,eAAgB,CACd,OAAO,IAAIrC,GAA4D,CACrE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,kBAAmB,CACjB,OAAO,IAAIsC,GAA+D,CACxE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,UAAW,CACT,OAAO,IAAIO,GAAuD,CAChE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIG,GAA4D,CACrE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,cAAe,CACb,OAAO,IAAIW,GAA2D,CACpE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,QAAS,CACP,OAAO,IAAIR,GAAqD,CAC9D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAItD,GAA4D,CACrE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACA,CASA,MAAMgE,EAAwC,CAC5C,YAAYrW,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6J,EAA4C,CAChD,YAAYtW,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8J,EAAoC,CACxC,YAAYvW,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAIwJ,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGxJ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQA,EAAe,CACrB,OAAO,IAAIyJ,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGzJ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+J,EAAgC,CACpC,YAAYxW,EAAM,CAChB,KAAK,KAAOA,CAChB,CAaE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgK,EAA8C,CAClD,YAAYzW,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiK,EAAkD,CACtD,YAAY1W,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkK,EAA0C,CAC9C,YAAY3W,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAI4J,GAA8C,CACvD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG5J,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQA,EAAe,CACrB,OAAO,IAAI6J,GAAkD,CAC3D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG7J,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmK,EAA2C,CAC/C,YAAY5W,EAAM,CAChB,KAAK,KAAOA,CAChB,CAoBE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoK,EAAsC,CAC1C,YAAY7W,EAAM,CAChB,KAAK,KAAOA,CAChB,CAUE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqK,EAAkC,CACtC,YAAY9W,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAIgK,GAAsC,CAC/C,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGhK,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,WAAY,CACV,OAAO,IAAI+J,GAA2C,CACpD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,IAAInK,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAaE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsK,EAAyC,CAC7C,YAAY/W,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuK,EAAkC,CACtC,YAAYhX,EAAM,CAChB,KAAK,KAAOA,CAChB,CAcE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwK,EAAyC,CAC7C,YAAYjX,EAAM,CAChB,KAAK,KAAOA,CAChB,CAiBE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyK,EAAuC,CAC3C,YAAYlX,EAAM,CAChB,KAAK,KAAOA,CAChB,CAUE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0K,EAAmC,CACvC,YAAYnX,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAIqK,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGrK,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,YAAa,CACX,OAAO,IAAIoK,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAWE,IAAIxK,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAyBE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2K,EAA0C,CAC9C,YAAYpX,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4K,EAAqC,CACzC,YAAYrX,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAQ,CACN,OAAO,IAAIoX,GAA0C,CACnD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAQE,KAAK3K,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6K,EAAyC,CAC7C,YAAYtX,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8K,EAAqC,CACzC,YAAYvX,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAIyK,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGzK,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+K,EAA8C,CAClD,YAAYxX,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgL,EAAkD,CACtD,YAAYzX,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiL,EAA0C,CAC9C,YAAY1X,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAI2K,GAA8C,CACvD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG3K,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQA,EAAe,CACrB,OAAO,IAAI4K,GAAkD,CAC3D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG5K,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkL,EAAuC,CAC3C,YAAY3X,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmL,EAA2C,CAC/C,YAAY5X,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoL,EAAmC,CACvC,YAAY7X,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAI8K,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG9K,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQA,EAAe,CACrB,OAAO,IAAI+K,GAA2C,CACpD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG/K,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqL,EAA8C,CAClD,YAAY9X,EAAM,CAChB,KAAK,KAAOA,CAChB,CAUE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsL,EAAkD,CACtD,YAAY/X,EAAM,CAChB,KAAK,KAAOA,CAChB,CAUE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuL,EAA0C,CAC9C,YAAYhY,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAIiL,GAA8C,CACvD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGjL,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQA,EAAe,CACrB,OAAO,IAAIkL,GAAkD,CAC3D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGlL,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAWE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAUE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwL,EAAmC,CACvC,YAAYjY,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,0BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyL,EAA6B,CACjC,YAAYlY,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,cAAe,CACb,OAAO,IAAI+W,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,UAAW,CACT,OAAO,IAAIM,GAAqC,CAC9C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAS,CACP,OAAO,IAAIY,GAAmC,CAC5C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAQ,CACN,OAAO,IAAIjB,GAAkC,CAC3C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,YAAa,CACX,OAAO,IAAItK,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIiK,GAA0C,CACnD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,OAAQ,CACN,OAAO,IAAIG,GAAkC,CAC3C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,QAAS,CACP,OAAO,IAAIK,GAAmC,CAC5C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,UAAW,CACT,OAAO,IAAII,GAAqC,CAC9C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIG,GAA0C,CACnD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,QAAS,CACP,OAAO,IAAIG,GAAmC,CAC5C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIG,GAA0C,CACnD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAWE,IAAIvL,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,mBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0L,EAAuC,CAC3C,YAAYnY,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2L,EAAmC,CACvC,YAAYpY,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAO6M,EAAe,CACpB,OAAO,IAAIsL,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGtL,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4L,EAA+C,CACnD,YAAYrY,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6L,EAA0C,CAC9C,YAAYtY,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,OAAQ,CACN,OAAO,IAAIqY,GAA+C,CACxD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAI5L,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8L,EAA8C,CAClD,YAAYvY,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+L,EAAsC,CAC1C,YAAYxY,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI0L,GAA8C,CACvD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG1L,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIyL,GAA0C,CACnD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGzL,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,6BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,6BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAQE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,6BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgM,EAAuC,CAC3C,YAAYzY,EAAM,CAChB,KAAK,KAAOA,CAChB,CAWE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiM,EAAuC,CAC3C,YAAY1Y,EAAM,CAChB,KAAK,KAAOA,CAChB,CAeE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkM,EAAuC,CAC3C,YAAY3Y,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmM,EAAqC,CACzC,YAAY5Y,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoM,EAAyD,CAC7D,YAAY7Y,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,kDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqM,EAAiC,CACrC,YAAY9Y,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,aAAc,CACZ,OAAO,IAAIyY,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,YAAa,CACX,OAAO,IAAIC,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,gBAAgB7L,EAAe,CAC7B,OAAO,IAAIgM,GAAyD,CAClE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGhM,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,OAAQ,CACN,OAAO,IAAI2L,GAAsC,CAC/C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAO3L,EAAe,CACpB,OAAO,IAAI+L,GAAqC,CAC9C,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG/L,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,QAAS,CACP,OAAO,IAAI8L,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIlM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAuBE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsM,EAAuC,CAC3C,YAAY/Y,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuM,EAA2C,CAC/C,YAAYhZ,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwM,EAAmC,CACvC,YAAYjZ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAImM,GAA2C,CACpD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGnM,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIkM,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGlM,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyM,EAAmD,CACvD,YAAYlZ,EAAM,CAChB,KAAK,KAAOA,CAChB,CAQE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0M,EAA+C,CACnD,YAAYnZ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2M,EAAmD,CACvD,YAAYpZ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4M,EAA2C,CAC/C,YAAYrZ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,UAAW,CACT,OAAO,IAAIkZ,GAAmD,CAC5D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQrM,EAAe,CACrB,OAAO,IAAIuM,GAAmD,CAC5D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvM,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIsM,GAA+C,CACxD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGtM,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6M,EAAmD,CACvD,YAAYtZ,EAAM,CAChB,KAAK,KAAOA,CAChB,CAME,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,oCAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAQE,IAAIA,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8M,EAAoD,CACxD,YAAYvZ,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+M,EAAiD,CACrD,YAAYxZ,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgN,EAAqD,CACzD,YAAYzZ,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiN,EAA6C,CACjD,YAAY1Z,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAS,CACP,OAAO,IAAIsZ,GAAmD,CAC5D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,SAAU,CACR,OAAO,IAAIC,GAAoD,CAC7D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,QAAQ1M,EAAe,CACrB,OAAO,IAAI4M,GAAqD,CAC9D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG5M,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI2M,GAAiD,CAC1D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG3M,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAQE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkN,EAAwD,CAC5D,YAAY3Z,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmN,EAAgD,CACpD,YAAY5Z,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,UAAW,CACT,OAAO,IAAI2Z,GAAwD,CACjE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIlN,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoN,EAA4D,CAChE,YAAY7Z,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqN,EAAoD,CACxD,YAAY9Z,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,UAAW,CACT,OAAO,IAAI6Z,GAA4D,CACrE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIpN,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,6CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,6CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,6CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,6CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsN,EAA4C,CAChD,YAAY/Z,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIiN,GAAoD,CAC7D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGjN,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI+M,GAAgD,CACzD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG/M,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuN,EAA+C,CACnD,YAAYha,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwN,EAAmD,CACvD,YAAYja,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyN,EAA2C,CAC/C,YAAYla,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIoN,GAAmD,CAC5D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGpN,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAImN,GAA+C,CACxD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGnN,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0N,EAA2C,CAC/C,YAAYna,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2N,EAA+C,CACnD,YAAYpa,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4N,EAAuC,CAC3C,YAAYra,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIuN,GAA+C,CACxD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvN,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIsN,GAA2C,CACpD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGtN,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6N,EAAyC,CAC7C,YAAYta,EAAM,CAChB,KAAK,KAAOA,CAChB,CAME,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8N,EAA6C,CACjD,YAAYva,EAAM,CAChB,KAAK,KAAOA,CAChB,CAcE,KAAKyM,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,qCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+N,EAAwD,CAC5D,YAAYxa,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgO,EAAuC,CAC3C,YAAYza,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAS,CACP,OAAO,IAAIua,GAA6C,CACtD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,mBAAoB,CAClB,OAAO,IAAIC,GAAwD,CACjE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAI/N,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAME,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiO,EAA4D,CAChE,YAAY1a,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkO,EAA2C,CAC/C,YAAY3a,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,mBAAoB,CAClB,OAAO,IAAI0a,GAA4D,CACrE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIjO,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmO,EAAmC,CACvC,YAAY5a,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI8N,GAA2C,CACpD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG9N,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI4N,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG5N,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,QAAS,CACP,OAAO,IAAIyN,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAI7N,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAOE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoO,EAA4C,CAChD,YAAY7a,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqO,EAAgD,CACpD,YAAY9a,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsO,EAAwC,CAC5C,YAAY/a,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIiO,GAAgD,CACzD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGjO,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIgO,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGhO,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuO,EAAqC,CACzC,YAAYhb,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwO,EAAyC,CAC7C,YAAYjb,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyO,EAAiC,CACrC,YAAYlb,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIoO,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGpO,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAImO,GAAqC,CAC9C,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGnO,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0O,EAAsC,CAC1C,YAAYnb,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,6BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,6BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,6BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,6BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2O,EAA0C,CAC9C,YAAYpb,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4O,EAAkC,CACtC,YAAYrb,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIuO,GAA0C,CACnD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvO,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIsO,GAAsC,CAC/C,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGtO,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,wBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6O,EAA8D,CAClE,YAAYtb,EAAM,CAChB,KAAK,KAAOA,CAChB,CASE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,wDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8O,EAAsD,CAC1D,YAAYvb,EAAM,CAChB,KAAK,KAAOA,CAChB,CAQE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+O,EAA0D,CAC9D,YAAYxb,EAAM,CAChB,KAAK,KAAOA,CAChB,CAUE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgP,EAA2D,CAC/D,YAAYzb,EAAM,CAChB,KAAK,KAAOA,CAChB,CAOE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oDACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiP,EAA8C,CAClD,YAAY1b,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,sCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkP,EAAkD,CACtD,YAAY3b,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,2CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmP,EAA0C,CAC9C,YAAY5b,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI8O,GAAkD,CAC3D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG9O,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,cAAe,CACb,OAAO,IAAI0O,GAAsD,CAC/D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,sBAAuB,CACrB,OAAO,IAAID,GAA8D,CACvE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,mBAAoB,CAClB,OAAO,IAAIG,GAA2D,CACpE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,kBAAmB,CACjB,OAAO,IAAID,GAA0D,CACnE,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAO3O,EAAe,CACpB,OAAO,IAAI6O,GAA8C,CACvD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG7O,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoP,EAA4C,CAChD,YAAY7b,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqP,EAAgD,CACpD,YAAY9b,EAAM,CAChB,KAAK,KAAOA,CAChB,CAIE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsP,EAAwC,CAC5C,YAAY/b,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIiP,GAAgD,CACzD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGjP,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIgP,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGhP,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuP,EAA2C,CAC/C,YAAYhc,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwP,EAA+C,CACnD,YAAYjc,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyP,EAAuC,CAC3C,YAAYlc,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIoP,GAA+C,CACxD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGpP,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAImP,GAA2C,CACpD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGnP,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0P,EAA+C,CACnD,YAAYnc,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,uCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2P,EAAmD,CACvD,YAAYpc,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4P,EAA2C,CAC/C,YAAYrc,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIuP,GAAmD,CAC5D,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvP,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIsP,GAA+C,CACxD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGtP,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAQE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,kCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6P,EAAqC,CACzC,YAAYtc,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8P,EAAyC,CAC7C,YAAYvc,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+P,EAAiC,CACrC,YAAYxc,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI0P,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG1P,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIyP,GAAqC,CAC9C,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGzP,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgQ,EAAqC,CACzC,YAAYzc,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,4BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMiQ,EAAyC,CAC7C,YAAY1c,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,iCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMkQ,EAAiC,CACrC,YAAY3c,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI6P,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG7P,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAI4P,GAAqC,CAC9C,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG5P,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,uBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMmQ,EAAkD,CACtD,YAAY5c,EAAM,CAChB,KAAK,KAAOA,CAChB,CAKE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,0CACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMoQ,EAA4C,CAChD,YAAY7c,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,cAAe,CACb,OAAO,IAAI4c,GAAkD,CAC3D,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAInQ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,mCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMqQ,EAAgD,CACpD,YAAY9c,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,wCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMsQ,EAAwC,CAC5C,YAAY/c,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIiQ,GAAgD,CACzD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGjQ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIgQ,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGhQ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAKE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,8BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMuQ,EAA4C,CAChD,YAAYhd,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,oCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMwQ,EAAgD,CACpD,YAAYjd,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,yCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMyQ,EAAwC,CAC5C,YAAYld,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIoQ,GAAgD,CACzD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGpQ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAImQ,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGnQ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,+BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM0Q,EAAoC,CACxC,YAAYnd,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM2Q,EAAwC,CAC5C,YAAYpd,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM4Q,EAAgC,CACpC,YAAYrd,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAIuQ,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvQ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIsQ,GAAoC,CAC7C,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGtQ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM6Q,EAAoC,CACxC,YAAYtd,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,2BACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM8Q,EAAwC,CAC5C,YAAYvd,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,IAAIyM,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,OAAOA,EAAY,CACjB,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,SACR,YAAa,gCACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAM+Q,EAAgC,CACpC,YAAYxd,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,QAAQ6M,EAAe,CACrB,OAAO,IAAI0Q,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAG1Q,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,OAAOA,EAAe,CACpB,OAAO,IAAIyQ,GAAoC,CAC7C,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGzQ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAIJ,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,sBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,SAC/B,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,sBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,YAAaA,GAAA,YAAAA,EAAY,UACzB,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CASA,MAAMgR,EAA2B,CAC/B,YAAYzd,EAAM,CAChB,KAAK,KAAOA,CAChB,CACE,aAAc,CACZ,OAAO,IAAIyO,GAAsC,CAC/C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,gBAAiB,CACf,OAAO,IAAIG,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIU,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,YAAa,CACX,OAAO,IAAIW,GAAqC,CAC9C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,OAAQ,CACN,OAAO,IAAIH,GAAgC,CACzC,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIL,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,UAAW,CACT,OAAO,IAAIW,GAAmC,CAC5C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,WAAY,CACV,OAAO,IAAIkB,GAAoC,CAC7C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,gBAAiB,CACf,OAAO,IAAIZ,GAAyC,CAClD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIH,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIkB,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,SAAU,CACR,OAAO,IAAII,GAAkC,CAC3C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,WAAY,CACV,OAAO,IAAI0E,GAAoC,CAC7C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,OAAQ,CACN,OAAO,IAAIC,GAAgC,CACzC,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,UAAW,CACT,OAAO,IAAI4B,GAAmC,CAC5C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,QAAS,CACP,OAAO,IAAIU,GAAiC,CAC1C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,UAAW,CACT,OAAO,IAAIG,GAAmC,CAC5C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,UAAW,CACT,OAAO,IAAI2B,GAAmC,CAC5C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,kBAAmB,CACjB,OAAO,IAAIvB,GAA2C,CACpD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,oBAAqB,CACnB,OAAO,IAAIK,GAA6C,CACtD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAWE,mBAAoB,CAClB,OAAO,IAAIK,GAA4C,CACrD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,kBAAmB,CACjB,OAAO,IAAIG,GAA2C,CACpD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAME,cAAe,CACb,OAAO,IAAIG,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,QAAS,CACP,OAAO,IAAIa,GAAiC,CAC1C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIH,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,cAAe,CACb,OAAO,IAAImB,GAAuC,CAChD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,SAAU,CACR,OAAO,IAAIb,GAAkC,CAC3C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,iBAAkB,CAChB,OAAO,IAAIO,GAA0C,CACnD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIG,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAOE,QAAS,CACP,OAAO,IAAIS,GAAiC,CAC1C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIO,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,eAAgB,CACd,OAAO,IAAIG,GAAwC,CACjD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,OAAQ,CACN,OAAO,IAAIG,GAAgC,CACzC,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,OAAQ,CACN,OAAO,IAAIG,GAAgC,CACzC,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAK,CACH,OAAO,IAAItF,GAA6B,CACtC,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,YAAa,CACX,OAAO,IAAItG,GAAqC,CAC9C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAKE,YAAa,CACX,OAAO,IAAIhF,GAAqC,CAC9C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,QAAS,CACP,OAAO,IAAI+P,GAAiC,CAC1C,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,4BAA4B9P,EAAe,CACzC,OAAO,IAAIuJ,GAA+C,CACxD,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGvJ,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,kBAAmB,CACjB,OAAO,IAAIwP,GAA2C,CACpD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,0CAA0CxP,EAAe,CACvD,OAAO,IAAImF,GAA6D,CACtE,SAAU,CACR,GAAG,KAAK,KAAK,SACb,GAAGnF,CACJ,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CAIE,iBAAkB,CAChB,OAAO,IAAIkC,GAA0C,CACnD,SAAU,CACR,GAAG,KAAK,KAAK,QACd,EACD,eAAgB,KAAK,KAAK,eAC1B,QAAS,KAAK,KAAK,OACzB,CAAK,CACL,CACE,IAAItC,EAAY,CACd,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,MACR,YAAa,gBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CAIE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,GAAGG,GAAA,YAAAA,EAAY,OACvB,CACA,EAAO,KAAK,KAAK,cAAc,CAC/B,CACE,KAAKA,EAAY,CACf,OAAO,IAAIH,EAAW,CACpB,QAAS,KAAK,KAAK,QACnB,OAAQ,OACR,YAAa,gBACb,cAAe,KAAK,KAAK,SACzB,QAAS,CACP,eAAgB,mBAChB,GAAGG,GAAA,YAAAA,EAAY,OAChB,EACD,KAAMA,GAAA,YAAAA,EAAY,IACxB,EAAO,KAAK,KAAK,cAAc,CAC/B,CACA,CAEA,MAAMiR,EAAQ,CACZ,YAAY1d,EAAM,CAChB4F,GAAgB,KAAM,iBAAkB,MAAM,EAC9CA,GAAgB,KAAM,UAAW,MAAM,EACvC,KAAK,eAAiB5F,EAAK,eAC3B,KAAK,QAAUA,EAAK,SAAW,gDACnC,CAKE,eAAe6M,EAAe,CAC5B,OAAO,IAAI4Q,GAA2B,CACpC,SAAU,CACR,GAAG5Q,CACJ,EACD,eAAgB,KAAK,eACrB,QAAS,KAAK,OACpB,CAAK,CACL,CACA,CAqjIA,SAAS8Q,GAA8BC,EAAWC,EAAS,CACzD,OAAO,IAAIH,GAAQ,CACjB,eAAgBE,EAAU,QAC1B,QAASC,CACb,CAAG,CACH,CC3lrBO,SAASC,IAA4B,CACpC,MAAAC,EAAa,YACb7b,EAAW,2BACXC,EAAe,mCACf6b,EAAU,kDACVC,EAAS,iDACTC,EAAe,qVACjB,IAAAC,EAQF,GANSA,EAAAD,EACN,MAAM,GAAG,EACT,IAAK9b,GAAkBA,EAAM,QAAQ,eAAgB2b,CAAU,CAAC,EASnE,CAACI,EACD,CACA,MAAMC,EAAc,CAClB,GACA,GACA,GACA,GACA,GACA,CAACD,GAAU,iBAEV,EAAA,OAAO,OAAO,EACd,KAAK,IAAI,EACZ,MAAM,IAAI,MACR,yDAAyDC,CAAW,8CACtE,CAAA,CAGF,MAAMC,EAAiBlZ,GAA6C,CAClE,KAAM6Y,EACN,WAAAD,EACA,YAAa,CACX,SAAA7b,EACA,aAAAC,CACF,EACA,OAAAgc,CAAA,CACD,EAEKG,EAAiBpV,GAAqB,CAC1C,KAAM+U,CAAA,CACP,EAOM,OALQ3c,GAAa,CAE1B,YAAa,CAAC+c,EAA8BC,CAA4B,CAAA,CACzE,CAGH,CAEO,SAASC,IAAkB,CAChC,MAAMC,EAASV,GAA0B,EAYlC,OAHSH,GAA8Ba,CAAM,EAAE,eAAe,CACnE,WATiB,WASjB,CACD,CAEH,CA2BA,eAAsBC,GAAcC,EAAqC,CACnE,GAAA,CACF,MAAMC,EAAa,MAAMD,EAAQ,aAAa,MAAM,QAAQ,EAC5D,eAAQ,IAAI,cAAeC,EAAW,KAAK,OAAO,EAC3CA,EAAW,KAAK,cAChB/c,EAAO,CACN,cAAA,MAAM,6BAA8BA,CAAK,EAC3CA,CAAA,CAEV,CAGA,eAAsBgd,GACpBF,EACA,CACI,GAAA,CACF,MAAMG,EAAW,MAAMH,EACpB,mBAAA,EACA,IAAI,CACH,UAAW,CACT,OAAQ,EAAA,CAEX,CAAA,EACA,QAAQ,EACX,eAAQ,IAAI,sBAAuBG,EAAS,KAAK,OAAO,EACjDA,EAAS,KAAK,cACdjd,EAAO,CACN,cAAA,MAAM,qCAAsCA,CAAK,EACnDA,CAAA,CAEV,CAGA,eAAsBkd,GAAYJ,EAAqC,CACjE,GAAA,CACI,MAAAK,EAAS,MAAML,EAAQ,GAAA,EAAK,SAAS,IAAI,EAAE,QAAQ,EACzD,eAAQ,IAAI,aAAcK,EAAO,KAAK,OAAO,EACtCA,EAAO,KAAK,cACZnd,EAAO,CACN,cAAA,MAAM,4BAA6BA,CAAK,EAC1CA,CAAA,CAEV,CCnJA,SAASod,GACP7hB,EACAG,EACA2hB,EAAuB,CAAC,EACxB/iB,EAAO,SACY,CACnB,OAAOc,GAAS,CACd,IAAK,SACL,OAAAM,EACA,KAAAH,EACA,QAAS,CAAC,SAAU,SAAU,MAAO,aAAc,GAAG8hB,CAAU,EAChE,WAAY,CAAE,KAAA/iB,CAAK,CAAA,CACpB,CACH,CCPO,SAASgjB,GAA4BC,EAA8B,CACxE,MAAMT,EAAUH,GAAgB,EAE1Ba,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,UAAU,IACrB,0BACA,MACA,SACA,UACA,QACF,EAEM,MAAAC,EAAQ,SAAS,cAAc,IAAI,EACzCA,EAAM,YAAc,yBACpBA,EAAM,UAAU,IAAI,UAAW,YAAa,MAAM,EAClDD,EAAa,YAAYC,CAAK,EAExB,MAAAC,EAAO,SAAS,cAAc,GAAG,EACvCA,EAAK,YACH,oJACFA,EAAK,UAAU,IAAI,UAAW,gBAAiB,MAAM,EACrDF,EAAa,YAAYE,CAAI,EAEvB,MAAAC,EAAkB,SAAS,cAAc,KAAK,EACpDA,EAAgB,UAAU,IAAI,OAAQ,YAAa,MAAM,EAEnD,MAAAC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,GAAK,cAChBA,EAAW,UAAU,IACnB,OACA,MACA,SACA,cACA,gBACA,eACF,EACAA,EAAW,YAAc,uCAEnB,MAAAC,EAAkB1gB,GAAkB,CACxCygB,EAAW,YAAc,KAAK,UAAUzgB,EAAM,KAAM,CAAC,CACvD,EAEM2gB,EAAgB9d,GAAmB,CAC5B4d,EAAA,YAAc,UAAU5d,aAAiB,MAAQA,EAAM,QAAU,OAAOA,CAAK,CAAC,GAC9E4d,EAAA,UAAU,IAAI,cAAc,CACzC,EAEMG,EAAkB,IAAM,CACjBH,EAAA,UAAU,OAAO,cAAc,CAC5C,EAEMI,EAAgBZ,GACpB,0DACAO,CACF,EACAK,EAAc,SAAW,GACzBA,EAAc,UAAU,IAAI,SAAU,aAAc,oBAAoB,EACxEA,EAAc,MACZ,gEAEuBZ,GAAa,iBAAkBO,CAAe,EACtD,iBAAiB,QAAS,SAAY,CACrCI,EAAA,EAChBH,EAAW,YAAc,yBACrB,GAAA,CACI,MAAAzgB,EAAO,MAAM0f,GAAcC,CAAO,EACxCe,EAAe1gB,CAAI,QACZ6C,EAAO,CACd8d,EAAa9d,CAAK,CAAA,CACpB,CACD,EAE+Bod,GAC9B,yBACAO,CACF,EACwB,iBAAiB,QAAS,SAAY,CAC5CI,EAAA,EAChBH,EAAW,YAAc,iCACrB,GAAA,CACI,MAAAzgB,EAAO,MAAM6f,GAAqBF,CAAO,EAC/Ce,EAAe1gB,CAAI,QACZ6C,EAAO,CACd8d,EAAa9d,CAAK,CAAA,CACpB,CACD,EAEsBod,GACrB,yCACAO,CACF,EACe,iBAAiB,QAAS,SAAY,CACnCI,EAAA,EAChBH,EAAW,YAAc,wBACrB,GAAA,CACI,MAAAzgB,EAAO,MAAM+f,GAAYJ,CAAO,EACtCe,EAAe1gB,CAAI,QACZ6C,EAAO,CACVA,aAAiB,OAASA,EAAM,QAAQ,SAAS,cAAc,EACjE8d,EACE,0IACF,EAEAA,EAAa9d,CAAK,CACpB,CACF,CACD,EAGK,MAAAie,EAAiBb,GAAa,mBAAoBO,CAAe,EACvEM,EAAe,SAAW,GACXA,EAAA,UAAU,IAAI,aAAc,oBAAoB,EAC/DA,EAAe,MAAQ,iCAEjB,MAAAC,EAAkBd,GAAa,gBAAiBO,CAAe,EACrEO,EAAgB,SAAW,GACXA,EAAA,UAAU,IAAI,aAAc,oBAAoB,EAChEA,EAAgB,MAAQ,kCAExBV,EAAa,YAAYG,CAAe,EACxCH,EAAa,YAAYI,CAAU,EAEnCL,EAAU,YAAYC,CAAY,CACpC,CC9HC,OAAuC,OAASvrB,GAAA,OAUjDmK,GAAiB,EAEjB,MAAMmhB,GAAY,SAAS,cAAc,KAAK,EAC9CA,GAAU,UAAY,wBACtBpiB,GAAK,YAAYoiB,EAAS,EAE1B,MAAMY,GAAK,SAAS,cAAc,IAAI,EACtCA,GAAG,YAAc,iBACjBA,GAAG,UACD,8EACFZ,GAAU,YAAYY,EAAE,EAExB,MAAMC,GAAI,SAAS,cAAc,GAAG,EACpCA,GAAE,YAAc,+BAChBA,GAAE,UACA,kFACFb,GAAU,YAAYa,EAAC,EAGvBd,GAA4BC,EAAS,EACrCjhB,GAAanB,EAAI","x_google_ignoreList":[0,1,2,6,7,8,9]}